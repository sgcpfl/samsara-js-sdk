{
	"id": 0,
	"name": "samsara-js-sdk",
	"kind": 0,
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 1,
			"name": "AddressesApi",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 17,
					"name": "AddressesApi",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {},
					"children": [
						{
							"id": 18,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 19,
									"name": "new AddressesApi",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 20,
											"name": "configuration",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Configuration"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"id": 17,
										"name": "AddressesApi"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.constructor"
							}
						},
						{
							"id": 51,
							"name": "configuration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true
							},
							"type": {
								"type": "reference",
								"name": "Configuration"
							},
							"defaultValue": "...",
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.configuration"
							}
						},
						{
							"id": 24,
							"name": "createAddress",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/AddressesApi.ts",
									"line": 95,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 25,
									"name": "createAddress",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a new address in the organization.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nCreate an address"
									},
									"parameters": [
										{
											"id": 26,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2,
												"name": "CreateAddressOperationRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "AddressResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 21,
							"name": "createAddressRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/AddressesApi.ts",
									"line": 69,
									"character": 26
								}
							],
							"signatures": [
								{
									"id": 22,
									"name": "createAddressRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a new address in the organization.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nCreate an address"
									},
									"parameters": [
										{
											"id": 23,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2,
												"name": "CreateAddressOperationRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "AddressResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 30,
							"name": "deleteAddress",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/AddressesApi.ts",
									"line": 127,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 31,
									"name": "deleteAddress",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Delete a specific address.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nDelete an address"
									},
									"parameters": [
										{
											"id": 32,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 4,
												"name": "DeleteAddressRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 27,
							"name": "deleteAddressRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/AddressesApi.ts",
									"line": 104,
									"character": 26
								}
							],
							"signatures": [
								{
									"id": 28,
									"name": "deleteAddressRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Delete a specific address.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nDelete an address"
									},
									"parameters": [
										{
											"id": 29,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 4,
												"name": "DeleteAddressRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 36,
							"name": "getAddress",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/AddressesApi.ts",
									"line": 159,
									"character": 20
								}
							],
							"signatures": [
								{
									"id": 37,
									"name": "getAddress",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a specific address.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nRetrieve an address"
									},
									"parameters": [
										{
											"id": 38,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 6,
												"name": "GetAddressRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "AddressResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 33,
							"name": "getAddressRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/AddressesApi.ts",
									"line": 136,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 34,
									"name": "getAddressRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a specific address.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nRetrieve an address"
									},
									"parameters": [
										{
											"id": 35,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 6,
												"name": "GetAddressRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "AddressResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 42,
							"name": "listAddresses",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/AddressesApi.ts",
									"line": 207,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 43,
									"name": "listAddresses",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a list of all addresses in an organization.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nList all addresses"
									},
									"parameters": [
										{
											"id": 44,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 8,
												"name": "ListAddressesRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ListAddressesResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 39,
							"name": "listAddressesRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/AddressesApi.ts",
									"line": 168,
									"character": 26
								}
							],
							"signatures": [
								{
									"id": 40,
									"name": "listAddressesRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a list of all addresses in an organization.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nList all addresses"
									},
									"parameters": [
										{
											"id": 41,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 8,
												"name": "ListAddressesRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ListAddressesResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 70,
							"name": "request",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 47,
									"character": 27
								}
							],
							"signatures": [
								{
									"id": 71,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 72,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "RequestOpts"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.request"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.request"
							}
						},
						{
							"id": 48,
							"name": "updateAddress",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/AddressesApi.ts",
									"line": 246,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 49,
									"name": "updateAddress",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Update a specific address.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nUpdate an address"
									},
									"parameters": [
										{
											"id": 50,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 14,
												"name": "UpdateAddressOperationRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "AddressResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 45,
							"name": "updateAddressRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/AddressesApi.ts",
									"line": 216,
									"character": 26
								}
							],
							"signatures": [
								{
									"id": 46,
									"name": "updateAddressRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Update a specific address.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nUpdate an address"
									},
									"parameters": [
										{
											"id": 47,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 14,
												"name": "UpdateAddressOperationRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "AddressResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 52,
							"name": "withMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 31,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 53,
									"name": "withMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 54,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 55,
											"name": "middlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Middleware"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withMiddleware"
							}
						},
						{
							"id": 63,
							"name": "withPostMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 42,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 64,
									"name": "withPostMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 65,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 66,
											"name": "postMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 67,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 68,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 69,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "ResponseContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "Response"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPostMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPostMiddleware"
							}
						},
						{
							"id": 56,
							"name": "withPreMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 37,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 57,
									"name": "withPreMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 58,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 59,
											"name": "preMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 60,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 61,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 62,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "RequestContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "FetchParams"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPreMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPreMiddleware"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								18
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								51
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								24,
								21,
								30,
								27,
								36,
								33,
								42,
								39,
								70,
								48,
								45,
								52,
								63,
								56
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/AddressesApi.ts",
							"line": 63,
							"character": 25
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BaseAPI"
						}
					]
				},
				{
					"id": 2,
					"name": "CreateAddressOperationRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3,
							"name": "address",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/AddressesApi.ts",
									"line": 36,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "CreateAddressRequest"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/AddressesApi.ts",
							"line": 35,
							"character": 46
						}
					]
				},
				{
					"id": 4,
					"name": "DeleteAddressRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 5,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/AddressesApi.ts",
									"line": 40,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								5
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/AddressesApi.ts",
							"line": 39,
							"character": 37
						}
					]
				},
				{
					"id": 6,
					"name": "GetAddressRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 7,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/AddressesApi.ts",
									"line": 44,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								7
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/AddressesApi.ts",
							"line": 43,
							"character": 34
						}
					]
				},
				{
					"id": 8,
					"name": "ListAddressesRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 10,
							"name": "after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/AddressesApi.ts",
									"line": 49,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 13,
							"name": "createdAfterTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/AddressesApi.ts",
									"line": 52,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 9,
							"name": "limit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/AddressesApi.ts",
									"line": 48,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 11,
							"name": "parentTagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/AddressesApi.ts",
									"line": 50,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 12,
							"name": "tagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/AddressesApi.ts",
									"line": 51,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								10,
								13,
								9,
								11,
								12
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/AddressesApi.ts",
							"line": 47,
							"character": 37
						}
					]
				},
				{
					"id": 14,
					"name": "UpdateAddressOperationRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 16,
							"name": "address",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/AddressesApi.ts",
									"line": 57,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "UpdateAddressRequest"
							}
						},
						{
							"id": 15,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/AddressesApi.ts",
									"line": 56,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								16,
								15
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/AddressesApi.ts",
							"line": 55,
							"character": 46
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						17
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2,
						4,
						6,
						8,
						14
					]
				}
			],
			"sources": [
				{
					"fileName": "apis/AddressesApi.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 73,
			"name": "AssetsApi",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 92,
					"name": "AssetsApi",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {},
					"children": [
						{
							"id": 93,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 94,
									"name": "new AssetsApi",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 95,
											"name": "configuration",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Configuration"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"id": 92,
										"name": "AssetsApi"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.constructor"
							}
						},
						{
							"id": 124,
							"name": "configuration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true
							},
							"type": {
								"type": "reference",
								"name": "Configuration"
							},
							"defaultValue": "...",
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.configuration"
							}
						},
						{
							"id": 143,
							"name": "request",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 47,
									"character": 27
								}
							],
							"signatures": [
								{
									"id": 144,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 145,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "RequestOpts"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.request"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.request"
							}
						},
						{
							"id": 99,
							"name": "v1getAllAssetCurrentLocations",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/AssetsApi.ts",
									"line": 98,
									"character": 39
								}
							],
							"signatures": [
								{
									"id": 100,
									"name": "v1getAllAssetCurrentLocations",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Fetch current locations of all assets.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nList current location for all assets"
									},
									"parameters": [
										{
											"id": 101,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 74,
												"name": "V1getAllAssetCurrentLocationsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "InlineResponse2002"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 96,
							"name": "v1getAllAssetCurrentLocationsRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/AssetsApi.ts",
									"line": 67,
									"character": 42
								}
							],
							"signatures": [
								{
									"id": 97,
									"name": "v1getAllAssetCurrentLocationsRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Fetch current locations of all assets.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nList current location for all assets"
									},
									"parameters": [
										{
											"id": 98,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 74,
												"name": "V1getAllAssetCurrentLocationsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "InlineResponse2002"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 104,
							"name": "v1getAllAssets",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/AssetsApi.ts",
									"line": 126,
									"character": 24
								}
							],
							"signatures": [
								{
									"id": 105,
									"name": "v1getAllAssets",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Fetch all of the assets.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nList all assets"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "InlineResponse2001"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 102,
							"name": "v1getAllAssetsRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/AssetsApi.ts",
									"line": 107,
									"character": 27
								}
							],
							"signatures": [
								{
									"id": 103,
									"name": "v1getAllAssetsRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Fetch all of the assets.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nList all assets"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "InlineResponse2001"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 109,
							"name": "v1getAssetLocation",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/AssetsApi.ts",
									"line": 174,
									"character": 28
								}
							],
							"signatures": [
								{
									"id": 110,
									"name": "v1getAssetLocation",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  List historical locations for a given asset.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nList historical locations for a given asset"
									},
									"parameters": [
										{
											"id": 111,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 78,
												"name": "V1getAssetLocationRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "object"
												}
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 106,
							"name": "v1getAssetLocationRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/AssetsApi.ts",
									"line": 135,
									"character": 31
								}
							],
							"signatures": [
								{
									"id": 107,
									"name": "v1getAssetLocationRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  List historical locations for a given asset.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nList historical locations for a given asset"
									},
									"parameters": [
										{
											"id": 108,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 78,
												"name": "V1getAssetLocationRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "object"
														}
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 115,
							"name": "v1getAssetReefer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/AssetsApi.ts",
									"line": 222,
									"character": 26
								}
							],
							"signatures": [
								{
									"id": 116,
									"name": "v1getAssetReefer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Fetch the reefer-specific stats of an asset.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nList stats for a given reefer"
									},
									"parameters": [
										{
											"id": 117,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 82,
												"name": "V1getAssetReeferRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "V1AssetReeferResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 112,
							"name": "v1getAssetReeferRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/AssetsApi.ts",
									"line": 183,
									"character": 29
								}
							],
							"signatures": [
								{
									"id": 113,
									"name": "v1getAssetReeferRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Fetch the reefer-specific stats of an asset.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nList stats for a given reefer"
									},
									"parameters": [
										{
											"id": 114,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 82,
												"name": "V1getAssetReeferRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "V1AssetReeferResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 121,
							"name": "v1getAssetsReefers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/AssetsApi.ts",
									"line": 278,
									"character": 28
								}
							],
							"signatures": [
								{
									"id": 122,
									"name": "v1getAssetsReefers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Fetches all reefers and reefer-specific stats.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nList stats for all reefers"
									},
									"parameters": [
										{
											"id": 123,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 86,
												"name": "V1getAssetsReefersRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "InlineResponse2003"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 118,
							"name": "v1getAssetsReefersRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/AssetsApi.ts",
									"line": 231,
									"character": 31
								}
							],
							"signatures": [
								{
									"id": 119,
									"name": "v1getAssetsReefersRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Fetches all reefers and reefer-specific stats.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nList stats for all reefers"
									},
									"parameters": [
										{
											"id": 120,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 86,
												"name": "V1getAssetsReefersRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "InlineResponse2003"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 125,
							"name": "withMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 31,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 126,
									"name": "withMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 127,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 128,
											"name": "middlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Middleware"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withMiddleware"
							}
						},
						{
							"id": 136,
							"name": "withPostMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 42,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 137,
									"name": "withPostMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 138,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 139,
											"name": "postMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 140,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 141,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 142,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "ResponseContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "Response"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPostMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPostMiddleware"
							}
						},
						{
							"id": 129,
							"name": "withPreMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 37,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 130,
									"name": "withPreMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 131,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 132,
											"name": "preMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 133,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 134,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 135,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "RequestContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "FetchParams"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPreMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPreMiddleware"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								93
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								124
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								143,
								99,
								96,
								104,
								102,
								109,
								106,
								115,
								112,
								121,
								118,
								125,
								136,
								129
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/AssetsApi.ts",
							"line": 61,
							"character": 22
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BaseAPI"
						}
					]
				},
				{
					"id": 74,
					"name": "V1getAllAssetCurrentLocationsRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 76,
							"name": "endingBefore",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/AssetsApi.ts",
									"line": 34,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 77,
							"name": "limit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/AssetsApi.ts",
									"line": 35,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 75,
							"name": "startingAfter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/AssetsApi.ts",
									"line": 33,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								76,
								77,
								75
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/AssetsApi.ts",
							"line": 32,
							"character": 53
						}
					]
				},
				{
					"id": 78,
					"name": "V1getAssetLocationRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 79,
							"name": "assetId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/AssetsApi.ts",
									"line": 39,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 81,
							"name": "endMs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/AssetsApi.ts",
									"line": 41,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 80,
							"name": "startMs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/AssetsApi.ts",
									"line": 40,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								79,
								81,
								80
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/AssetsApi.ts",
							"line": 38,
							"character": 42
						}
					]
				},
				{
					"id": 82,
					"name": "V1getAssetReeferRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 83,
							"name": "assetId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/AssetsApi.ts",
									"line": 45,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 85,
							"name": "endMs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/AssetsApi.ts",
									"line": 47,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 84,
							"name": "startMs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/AssetsApi.ts",
									"line": 46,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								83,
								85,
								84
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/AssetsApi.ts",
							"line": 44,
							"character": 40
						}
					]
				},
				{
					"id": 86,
					"name": "V1getAssetsReefersRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 88,
							"name": "endMs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/AssetsApi.ts",
									"line": 52,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 90,
							"name": "endingBefore",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/AssetsApi.ts",
									"line": 54,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 91,
							"name": "limit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/AssetsApi.ts",
									"line": 55,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 87,
							"name": "startMs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/AssetsApi.ts",
									"line": 51,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 89,
							"name": "startingAfter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/AssetsApi.ts",
									"line": 53,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								88,
								90,
								91,
								87,
								89
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/AssetsApi.ts",
							"line": 50,
							"character": 42
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						92
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						74,
						78,
						82,
						86
					]
				}
			],
			"sources": [
				{
					"fileName": "apis/AssetsApi.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 146,
			"name": "BetaAPIsApi",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 428,
					"name": "DeleteAttributeEntityTypeEnum",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "export",
								"text": ""
							}
						]
					},
					"children": [
						{
							"id": 430,
							"name": "Asset",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 2046,
									"character": 9
								}
							],
							"defaultValue": "\"asset\""
						},
						{
							"id": 429,
							"name": "Driver",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 2045,
									"character": 10
								}
							],
							"defaultValue": "\"driver\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								430,
								429
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/BetaAPIsApi.ts",
							"line": 2044,
							"character": 41
						}
					]
				},
				{
					"id": 431,
					"name": "GetAttributeEntityTypeEnum",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "export",
								"text": ""
							}
						]
					},
					"children": [
						{
							"id": 433,
							"name": "Asset",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 2054,
									"character": 9
								}
							],
							"defaultValue": "\"asset\""
						},
						{
							"id": 432,
							"name": "Driver",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 2053,
									"character": 10
								}
							],
							"defaultValue": "\"driver\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								433,
								432
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/BetaAPIsApi.ts",
							"line": 2052,
							"character": 38
						}
					]
				},
				{
					"id": 434,
					"name": "GetAttributesByEntityTypeEntityTypeEnum",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "export",
								"text": ""
							}
						]
					},
					"children": [
						{
							"id": 436,
							"name": "Asset",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 2062,
									"character": 9
								}
							],
							"defaultValue": "\"asset\""
						},
						{
							"id": 435,
							"name": "Driver",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 2061,
									"character": 10
								}
							],
							"defaultValue": "\"driver\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								436,
								435
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/BetaAPIsApi.ts",
							"line": 2060,
							"character": 51
						}
					]
				},
				{
					"id": 437,
					"name": "GetDriverEfficiencyDriverActivationStatusEnum",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "export",
								"text": ""
							}
						]
					},
					"children": [
						{
							"id": 438,
							"name": "Active",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 2069,
									"character": 10
								}
							],
							"defaultValue": "\"active\""
						},
						{
							"id": 439,
							"name": "Deactivated",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 2070,
									"character": 15
								}
							],
							"defaultValue": "\"deactivated\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								438,
								439
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/BetaAPIsApi.ts",
							"line": 2068,
							"character": 57
						}
					]
				},
				{
					"id": 238,
					"name": "BetaAPIsApi",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {},
					"children": [
						{
							"id": 239,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 240,
									"name": "new BetaAPIsApi",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 241,
											"name": "configuration",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Configuration"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"id": 238,
										"name": "BetaAPIsApi"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.constructor"
							}
						},
						{
							"id": 406,
							"name": "configuration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true
							},
							"type": {
								"type": "reference",
								"name": "Configuration"
							},
							"defaultValue": "...",
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.configuration"
							}
						},
						{
							"id": 245,
							"name": "createAttribute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 957,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 246,
									"name": "createAttribute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a new attribute in the organization.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] Create an attribute"
									},
									"parameters": [
										{
											"id": 247,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 147,
												"name": "CreateAttributeOperationRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "AttributeExpandedResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 242,
							"name": "createAttributeRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 931,
									"character": 28
								}
							],
							"signatures": [
								{
									"id": 243,
									"name": "createAttributeRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a new attribute in the organization.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] Create an attribute"
									},
									"parameters": [
										{
											"id": 244,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 147,
												"name": "CreateAttributeOperationRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "AttributeExpandedResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 251,
							"name": "createTrailer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 992,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 252,
									"name": "createTrailer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a new trailer asset.     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] Creates a new trailer asset"
									},
									"parameters": [
										{
											"id": 253,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 149,
												"name": "CreateTrailerRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "TrailersCreateTrailerResponseBody"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 248,
							"name": "createTrailerRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 966,
									"character": 26
								}
							],
							"signatures": [
								{
									"id": 249,
									"name": "createTrailerRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a new trailer asset.     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] Creates a new trailer asset"
									},
									"parameters": [
										{
											"id": 250,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 149,
												"name": "CreateTrailerRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "TrailersCreateTrailerResponseBody"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 257,
							"name": "deleteAttribute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 1032,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 258,
									"name": "deleteAttribute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Delete an attribute by id, including all of its applications.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] Deleting an attribute"
									},
									"parameters": [
										{
											"id": 259,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 151,
												"name": "DeleteAttributeRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 254,
							"name": "deleteAttributeRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 1001,
									"character": 28
								}
							],
							"signatures": [
								{
									"id": 255,
									"name": "deleteAttributeRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Delete an attribute by id, including all of its applications.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] Deleting an attribute"
									},
									"parameters": [
										{
											"id": 256,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 151,
												"name": "DeleteAttributeRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 263,
							"name": "deleteDocument",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 1064,
									"character": 24
								}
							],
							"signatures": [
								{
									"id": 264,
									"name": "deleteDocument",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Deletes a single document.     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] Delete document"
									},
									"parameters": [
										{
											"id": 265,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 154,
												"name": "DeleteDocumentRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 260,
							"name": "deleteDocumentRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 1041,
									"character": 27
								}
							],
							"signatures": [
								{
									"id": 261,
									"name": "deleteDocumentRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Deletes a single document.     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] Delete document"
									},
									"parameters": [
										{
											"id": 262,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 154,
												"name": "DeleteDocumentRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 269,
							"name": "deleteGateway",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 1095,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 270,
									"name": "deleteGateway",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Deactivate a gateway     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] Deactivate a gateway"
									},
									"parameters": [
										{
											"id": 271,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 156,
												"name": "DeleteGatewayRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 266,
							"name": "deleteGatewayRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 1072,
									"character": 26
								}
							],
							"signatures": [
								{
									"id": 267,
									"name": "deleteGatewayRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Deactivate a gateway     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] Deactivate a gateway"
									},
									"parameters": [
										{
											"id": 268,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 156,
												"name": "DeleteGatewayRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 275,
							"name": "deleteTrailer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 1126,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 276,
									"name": "deleteTrailer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Delete a trailer with the given ID.     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] Delete a trailer"
									},
									"parameters": [
										{
											"id": 277,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 158,
												"name": "DeleteTrailerRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 272,
							"name": "deleteTrailerRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 1103,
									"character": 26
								}
							],
							"signatures": [
								{
									"id": 273,
									"name": "deleteTrailerRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Delete a trailer with the given ID.     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] Delete a trailer"
									},
									"parameters": [
										{
											"id": 274,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 158,
												"name": "DeleteTrailerRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 281,
							"name": "getAttribute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 1165,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 282,
									"name": "getAttribute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetch an attribute by id, including all of its applications.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] Retrieve an attribute"
									},
									"parameters": [
										{
											"id": 283,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 160,
												"name": "GetAttributeRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "AttributeExpandedResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 278,
							"name": "getAttributeRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 1134,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 279,
									"name": "getAttributeRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetch an attribute by id, including all of its applications.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] Retrieve an attribute"
									},
									"parameters": [
										{
											"id": 280,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 160,
												"name": "GetAttributeRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "AttributeExpandedResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 287,
							"name": "getAttributesByEntityType",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 1209,
									"character": 35
								}
							],
							"signatures": [
								{
									"id": 288,
									"name": "getAttributesByEntityType",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetch all attributes in an organization associated with either drivers or assets.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] List all attributes by entity type"
									},
									"parameters": [
										{
											"id": 289,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 163,
												"name": "GetAttributesByEntityTypeRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "GetAttributesByEntityTypeResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 284,
							"name": "getAttributesByEntityTypeRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 1174,
									"character": 38
								}
							],
							"signatures": [
								{
									"id": 285,
									"name": "getAttributesByEntityTypeRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetch all attributes in an organization associated with either drivers or assets.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] List all attributes by entity type"
									},
									"parameters": [
										{
											"id": 286,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 163,
												"name": "GetAttributesByEntityTypeRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "GetAttributesByEntityTypeResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 292,
							"name": "getComplianceSettings",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 1237,
									"character": 31
								}
							],
							"signatures": [
								{
									"id": 293,
									"name": "getComplianceSettings",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get organization\\'s compliance settings, including carrier name, office address, and DOT number     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] Get compliance settings"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "SettingsGetComplianceSettingsResponseBody"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 290,
							"name": "getComplianceSettingsRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 1218,
									"character": 34
								}
							],
							"signatures": [
								{
									"id": 291,
									"name": "getComplianceSettingsRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get organization\\'s compliance settings, including carrier name, office address, and DOT number     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] Get compliance settings"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SettingsGetComplianceSettingsResponseBody"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 297,
							"name": "getDocument",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 1269,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 298,
									"name": "getDocument",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a single document.     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] Fetch document"
									},
									"parameters": [
										{
											"id": 299,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 167,
												"name": "GetDocumentRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "DocumentsGetDocumentResponseBody"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 294,
							"name": "getDocumentRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 1246,
									"character": 24
								}
							],
							"signatures": [
								{
									"id": 295,
									"name": "getDocumentRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a single document.     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] Fetch document"
									},
									"parameters": [
										{
											"id": 296,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 167,
												"name": "GetDocumentRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "DocumentsGetDocumentResponseBody"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 303,
							"name": "getDocumentTypes",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 1301,
									"character": 26
								}
							],
							"signatures": [
								{
									"id": 304,
									"name": "getDocumentTypes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a list of the organization document types.     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] Fetch document types"
									},
									"parameters": [
										{
											"id": 305,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 169,
												"name": "GetDocumentTypesRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "DocumentTypesGetDocumentTypesResponseBody"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 300,
							"name": "getDocumentTypesRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 1278,
									"character": 29
								}
							],
							"signatures": [
								{
									"id": 301,
									"name": "getDocumentTypesRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a list of the organization document types.     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] Fetch document types"
									},
									"parameters": [
										{
											"id": 302,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 169,
												"name": "GetDocumentTypesRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "DocumentTypesGetDocumentTypesResponseBody"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 309,
							"name": "getDocuments",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 1357,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 310,
									"name": "getDocuments",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get all documents for the given time range.     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] Fetch all documents"
									},
									"parameters": [
										{
											"id": 311,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 171,
												"name": "GetDocumentsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "DocumentsGetDocumentsResponseBody"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 306,
							"name": "getDocumentsRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 1310,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 307,
									"name": "getDocumentsRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get all documents for the given time range.     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] Fetch all documents"
									},
									"parameters": [
										{
											"id": 308,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 171,
												"name": "GetDocumentsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "DocumentsGetDocumentsResponseBody"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 314,
							"name": "getDriverAppSettings",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 1385,
									"character": 30
								}
							],
							"signatures": [
								{
									"id": 315,
									"name": "getDriverAppSettings",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get driver app settings.     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] Get driver app settings"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "SettingsGetDriverAppSettingsResponseBody"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 312,
							"name": "getDriverAppSettingsRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 1366,
									"character": 33
								}
							],
							"signatures": [
								{
									"id": 313,
									"name": "getDriverAppSettingsRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get driver app settings.     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] Get driver app settings"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SettingsGetDriverAppSettingsResponseBody"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 319,
							"name": "getDriverEfficiency",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 1441,
									"character": 29
								}
							],
							"signatures": [
								{
									"id": 320,
									"name": "getDriverEfficiency",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get all drivers\\' efficiencies.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] List driver efficiency"
									},
									"parameters": [
										{
											"id": 321,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 177,
												"name": "GetDriverEfficiencyRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "DriverEfficienciesResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 316,
							"name": "getDriverEfficiencyRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 1394,
									"character": 32
								}
							],
							"signatures": [
								{
									"id": 317,
									"name": "getDriverEfficiencyRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get all drivers\\' efficiencies.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] List driver efficiency"
									},
									"parameters": [
										{
											"id": 318,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 177,
												"name": "GetDriverEfficiencyRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "DriverEfficienciesResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 325,
							"name": "getGateways",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 1477,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 326,
									"name": "getGateways",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "List all gateways     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] List all gateways"
									},
									"parameters": [
										{
											"id": 327,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 185,
												"name": "GetGatewaysRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "GatewaysGetGatewaysResponseBody"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 322,
							"name": "getGatewaysRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 1450,
									"character": 24
								}
							],
							"signatures": [
								{
									"id": 323,
									"name": "getGatewaysRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "List all gateways     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] List all gateways"
									},
									"parameters": [
										{
											"id": 324,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 185,
												"name": "GetGatewaysRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "GatewaysGetGatewaysResponseBody"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 331,
							"name": "getTrailer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 1509,
									"character": 20
								}
							],
							"signatures": [
								{
									"id": 332,
									"name": "getTrailer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Retrieve a trailer with given ID.     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] Retrieve a trailer"
									},
									"parameters": [
										{
											"id": 333,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 188,
												"name": "GetTrailerRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "TrailersGetTrailerResponseBody"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 328,
							"name": "getTrailerRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 1486,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 329,
									"name": "getTrailerRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Retrieve a trailer with given ID.     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] Retrieve a trailer"
									},
									"parameters": [
										{
											"id": 330,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 188,
												"name": "GetTrailerRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "TrailersGetTrailerResponseBody"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 337,
							"name": "getTrailerStatsFeed",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 1565,
									"character": 29
								}
							],
							"signatures": [
								{
									"id": 338,
									"name": "getTrailerStatsFeed",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Follow a feed of trailer stats.  The first call to this endpoint will provide the most recent stats for each trailer and an `endCursor`.  Providing the `endCursor` value to the `after` query parameter will fetch all updates since the previous API call.  If `hasNextPage` is false, no new data is immediately available. Please wait a minimum of 5 seconds before making a subsequent request.     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] Get trailer stats feed"
									},
									"parameters": [
										{
											"id": 339,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 190,
												"name": "GetTrailerStatsFeedRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "TrailerStatsGetTrailerStatsFeedResponseBody"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 334,
							"name": "getTrailerStatsFeedRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 1518,
									"character": 32
								}
							],
							"signatures": [
								{
									"id": 335,
									"name": "getTrailerStatsFeedRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Follow a feed of trailer stats.  The first call to this endpoint will provide the most recent stats for each trailer and an `endCursor`.  Providing the `endCursor` value to the `after` query parameter will fetch all updates since the previous API call.  If `hasNextPage` is false, no new data is immediately available. Please wait a minimum of 5 seconds before making a subsequent request.     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] Get trailer stats feed"
									},
									"parameters": [
										{
											"id": 336,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 190,
												"name": "GetTrailerStatsFeedRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "TrailerStatsGetTrailerStatsFeedResponseBody"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 343,
							"name": "getTrailerStatsHistory",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 1637,
									"character": 32
								}
							],
							"signatures": [
								{
									"id": 344,
									"name": "getTrailerStatsHistory",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns trailer stats during the given time range for all trailers. This can be optionally filtered by tags or specific trailer IDs.     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] Get trailer stats history"
									},
									"parameters": [
										{
											"id": 345,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 197,
												"name": "GetTrailerStatsHistoryRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "TrailerStatsGetTrailerStatsHistoryResponseBody"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 340,
							"name": "getTrailerStatsHistoryRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 1574,
									"character": 35
								}
							],
							"signatures": [
								{
									"id": 341,
									"name": "getTrailerStatsHistoryRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns trailer stats during the given time range for all trailers. This can be optionally filtered by tags or specific trailer IDs.     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] Get trailer stats history"
									},
									"parameters": [
										{
											"id": 342,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 197,
												"name": "GetTrailerStatsHistoryRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "TrailerStatsGetTrailerStatsHistoryResponseBody"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 349,
							"name": "getTrailerStatsSnapshot",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 1693,
									"character": 33
								}
							],
							"signatures": [
								{
									"id": 350,
									"name": "getTrailerStatsSnapshot",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the last known stats of all trailers at the given `time`. If no `time` is specified, the current time is used.     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] Get trailer stats"
									},
									"parameters": [
										{
											"id": 351,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 206,
												"name": "GetTrailerStatsSnapshotRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "TrailerStatsGetTrailerStatsSnapshotResponseBody"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 346,
							"name": "getTrailerStatsSnapshotRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 1646,
									"character": 36
								}
							],
							"signatures": [
								{
									"id": 347,
									"name": "getTrailerStatsSnapshotRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the last known stats of all trailers at the given `time`. If no `time` is specified, the current time is used.     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] Get trailer stats"
									},
									"parameters": [
										{
											"id": 348,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 206,
												"name": "GetTrailerStatsSnapshotRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "TrailerStatsGetTrailerStatsSnapshotResponseBody"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 355,
							"name": "listTrailers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 1737,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 356,
									"name": "listTrailers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "List all trailers.     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] List all trailers"
									},
									"parameters": [
										{
											"id": 357,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 213,
												"name": "ListTrailersRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "TrailersListTrailersResponseBody"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 352,
							"name": "listTrailersRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 1702,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 353,
									"name": "listTrailersRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "List all trailers.     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] List all trailers"
									},
									"parameters": [
										{
											"id": 354,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 213,
												"name": "ListTrailersRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "TrailersListTrailersResponseBody"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 361,
							"name": "patchComplianceSettings",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 1772,
									"character": 33
								}
							],
							"signatures": [
								{
									"id": 362,
									"name": "patchComplianceSettings",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Update organization\\'s compliance settings, including carrier name, office address, and DOT number     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] Update compliance settings"
									},
									"parameters": [
										{
											"id": 363,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 218,
												"name": "PatchComplianceSettingsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "SettingsPatchComplianceSettingsResponseBody"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 358,
							"name": "patchComplianceSettingsRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 1746,
									"character": 36
								}
							],
							"signatures": [
								{
									"id": 359,
									"name": "patchComplianceSettingsRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Update organization\\'s compliance settings, including carrier name, office address, and DOT number     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] Update compliance settings"
									},
									"parameters": [
										{
											"id": 360,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 218,
												"name": "PatchComplianceSettingsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SettingsPatchComplianceSettingsResponseBody"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 367,
							"name": "patchDriverAppSettings",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 1807,
									"character": 32
								}
							],
							"signatures": [
								{
									"id": 368,
									"name": "patchDriverAppSettings",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Update driver app settings.     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] Update driver app settings"
									},
									"parameters": [
										{
											"id": 369,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 220,
												"name": "PatchDriverAppSettingsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "SettingsPatchDriverAppSettingsResponseBody"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 364,
							"name": "patchDriverAppSettingsRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 1781,
									"character": 35
								}
							],
							"signatures": [
								{
									"id": 365,
									"name": "patchDriverAppSettingsRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Update driver app settings.     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] Update driver app settings"
									},
									"parameters": [
										{
											"id": 366,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 220,
												"name": "PatchDriverAppSettingsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SettingsPatchDriverAppSettingsResponseBody"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 373,
							"name": "patchEquipment",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 1846,
									"character": 24
								}
							],
							"signatures": [
								{
									"id": 374,
									"name": "patchEquipment",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Update an equipment.  **Note** this implementation of patch uses [the JSON merge patch](https://tools.ietf.org/html/rfc7396) proposed standard.  This means that any fields included in the patch request will _overwrite_ fields which exist on the target resource.  For arrays, this means any array included in the request will _replace_ the array that exists at the specified path, it will not _add_ to the existing array     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] Update an equipment"
									},
									"parameters": [
										{
											"id": 375,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 222,
												"name": "PatchEquipmentRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "EquipmentPatchEquipmentResponseBody"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 370,
							"name": "patchEquipmentRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 1816,
									"character": 27
								}
							],
							"signatures": [
								{
									"id": 371,
									"name": "patchEquipmentRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Update an equipment.  **Note** this implementation of patch uses [the JSON merge patch](https://tools.ietf.org/html/rfc7396) proposed standard.  This means that any fields included in the patch request will _overwrite_ fields which exist on the target resource.  For arrays, this means any array included in the request will _replace_ the array that exists at the specified path, it will not _add_ to the existing array     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] Update an equipment"
									},
									"parameters": [
										{
											"id": 372,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 222,
												"name": "PatchEquipmentRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EquipmentPatchEquipmentResponseBody"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 379,
							"name": "postDocument",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 1881,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 380,
									"name": "postDocument",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a single document.     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] Create document"
									},
									"parameters": [
										{
											"id": 381,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 225,
												"name": "PostDocumentRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "DocumentsPostDocumentResponseBody"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 376,
							"name": "postDocumentRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 1855,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 377,
									"name": "postDocumentRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a single document.     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] Create document"
									},
									"parameters": [
										{
											"id": 378,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 225,
												"name": "PostDocumentRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "DocumentsPostDocumentResponseBody"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 385,
							"name": "postGateway",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 1916,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 386,
									"name": "postGateway",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Activate a new gateway. To activate a device and associate it with your organization, enter its serial number. Each device\\'s serial number can also be found on its label or packaging, or from your order confirmation email. A Not Found error could mean that the serial was not found or it has already been activated     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] Activate a new gateway"
									},
									"parameters": [
										{
											"id": 387,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 227,
												"name": "PostGatewayRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "GatewaysPostGatewayResponseBody"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 382,
							"name": "postGatewayRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 1890,
									"character": 24
								}
							],
							"signatures": [
								{
									"id": 383,
									"name": "postGatewayRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Activate a new gateway. To activate a device and associate it with your organization, enter its serial number. Each device\\'s serial number can also be found on its label or packaging, or from your order confirmation email. A Not Found error could mean that the serial was not found or it has already been activated     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] Activate a new gateway"
									},
									"parameters": [
										{
											"id": 384,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 227,
												"name": "PostGatewayRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "GatewaysPostGatewayResponseBody"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 425,
							"name": "request",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 47,
									"character": 27
								}
							],
							"signatures": [
								{
									"id": 426,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 427,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "RequestOpts"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.request"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.request"
							}
						},
						{
							"id": 391,
							"name": "updateAttribute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 1955,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 392,
									"name": "updateAttribute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Updates an attribute in the organization.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] Update an attribute"
									},
									"parameters": [
										{
											"id": 393,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 229,
												"name": "UpdateAttributeOperationRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "AttributeExpandedResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 388,
							"name": "updateAttributeRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 1925,
									"character": 28
								}
							],
							"signatures": [
								{
									"id": 389,
									"name": "updateAttributeRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Updates an attribute in the organization.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] Update an attribute"
									},
									"parameters": [
										{
											"id": 390,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 229,
												"name": "UpdateAttributeOperationRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "AttributeExpandedResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 397,
							"name": "updateEngineImmobilizerState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 1994,
									"character": 38
								}
							],
							"signatures": [
								{
									"id": 398,
									"name": "updateEngineImmobilizerState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Update the engine immobilizer state of a vehicle. This requires an engine immobilizer to be installed on the vehicle gateway. The desired engine immobilizer state will be set on the vehicle when the vehicle gateway is online, and the engine is not running.     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] Update engine immobilizer state of a vehicle."
									},
									"parameters": [
										{
											"id": 399,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 232,
												"name": "UpdateEngineImmobilizerStateRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "EngineImmobilizerUpdateEngineImmobilizerStateResponseBody"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 394,
							"name": "updateEngineImmobilizerStateRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 1964,
									"character": 41
								}
							],
							"signatures": [
								{
									"id": 395,
									"name": "updateEngineImmobilizerStateRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Update the engine immobilizer state of a vehicle. This requires an engine immobilizer to be installed on the vehicle gateway. The desired engine immobilizer state will be set on the vehicle when the vehicle gateway is online, and the engine is not running.     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] Update engine immobilizer state of a vehicle."
									},
									"parameters": [
										{
											"id": 396,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 232,
												"name": "UpdateEngineImmobilizerStateRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EngineImmobilizerUpdateEngineImmobilizerStateResponseBody"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 403,
							"name": "updateTrailer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 2033,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 404,
									"name": "updateTrailer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Update a trailer.  **Note** this implementation of patch uses [the JSON merge patch](https://tools.ietf.org/html/rfc7396) proposed standard.  This means that any fields included in the patch request will _overwrite_ fields which exist on the target resource.  For arrays, this means any array included in the request will _replace_ the array that exists at the specified path, it will not _add_ to the existing array     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] Update a trailer"
									},
									"parameters": [
										{
											"id": 405,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 235,
												"name": "UpdateTrailerRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "TrailersUpdateTrailerResponseBody"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 400,
							"name": "updateTrailerRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 2003,
									"character": 26
								}
							],
							"signatures": [
								{
									"id": 401,
									"name": "updateTrailerRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Update a trailer.  **Note** this implementation of patch uses [the JSON merge patch](https://tools.ietf.org/html/rfc7396) proposed standard.  This means that any fields included in the patch request will _overwrite_ fields which exist on the target resource.  For arrays, this means any array included in the request will _replace_ the array that exists at the specified path, it will not _add_ to the existing array     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\n[beta] Update a trailer"
									},
									"parameters": [
										{
											"id": 402,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 235,
												"name": "UpdateTrailerRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "TrailersUpdateTrailerResponseBody"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 407,
							"name": "withMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 31,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 408,
									"name": "withMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 409,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 410,
											"name": "middlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Middleware"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withMiddleware"
							}
						},
						{
							"id": 418,
							"name": "withPostMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 42,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 419,
									"name": "withPostMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 420,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 421,
											"name": "postMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 422,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 423,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 424,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "ResponseContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "Response"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPostMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPostMiddleware"
							}
						},
						{
							"id": 411,
							"name": "withPreMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 37,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 412,
									"name": "withPreMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 413,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 414,
											"name": "preMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 415,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 416,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 417,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "RequestContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "FetchParams"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPreMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPreMiddleware"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								239
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								406
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								245,
								242,
								251,
								248,
								257,
								254,
								263,
								260,
								269,
								266,
								275,
								272,
								281,
								278,
								287,
								284,
								292,
								290,
								297,
								294,
								303,
								300,
								309,
								306,
								314,
								312,
								319,
								316,
								325,
								322,
								331,
								328,
								337,
								334,
								343,
								340,
								349,
								346,
								355,
								352,
								361,
								358,
								367,
								364,
								373,
								370,
								379,
								376,
								385,
								382,
								425,
								391,
								388,
								397,
								394,
								403,
								400,
								407,
								418,
								411
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/BetaAPIsApi.ts",
							"line": 925,
							"character": 24
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BaseAPI"
						}
					]
				},
				{
					"id": 147,
					"name": "CreateAttributeOperationRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 148,
							"name": "attribute",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 780,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "CreateAttributeRequest"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								148
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/BetaAPIsApi.ts",
							"line": 779,
							"character": 48
						}
					]
				},
				{
					"id": 149,
					"name": "CreateTrailerRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 150,
							"name": "createTrailerRequestBody",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 784,
									"character": 28
								}
							],
							"type": {
								"type": "reference",
								"name": "TrailersCreateTrailerRequestBody"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								150
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/BetaAPIsApi.ts",
							"line": 783,
							"character": 37
						}
					]
				},
				{
					"id": 151,
					"name": "DeleteAttributeRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 153,
							"name": "entityType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 789,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"id": 428,
								"name": "DeleteAttributeEntityTypeEnum"
							}
						},
						{
							"id": 152,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 788,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								153,
								152
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/BetaAPIsApi.ts",
							"line": 787,
							"character": 39
						}
					]
				},
				{
					"id": 154,
					"name": "DeleteDocumentRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 155,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 793,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								155
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/BetaAPIsApi.ts",
							"line": 792,
							"character": 38
						}
					]
				},
				{
					"id": 156,
					"name": "DeleteGatewayRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 157,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 797,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								157
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/BetaAPIsApi.ts",
							"line": 796,
							"character": 37
						}
					]
				},
				{
					"id": 158,
					"name": "DeleteTrailerRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 159,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 801,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								159
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/BetaAPIsApi.ts",
							"line": 800,
							"character": 37
						}
					]
				},
				{
					"id": 160,
					"name": "GetAttributeRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 162,
							"name": "entityType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 806,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"id": 431,
								"name": "GetAttributeEntityTypeEnum"
							}
						},
						{
							"id": 161,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 805,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								162,
								161
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/BetaAPIsApi.ts",
							"line": 804,
							"character": 36
						}
					]
				},
				{
					"id": 163,
					"name": "GetAttributesByEntityTypeRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 166,
							"name": "after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 812,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 164,
							"name": "entityType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 810,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"id": 434,
								"name": "GetAttributesByEntityTypeEntityTypeEnum"
							}
						},
						{
							"id": 165,
							"name": "limit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 811,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								166,
								164,
								165
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/BetaAPIsApi.ts",
							"line": 809,
							"character": 49
						}
					]
				},
				{
					"id": 167,
					"name": "GetDocumentRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 168,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 816,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								168
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/BetaAPIsApi.ts",
							"line": 815,
							"character": 35
						}
					]
				},
				{
					"id": 169,
					"name": "GetDocumentTypesRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 170,
							"name": "after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 820,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								170
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/BetaAPIsApi.ts",
							"line": 819,
							"character": 40
						}
					]
				},
				{
					"id": 171,
					"name": "GetDocumentsRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 174,
							"name": "after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 826,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 175,
							"name": "documentTypeId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 827,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 173,
							"name": "endTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 825,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 176,
							"name": "queryBy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 828,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 172,
							"name": "startTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 824,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								174,
								175,
								173,
								176,
								172
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/BetaAPIsApi.ts",
							"line": 823,
							"character": 36
						}
					]
				},
				{
					"id": 177,
					"name": "GetDriverEfficiencyRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 180,
							"name": "after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 834,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 178,
							"name": "driverActivationStatus",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 832,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"id": 437,
								"name": "GetDriverEfficiencyDriverActivationStatusEnum"
							}
						},
						{
							"id": 179,
							"name": "driverIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 833,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 182,
							"name": "driverParentTagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 836,
									"character": 22
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 181,
							"name": "driverTagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 835,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 184,
							"name": "endTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 838,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							}
						},
						{
							"id": 183,
							"name": "startTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 837,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								180,
								178,
								179,
								182,
								181,
								184,
								183
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/BetaAPIsApi.ts",
							"line": 831,
							"character": 43
						}
					]
				},
				{
					"id": 185,
					"name": "GetGatewaysRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 187,
							"name": "after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 843,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 186,
							"name": "models",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 842,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								187,
								186
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/BetaAPIsApi.ts",
							"line": 841,
							"character": 35
						}
					]
				},
				{
					"id": 188,
					"name": "GetTrailerRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 189,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 847,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								189
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/BetaAPIsApi.ts",
							"line": 846,
							"character": 34
						}
					]
				},
				{
					"id": 190,
					"name": "GetTrailerStatsFeedRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 194,
							"name": "after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 854,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 196,
							"name": "decorations",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 856,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 193,
							"name": "parentTagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 853,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 192,
							"name": "tagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 852,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 195,
							"name": "trailerIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 855,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 191,
							"name": "types",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 851,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								194,
								196,
								193,
								192,
								195,
								191
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/BetaAPIsApi.ts",
							"line": 850,
							"character": 43
						}
					]
				},
				{
					"id": 197,
					"name": "GetTrailerStatsHistoryRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 203,
							"name": "after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 865,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 205,
							"name": "decorations",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 867,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 199,
							"name": "endTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 861,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 202,
							"name": "parentTagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 864,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 198,
							"name": "startTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 860,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 201,
							"name": "tagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 863,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 204,
							"name": "trailerIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 866,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 200,
							"name": "types",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 862,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								203,
								205,
								199,
								202,
								198,
								201,
								204,
								200
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/BetaAPIsApi.ts",
							"line": 859,
							"character": 46
						}
					]
				},
				{
					"id": 206,
					"name": "GetTrailerStatsSnapshotRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 210,
							"name": "after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 874,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 209,
							"name": "parentTagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 873,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 208,
							"name": "tagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 872,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 212,
							"name": "time",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 876,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 211,
							"name": "trailerIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 875,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 207,
							"name": "types",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 871,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								210,
								209,
								208,
								212,
								211,
								207
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/BetaAPIsApi.ts",
							"line": 870,
							"character": 47
						}
					]
				},
				{
					"id": 213,
					"name": "ListTrailersRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 217,
							"name": "after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 883,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 216,
							"name": "limit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 882,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 215,
							"name": "parentTagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 881,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 214,
							"name": "tagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 880,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								217,
								216,
								215,
								214
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/BetaAPIsApi.ts",
							"line": 879,
							"character": 36
						}
					]
				},
				{
					"id": 218,
					"name": "PatchComplianceSettingsRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 219,
							"name": "patchComplianceSettingsRequestBody",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 887,
									"character": 38
								}
							],
							"type": {
								"type": "reference",
								"name": "SettingsPatchComplianceSettingsRequestBody"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								219
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/BetaAPIsApi.ts",
							"line": 886,
							"character": 47
						}
					]
				},
				{
					"id": 220,
					"name": "PatchDriverAppSettingsRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 221,
							"name": "patchDriverAppSettingsRequestBody",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 891,
									"character": 37
								}
							],
							"type": {
								"type": "reference",
								"name": "SettingsPatchDriverAppSettingsRequestBody"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								221
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/BetaAPIsApi.ts",
							"line": 890,
							"character": 46
						}
					]
				},
				{
					"id": 222,
					"name": "PatchEquipmentRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 223,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 895,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 224,
							"name": "patchEquipmentRequestBody",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 896,
									"character": 29
								}
							],
							"type": {
								"type": "reference",
								"name": "EquipmentPatchEquipmentRequestBody"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								223,
								224
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/BetaAPIsApi.ts",
							"line": 894,
							"character": 38
						}
					]
				},
				{
					"id": 225,
					"name": "PostDocumentRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 226,
							"name": "postDocumentRequestBody",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 900,
									"character": 27
								}
							],
							"type": {
								"type": "reference",
								"name": "DocumentsPostDocumentRequestBody"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								226
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/BetaAPIsApi.ts",
							"line": 899,
							"character": 36
						}
					]
				},
				{
					"id": 227,
					"name": "PostGatewayRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 228,
							"name": "postGatewayRequestBody",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 904,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"name": "GatewaysPostGatewayRequestBody"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								228
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/BetaAPIsApi.ts",
							"line": 903,
							"character": 35
						}
					]
				},
				{
					"id": 229,
					"name": "UpdateAttributeOperationRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 231,
							"name": "attribute",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 909,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "UpdateAttributeRequest"
							}
						},
						{
							"id": 230,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 908,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								231,
								230
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/BetaAPIsApi.ts",
							"line": 907,
							"character": 48
						}
					]
				},
				{
					"id": 232,
					"name": "UpdateEngineImmobilizerStateRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 233,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 913,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 234,
							"name": "updateEngineImmobilizerStateRequestBody",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 914,
									"character": 43
								}
							],
							"type": {
								"type": "reference",
								"name": "EngineImmobilizerUpdateEngineImmobilizerStateRequestBody"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								233,
								234
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/BetaAPIsApi.ts",
							"line": 912,
							"character": 52
						}
					]
				},
				{
					"id": 235,
					"name": "UpdateTrailerRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 236,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 918,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 237,
							"name": "updateTrailerRequestBody",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/BetaAPIsApi.ts",
									"line": 919,
									"character": 28
								}
							],
							"type": {
								"type": "reference",
								"name": "TrailersUpdateTrailerRequestBody"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								236,
								237
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/BetaAPIsApi.ts",
							"line": 917,
							"character": 37
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						428,
						431,
						434,
						437
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						238
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						147,
						149,
						151,
						154,
						156,
						158,
						160,
						163,
						167,
						169,
						171,
						177,
						185,
						188,
						190,
						197,
						206,
						213,
						218,
						220,
						222,
						225,
						227,
						229,
						232,
						235
					]
				}
			],
			"sources": [
				{
					"fileName": "apis/BetaAPIsApi.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 440,
			"name": "CameraMediaApi",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 448,
					"name": "CameraMediaApi",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {},
					"children": [
						{
							"id": 449,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 450,
									"name": "new CameraMediaApi",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 451,
											"name": "configuration",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Configuration"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"id": 448,
										"name": "CameraMediaApi"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.constructor"
							}
						},
						{
							"id": 458,
							"name": "configuration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true
							},
							"type": {
								"type": "reference",
								"name": "Configuration"
							},
							"defaultValue": "...",
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.configuration"
							}
						},
						{
							"id": 455,
							"name": "getCameraMedia",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/CameraMediaApi.ts",
									"line": 122,
									"character": 24
								}
							],
							"signatures": [
								{
									"id": 456,
									"name": "getCameraMedia",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get all camera media.     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet all camera media"
									},
									"parameters": [
										{
											"id": 457,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 441,
												"name": "GetCameraMediaRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "CameraMediaGetCameraMediaResponseBody"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 452,
							"name": "getCameraMediaRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/CameraMediaApi.ts",
									"line": 71,
									"character": 27
								}
							],
							"signatures": [
								{
									"id": 453,
									"name": "getCameraMediaRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get all camera media.     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet all camera media"
									},
									"parameters": [
										{
											"id": 454,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 441,
												"name": "GetCameraMediaRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "CameraMediaGetCameraMediaResponseBody"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 477,
							"name": "request",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 47,
									"character": 27
								}
							],
							"signatures": [
								{
									"id": 478,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 479,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "RequestOpts"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.request"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.request"
							}
						},
						{
							"id": 459,
							"name": "withMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 31,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 460,
									"name": "withMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 461,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 462,
											"name": "middlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Middleware"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withMiddleware"
							}
						},
						{
							"id": 470,
							"name": "withPostMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 42,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 471,
									"name": "withPostMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 472,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 473,
											"name": "postMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 474,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 475,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 476,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "ResponseContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "Response"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPostMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPostMiddleware"
							}
						},
						{
							"id": 463,
							"name": "withPreMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 37,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 464,
									"name": "withPreMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 465,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 466,
											"name": "preMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 467,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 468,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 469,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "RequestContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "FetchParams"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPreMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPreMiddleware"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								449
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								458
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								455,
								452,
								477,
								459,
								470,
								463
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/CameraMediaApi.ts",
							"line": 65,
							"character": 27
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BaseAPI"
						}
					]
				},
				{
					"id": 441,
					"name": "GetCameraMediaRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 447,
							"name": "after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/CameraMediaApi.ts",
									"line": 59,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 443,
							"name": "endTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/CameraMediaApi.ts",
									"line": 55,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 446,
							"name": "parentTagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/CameraMediaApi.ts",
									"line": 58,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 442,
							"name": "startTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/CameraMediaApi.ts",
									"line": 54,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 445,
							"name": "tagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/CameraMediaApi.ts",
									"line": 57,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 444,
							"name": "vehicleIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/CameraMediaApi.ts",
									"line": 56,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								447,
								443,
								446,
								442,
								445,
								444
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/CameraMediaApi.ts",
							"line": 53,
							"character": 38
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						448
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						441
					]
				}
			],
			"sources": [
				{
					"fileName": "apis/CameraMediaApi.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 480,
			"name": "CarrierProposedAssignmentsApi",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 490,
					"name": "CarrierProposedAssignmentsApi",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {},
					"children": [
						{
							"id": 491,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 492,
									"name": "new CarrierProposedAssignmentsApi",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 493,
											"name": "configuration",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Configuration"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"id": 490,
										"name": "CarrierProposedAssignmentsApi"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.constructor"
							}
						},
						{
							"id": 512,
							"name": "configuration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true
							},
							"type": {
								"type": "reference",
								"name": "Configuration"
							},
							"defaultValue": "...",
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.configuration"
							}
						},
						{
							"id": 497,
							"name": "createCarrierProposedAssignment",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/CarrierProposedAssignmentsApi.ts",
									"line": 78,
									"character": 41
								}
							],
							"signatures": [
								{
									"id": 498,
									"name": "createCarrierProposedAssignment",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a new assignment that a driver can later use. Each driver can only have one future assignment.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nCreate an assignment"
									},
									"parameters": [
										{
											"id": 499,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 481,
												"name": "CreateCarrierProposedAssignmentOperationRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "CarrierProposedAssignmentResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 494,
							"name": "createCarrierProposedAssignmentRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/CarrierProposedAssignmentsApi.ts",
									"line": 56,
									"character": 44
								}
							],
							"signatures": [
								{
									"id": 495,
									"name": "createCarrierProposedAssignmentRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a new assignment that a driver can later use. Each driver can only have one future assignment.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nCreate an assignment"
									},
									"parameters": [
										{
											"id": 496,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 481,
												"name": "CreateCarrierProposedAssignmentOperationRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "CarrierProposedAssignmentResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 503,
							"name": "deleteCarrierProposedAssignment",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/CarrierProposedAssignmentsApi.ts",
									"line": 110,
									"character": 41
								}
							],
							"signatures": [
								{
									"id": 504,
									"name": "deleteCarrierProposedAssignment",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Permanently delete an assignment. You can only delete assignments that are not yet active. To override a currently active assignment, create a new empty one, instead.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nDelete an assignment"
									},
									"parameters": [
										{
											"id": 505,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 483,
												"name": "DeleteCarrierProposedAssignmentRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 500,
							"name": "deleteCarrierProposedAssignmentRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/CarrierProposedAssignmentsApi.ts",
									"line": 87,
									"character": 44
								}
							],
							"signatures": [
								{
									"id": 501,
									"name": "deleteCarrierProposedAssignmentRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Permanently delete an assignment. You can only delete assignments that are not yet active. To override a currently active assignment, create a new empty one, instead.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nDelete an assignment"
									},
									"parameters": [
										{
											"id": 502,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 483,
												"name": "DeleteCarrierProposedAssignmentRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 509,
							"name": "listCarrierProposedAssignments",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/CarrierProposedAssignmentsApi.ts",
									"line": 154,
									"character": 40
								}
							],
							"signatures": [
								{
									"id": 510,
									"name": "listCarrierProposedAssignments",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Show the assignments that are active for drivers and that would currently be visible to them in the driver app.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nRetrieve assignments"
									},
									"parameters": [
										{
											"id": 511,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 485,
												"name": "ListCarrierProposedAssignmentsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ListCarrierProposedAssignmentResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 506,
							"name": "listCarrierProposedAssignmentsRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/CarrierProposedAssignmentsApi.ts",
									"line": 119,
									"character": 43
								}
							],
							"signatures": [
								{
									"id": 507,
									"name": "listCarrierProposedAssignmentsRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Show the assignments that are active for drivers and that would currently be visible to them in the driver app.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nRetrieve assignments"
									},
									"parameters": [
										{
											"id": 508,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 485,
												"name": "ListCarrierProposedAssignmentsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ListCarrierProposedAssignmentResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 531,
							"name": "request",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 47,
									"character": 27
								}
							],
							"signatures": [
								{
									"id": 532,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 533,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "RequestOpts"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.request"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.request"
							}
						},
						{
							"id": 513,
							"name": "withMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 31,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 514,
									"name": "withMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 515,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 516,
											"name": "middlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Middleware"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withMiddleware"
							}
						},
						{
							"id": 524,
							"name": "withPostMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 42,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 525,
									"name": "withPostMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 526,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 527,
											"name": "postMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 528,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 529,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 530,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "ResponseContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "Response"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPostMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPostMiddleware"
							}
						},
						{
							"id": 517,
							"name": "withPreMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 37,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 518,
									"name": "withPreMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 519,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 520,
											"name": "preMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 521,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 522,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 523,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "RequestContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "FetchParams"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPreMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPreMiddleware"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								491
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								512
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								497,
								494,
								503,
								500,
								509,
								506,
								531,
								513,
								524,
								517
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/CarrierProposedAssignmentsApi.ts",
							"line": 50,
							"character": 42
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BaseAPI"
						}
					]
				},
				{
					"id": 481,
					"name": "CreateCarrierProposedAssignmentOperationRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 482,
							"name": "carrierProposedAssignment",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/CarrierProposedAssignmentsApi.ts",
									"line": 33,
									"character": 29
								}
							],
							"type": {
								"type": "reference",
								"name": "CreateCarrierProposedAssignmentRequest"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								482
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/CarrierProposedAssignmentsApi.ts",
							"line": 32,
							"character": 64
						}
					]
				},
				{
					"id": 483,
					"name": "DeleteCarrierProposedAssignmentRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 484,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/CarrierProposedAssignmentsApi.ts",
									"line": 37,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								484
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/CarrierProposedAssignmentsApi.ts",
							"line": 36,
							"character": 55
						}
					]
				},
				{
					"id": 485,
					"name": "ListCarrierProposedAssignmentsRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 489,
							"name": "activeTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/CarrierProposedAssignmentsApi.ts",
									"line": 44,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 487,
							"name": "after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/CarrierProposedAssignmentsApi.ts",
									"line": 42,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 488,
							"name": "driverIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/CarrierProposedAssignmentsApi.ts",
									"line": 43,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 486,
							"name": "limit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/CarrierProposedAssignmentsApi.ts",
									"line": 41,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								489,
								487,
								488,
								486
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/CarrierProposedAssignmentsApi.ts",
							"line": 40,
							"character": 54
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						490
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						481,
						483,
						485
					]
				}
			],
			"sources": [
				{
					"fileName": "apis/CarrierProposedAssignmentsApi.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 534,
			"name": "ContactsApi",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 547,
					"name": "ContactsApi",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {},
					"children": [
						{
							"id": 548,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 549,
									"name": "new ContactsApi",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 550,
											"name": "configuration",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Configuration"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"id": 547,
										"name": "ContactsApi"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.constructor"
							}
						},
						{
							"id": 581,
							"name": "configuration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true
							},
							"type": {
								"type": "reference",
								"name": "Configuration"
							},
							"defaultValue": "...",
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.configuration"
							}
						},
						{
							"id": 554,
							"name": "createContact",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/ContactsApi.ts",
									"line": 92,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 555,
									"name": "createContact",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add a contact to the organization.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nCreate a contact"
									},
									"parameters": [
										{
											"id": 556,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 535,
												"name": "CreateContactOperationRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ContactResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 551,
							"name": "createContactRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/ContactsApi.ts",
									"line": 66,
									"character": 26
								}
							],
							"signatures": [
								{
									"id": 552,
									"name": "createContactRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add a contact to the organization.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nCreate a contact"
									},
									"parameters": [
										{
											"id": 553,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 535,
												"name": "CreateContactOperationRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ContactResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 560,
							"name": "deleteContact",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/ContactsApi.ts",
									"line": 124,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 561,
									"name": "deleteContact",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Delete the given contact.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nDelete a contact"
									},
									"parameters": [
										{
											"id": 562,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 537,
												"name": "DeleteContactRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 557,
							"name": "deleteContactRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/ContactsApi.ts",
									"line": 101,
									"character": 26
								}
							],
							"signatures": [
								{
									"id": 558,
									"name": "deleteContactRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Delete the given contact.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nDelete a contact"
									},
									"parameters": [
										{
											"id": 559,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 537,
												"name": "DeleteContactRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 566,
							"name": "getContact",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/ContactsApi.ts",
									"line": 156,
									"character": 20
								}
							],
							"signatures": [
								{
									"id": 567,
									"name": "getContact",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get a specific contact\\'s information.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nRetrieve a contact"
									},
									"parameters": [
										{
											"id": 568,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 539,
												"name": "GetContactRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ContactResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 563,
							"name": "getContactRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/ContactsApi.ts",
									"line": 133,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 564,
									"name": "getContactRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get a specific contact\\'s information.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nRetrieve a contact"
									},
									"parameters": [
										{
											"id": 565,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 539,
												"name": "GetContactRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ContactResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 572,
							"name": "listContacts",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/ContactsApi.ts",
									"line": 192,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 573,
									"name": "listContacts",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a list of all contacts in an organization.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nList all contacts"
									},
									"parameters": [
										{
											"id": 574,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 541,
												"name": "ListContactsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ListContactsResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 569,
							"name": "listContactsRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/ContactsApi.ts",
									"line": 165,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 570,
									"name": "listContactsRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a list of all contacts in an organization.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nList all contacts"
									},
									"parameters": [
										{
											"id": 571,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 541,
												"name": "ListContactsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ListContactsResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 600,
							"name": "request",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 47,
									"character": 27
								}
							],
							"signatures": [
								{
									"id": 601,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 602,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "RequestOpts"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.request"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.request"
							}
						},
						{
							"id": 578,
							"name": "updateContact",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/ContactsApi.ts",
									"line": 231,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 579,
									"name": "updateContact",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Update a specific contact\\'s information.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nUpdate a contact"
									},
									"parameters": [
										{
											"id": 580,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 544,
												"name": "UpdateContactOperationRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ContactResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 575,
							"name": "updateContactRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/ContactsApi.ts",
									"line": 201,
									"character": 26
								}
							],
							"signatures": [
								{
									"id": 576,
									"name": "updateContactRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Update a specific contact\\'s information.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nUpdate a contact"
									},
									"parameters": [
										{
											"id": 577,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 544,
												"name": "UpdateContactOperationRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ContactResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 582,
							"name": "withMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 31,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 583,
									"name": "withMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 584,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 585,
											"name": "middlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Middleware"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withMiddleware"
							}
						},
						{
							"id": 593,
							"name": "withPostMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 42,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 594,
									"name": "withPostMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 595,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 596,
											"name": "postMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 597,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 598,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 599,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "ResponseContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "Response"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPostMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPostMiddleware"
							}
						},
						{
							"id": 586,
							"name": "withPreMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 37,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 587,
									"name": "withPreMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 588,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 589,
											"name": "preMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 590,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 591,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 592,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "RequestContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "FetchParams"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPreMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPreMiddleware"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								548
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								581
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								554,
								551,
								560,
								557,
								566,
								563,
								572,
								569,
								600,
								578,
								575,
								582,
								593,
								586
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/ContactsApi.ts",
							"line": 60,
							"character": 24
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BaseAPI"
						}
					]
				},
				{
					"id": 535,
					"name": "CreateContactOperationRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 536,
							"name": "contact",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/ContactsApi.ts",
									"line": 36,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "CreateContactRequest"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								536
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/ContactsApi.ts",
							"line": 35,
							"character": 46
						}
					]
				},
				{
					"id": 537,
					"name": "DeleteContactRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 538,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/ContactsApi.ts",
									"line": 40,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								538
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/ContactsApi.ts",
							"line": 39,
							"character": 37
						}
					]
				},
				{
					"id": 539,
					"name": "GetContactRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 540,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/ContactsApi.ts",
									"line": 44,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								540
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/ContactsApi.ts",
							"line": 43,
							"character": 34
						}
					]
				},
				{
					"id": 541,
					"name": "ListContactsRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 543,
							"name": "after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/ContactsApi.ts",
									"line": 49,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 542,
							"name": "limit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/ContactsApi.ts",
									"line": 48,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								543,
								542
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/ContactsApi.ts",
							"line": 47,
							"character": 36
						}
					]
				},
				{
					"id": 544,
					"name": "UpdateContactOperationRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 546,
							"name": "contact",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/ContactsApi.ts",
									"line": 54,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "UpdateContactRequest"
							}
						},
						{
							"id": 545,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/ContactsApi.ts",
									"line": 53,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								546,
								545
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/ContactsApi.ts",
							"line": 52,
							"character": 46
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						547
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						535,
						537,
						539,
						541,
						544
					]
				}
			],
			"sources": [
				{
					"fileName": "apis/ContactsApi.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 603,
			"name": "DocumentsApi",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 687,
					"name": "V1getDriverDocumentsByOrgIdQueryByEnum",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "export",
								"text": ""
							}
						]
					},
					"children": [
						{
							"id": 688,
							"name": "Created",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/DocumentsApi.ts",
									"line": 326,
									"character": 11
								}
							],
							"defaultValue": "\"created\""
						},
						{
							"id": 689,
							"name": "Updated",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/DocumentsApi.ts",
									"line": 327,
									"character": 11
								}
							],
							"defaultValue": "\"updated\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								688,
								689
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/DocumentsApi.ts",
							"line": 325,
							"character": 50
						}
					]
				},
				{
					"id": 621,
					"name": "DocumentsApi",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {},
					"children": [
						{
							"id": 622,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 623,
									"name": "new DocumentsApi",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 624,
											"name": "configuration",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Configuration"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"id": 621,
										"name": "DocumentsApi"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.constructor"
							}
						},
						{
							"id": 665,
							"name": "configuration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true
							},
							"type": {
								"type": "reference",
								"name": "Configuration"
							},
							"defaultValue": "...",
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.configuration"
							}
						},
						{
							"id": 628,
							"name": "deleteDriverDocumentByIdAndDriverId",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/DocumentsApi.ts",
									"line": 109,
									"character": 45
								}
							],
							"signatures": [
								{
									"id": 629,
									"name": "deleteDriverDocumentByIdAndDriverId",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Deletes a single document submission by driver.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nDelete a document"
									},
									"parameters": [
										{
											"id": 630,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 604,
												"name": "DeleteDriverDocumentByIdAndDriverIdRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 625,
							"name": "deleteDriverDocumentByIdAndDriverIdRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/DocumentsApi.ts",
									"line": 82,
									"character": 48
								}
							],
							"signatures": [
								{
									"id": 626,
									"name": "deleteDriverDocumentByIdAndDriverIdRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Deletes a single document submission by driver.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nDelete a document"
									},
									"parameters": [
										{
											"id": 627,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 604,
												"name": "DeleteDriverDocumentByIdAndDriverIdRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 634,
							"name": "generateDocumentPdf",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/DocumentsApi.ts",
									"line": 139,
									"character": 29
								}
							],
							"signatures": [
								{
									"id": 635,
									"name": "generateDocumentPdf",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Request creation of a document PDF.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nCreate a document PDF"
									},
									"parameters": [
										{
											"id": 636,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 607,
												"name": "GenerateDocumentPdfRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "DocumentPdfGenerationResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 631,
							"name": "generateDocumentPdfRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/DocumentsApi.ts",
									"line": 117,
									"character": 32
								}
							],
							"signatures": [
								{
									"id": 632,
									"name": "generateDocumentPdfRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Request creation of a document PDF.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nCreate a document PDF"
									},
									"parameters": [
										{
											"id": 633,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 607,
												"name": "GenerateDocumentPdfRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "DocumentPdfGenerationResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 640,
							"name": "getDocumentPdf",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/DocumentsApi.ts",
									"line": 171,
									"character": 24
								}
							],
							"signatures": [
								{
									"id": 641,
									"name": "getDocumentPdf",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns generation job status and download URL for a PDF.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nQuery a document PDF"
									},
									"parameters": [
										{
											"id": 642,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 609,
												"name": "GetDocumentPdfRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "DocumentPdfQueryResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 637,
							"name": "getDocumentPdfRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/DocumentsApi.ts",
									"line": 148,
									"character": 27
								}
							],
							"signatures": [
								{
									"id": 638,
									"name": "getDocumentPdfRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns generation job status and download URL for a PDF.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nQuery a document PDF"
									},
									"parameters": [
										{
											"id": 639,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 609,
												"name": "GetDocumentPdfRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "DocumentPdfQueryResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 684,
							"name": "request",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 47,
									"character": 27
								}
							],
							"signatures": [
								{
									"id": 685,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 686,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "RequestOpts"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.request"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.request"
							}
						},
						{
							"id": 646,
							"name": "v1createDriverDocument",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/DocumentsApi.ts",
									"line": 210,
									"character": 32
								}
							],
							"signatures": [
								{
									"id": 647,
									"name": "v1createDriverDocument",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\">   <nh>     <i class=\\\"fa fa-exclamation-circle\\\"></i>     This endpoint is still on our legacy API.   </nh> </n>  Create a driver document for the given driver.  You can create a document in one of two states: \\\"Required\\\" or \\\"Submitted\\\":  - Setting the document state to \\\"Submitted\\\" will submit the document on behalf of the driver. - Setting the document state to \\\"Required\\\" will create a pre-populated document for the driver to fill out in the Driver App.  **Populating document fields**  You  populate a document\\'s fields according to the document\\'s *document type*. You can retrieve document types using the [Fetch document types](ref:v1getdriverdocumenttypesbyorgid) endpoint.  You must populate a document\\'s fields using the field *labels* and *value types*, and the fields must be listed in the exact same order that they appear in the document type.  **Omitting Field Values**  If you _omit a field\\'s **value**_, Samsara will populate the field with a default value. (Note: you must still list the field in your request). For example, the following request omits the `numberValue` for the `\\\"Number Field\\\"`.  ``` {   \\\"documentTypeUuid\\\": \\\"79008acc-56d6-49f4-b5d2-4101ce4b497c\\\",   \\\"fields\\\": [     {       \\\"label\\\": \\\"Number Field\\\",       \\\"valueType\\\": \\\"ValueType_Number\\\",     }   ] } ```  Samsara will automatically populate the field with the default for number fields: `0`. See the defaults for all field types below.  > Note: The `dateTimeValue` for `ValueType_DateTime` fields **cannot** be omitted. If you\\'d like to populate this field with a default datetime value, you must submit `\\\"dateTimeValue\\\": {}` for that field.  **Default Field Values**  | Value Type | Field Name | Default value | | :--------- | :--------- | :------------ | | `ValueType_Number` | `numberValue` | `0` | | `ValueType_String` | `stringValue` | `\\\"\\\"` | | `ValueType_Photo` | `photoValue` | `[]` | | `ValueType_MultipleChoice` | `multipleChoiceValue` | `[]` | | `ValueType_DateTime` | `dateTimeValue` | `{\\\"dateTimeMs\\\": 0}` | | `ValueType_Signature` | `signatureValue` | `{\\\"name\\\": \\\"Name\\\", \\\"signedAtMs\\\": 0, \\\"url\\\": \\\"\\\"}` | | `ValueType_Barcode` | `barcodeValue` | `[]` |  > Note: `ValueType_ScannedDocument` fields return `ValueType_Photo`/`photoValue` fields, whose default is listed above.  **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nCreate a document"
									},
									"parameters": [
										{
											"id": 648,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 611,
												"name": "V1createDriverDocumentRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "V1Document"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 643,
							"name": "v1createDriverDocumentRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/DocumentsApi.ts",
									"line": 180,
									"character": 35
								}
							],
							"signatures": [
								{
									"id": 644,
									"name": "v1createDriverDocumentRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\">   <nh>     <i class=\\\"fa fa-exclamation-circle\\\"></i>     This endpoint is still on our legacy API.   </nh> </n>  Create a driver document for the given driver.  You can create a document in one of two states: \\\"Required\\\" or \\\"Submitted\\\":  - Setting the document state to \\\"Submitted\\\" will submit the document on behalf of the driver. - Setting the document state to \\\"Required\\\" will create a pre-populated document for the driver to fill out in the Driver App.  **Populating document fields**  You  populate a document\\'s fields according to the document\\'s *document type*. You can retrieve document types using the [Fetch document types](ref:v1getdriverdocumenttypesbyorgid) endpoint.  You must populate a document\\'s fields using the field *labels* and *value types*, and the fields must be listed in the exact same order that they appear in the document type.  **Omitting Field Values**  If you _omit a field\\'s **value**_, Samsara will populate the field with a default value. (Note: you must still list the field in your request). For example, the following request omits the `numberValue` for the `\\\"Number Field\\\"`.  ``` {   \\\"documentTypeUuid\\\": \\\"79008acc-56d6-49f4-b5d2-4101ce4b497c\\\",   \\\"fields\\\": [     {       \\\"label\\\": \\\"Number Field\\\",       \\\"valueType\\\": \\\"ValueType_Number\\\",     }   ] } ```  Samsara will automatically populate the field with the default for number fields: `0`. See the defaults for all field types below.  > Note: The `dateTimeValue` for `ValueType_DateTime` fields **cannot** be omitted. If you\\'d like to populate this field with a default datetime value, you must submit `\\\"dateTimeValue\\\": {}` for that field.  **Default Field Values**  | Value Type | Field Name | Default value | | :--------- | :--------- | :------------ | | `ValueType_Number` | `numberValue` | `0` | | `ValueType_String` | `stringValue` | `\\\"\\\"` | | `ValueType_Photo` | `photoValue` | `[]` | | `ValueType_MultipleChoice` | `multipleChoiceValue` | `[]` | | `ValueType_DateTime` | `dateTimeValue` | `{\\\"dateTimeMs\\\": 0}` | | `ValueType_Signature` | `signatureValue` | `{\\\"name\\\": \\\"Name\\\", \\\"signedAtMs\\\": 0, \\\"url\\\": \\\"\\\"}` | | `ValueType_Barcode` | `barcodeValue` | `[]` |  > Note: `ValueType_ScannedDocument` fields return `ValueType_Photo`/`photoValue` fields, whose default is listed above.  **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nCreate a document"
									},
									"parameters": [
										{
											"id": 645,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 611,
												"name": "V1createDriverDocumentRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "V1Document"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 652,
							"name": "v1getDriverDocumentByIdAndDriverId",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/DocumentsApi.ts",
									"line": 246,
									"character": 44
								}
							],
							"signatures": [
								{
									"id": 653,
									"name": "v1getDriverDocumentByIdAndDriverId",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Fetches a single document submission by a specific driver.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nFetches a document"
									},
									"parameters": [
										{
											"id": 654,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 614,
												"name": "V1getDriverDocumentByIdAndDriverIdRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "V1Document"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 649,
							"name": "v1getDriverDocumentByIdAndDriverIdRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/DocumentsApi.ts",
									"line": 219,
									"character": 47
								}
							],
							"signatures": [
								{
									"id": 650,
									"name": "v1getDriverDocumentByIdAndDriverIdRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Fetches a single document submission by a specific driver.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nFetches a document"
									},
									"parameters": [
										{
											"id": 651,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 614,
												"name": "V1getDriverDocumentByIdAndDriverIdRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "V1Document"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 657,
							"name": "v1getDriverDocumentTypesByOrgId",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/DocumentsApi.ts",
									"line": 274,
									"character": 41
								}
							],
							"signatures": [
								{
									"id": 658,
									"name": "v1getDriverDocumentTypesByOrgId",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Fetch all of the document types.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nFetch document types"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "V1DocumentType"
												}
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 655,
							"name": "v1getDriverDocumentTypesByOrgIdRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/DocumentsApi.ts",
									"line": 255,
									"character": 44
								}
							],
							"signatures": [
								{
									"id": 656,
									"name": "v1getDriverDocumentTypesByOrgIdRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Fetch all of the document types.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nFetch document types"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "V1DocumentType"
														}
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 662,
							"name": "v1getDriverDocumentsByOrgId",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/DocumentsApi.ts",
									"line": 314,
									"character": 37
								}
							],
							"signatures": [
								{
									"id": 663,
									"name": "v1getDriverDocumentsByOrgId",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Fetch all of the documents.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nFetch all documents"
									},
									"parameters": [
										{
											"id": 664,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 617,
												"name": "V1getDriverDocumentsByOrgIdRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "V1Documents"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 659,
							"name": "v1getDriverDocumentsByOrgIdRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/DocumentsApi.ts",
									"line": 283,
									"character": 40
								}
							],
							"signatures": [
								{
									"id": 660,
									"name": "v1getDriverDocumentsByOrgIdRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Fetch all of the documents.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nFetch all documents"
									},
									"parameters": [
										{
											"id": 661,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 617,
												"name": "V1getDriverDocumentsByOrgIdRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "V1Documents"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 666,
							"name": "withMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 31,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 667,
									"name": "withMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 668,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 669,
											"name": "middlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Middleware"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withMiddleware"
							}
						},
						{
							"id": 677,
							"name": "withPostMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 42,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 678,
									"name": "withPostMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 679,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 680,
											"name": "postMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 681,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 682,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 683,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "ResponseContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "Response"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPostMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPostMiddleware"
							}
						},
						{
							"id": 670,
							"name": "withPreMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 37,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 671,
									"name": "withPreMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 672,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 673,
											"name": "preMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 674,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 675,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 676,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "RequestContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "FetchParams"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPreMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPreMiddleware"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								622
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								665
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								628,
								625,
								634,
								631,
								640,
								637,
								684,
								646,
								643,
								652,
								649,
								657,
								655,
								662,
								659,
								666,
								677,
								670
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/DocumentsApi.ts",
							"line": 76,
							"character": 25
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BaseAPI"
						}
					]
				},
				{
					"id": 604,
					"name": "DeleteDriverDocumentByIdAndDriverIdRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 606,
							"name": "documentId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/DocumentsApi.ts",
									"line": 46,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 605,
							"name": "driverId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/DocumentsApi.ts",
									"line": 45,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								606,
								605
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/DocumentsApi.ts",
							"line": 44,
							"character": 59
						}
					]
				},
				{
					"id": 607,
					"name": "GenerateDocumentPdfRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 608,
							"name": "document",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/DocumentsApi.ts",
									"line": 50,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "DocumentPdfGenerationRequest"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								608
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/DocumentsApi.ts",
							"line": 49,
							"character": 43
						}
					]
				},
				{
					"id": 609,
					"name": "GetDocumentPdfRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 610,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/DocumentsApi.ts",
									"line": 54,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								610
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/DocumentsApi.ts",
							"line": 53,
							"character": 38
						}
					]
				},
				{
					"id": 611,
					"name": "V1createDriverDocumentRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 613,
							"name": "createDocumentParams",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/DocumentsApi.ts",
									"line": 59,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"name": "V1DocumentCreate"
							}
						},
						{
							"id": 612,
							"name": "driverId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/DocumentsApi.ts",
									"line": 58,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								613,
								612
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/DocumentsApi.ts",
							"line": 57,
							"character": 46
						}
					]
				},
				{
					"id": 614,
					"name": "V1getDriverDocumentByIdAndDriverIdRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 616,
							"name": "documentId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/DocumentsApi.ts",
									"line": 64,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 615,
							"name": "driverId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/DocumentsApi.ts",
									"line": 63,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								616,
								615
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/DocumentsApi.ts",
							"line": 62,
							"character": 58
						}
					]
				},
				{
					"id": 617,
					"name": "V1getDriverDocumentsByOrgIdRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 619,
							"name": "durationMs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/DocumentsApi.ts",
									"line": 69,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 618,
							"name": "endMs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/DocumentsApi.ts",
									"line": 68,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 620,
							"name": "queryBy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/DocumentsApi.ts",
									"line": 70,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 687,
								"name": "V1getDriverDocumentsByOrgIdQueryByEnum"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								619,
								618,
								620
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/DocumentsApi.ts",
							"line": 67,
							"character": 51
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						687
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						621
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						604,
						607,
						609,
						611,
						614,
						617
					]
				}
			],
			"sources": [
				{
					"fileName": "apis/DocumentsApi.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 690,
			"name": "DriverVehicleAssignmentsApi",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 731,
					"name": "GetDriversVehicleAssignmentsDriverActivationStatusEnum",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "export",
								"text": ""
							}
						]
					},
					"children": [
						{
							"id": 732,
							"name": "Active",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/DriverVehicleAssignmentsApi.ts",
									"line": 131,
									"character": 10
								}
							],
							"defaultValue": "\"active\""
						},
						{
							"id": 733,
							"name": "Deactivated",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/DriverVehicleAssignmentsApi.ts",
									"line": 132,
									"character": 15
								}
							],
							"defaultValue": "\"deactivated\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								732,
								733
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/DriverVehicleAssignmentsApi.ts",
							"line": 130,
							"character": 66
						}
					]
				},
				{
					"id": 699,
					"name": "DriverVehicleAssignmentsApi",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {},
					"children": [
						{
							"id": 700,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 701,
									"name": "new DriverVehicleAssignmentsApi",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 702,
											"name": "configuration",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Configuration"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"id": 699,
										"name": "DriverVehicleAssignmentsApi"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.constructor"
							}
						},
						{
							"id": 709,
							"name": "configuration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true
							},
							"type": {
								"type": "reference",
								"name": "Configuration"
							},
							"defaultValue": "...",
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.configuration"
							}
						},
						{
							"id": 706,
							"name": "getDriversVehicleAssignments",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/DriverVehicleAssignmentsApi.ts",
									"line": 119,
									"character": 38
								}
							],
							"signatures": [
								{
									"id": 707,
									"name": "getDriversVehicleAssignments",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get all vehicle assignments for the requested drivers in the requested time range. The only type of assignment supported right now are assignments created through the driver app.     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet all vehicles assigned to a set of drivers"
									},
									"parameters": [
										{
											"id": 708,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 691,
												"name": "GetDriversVehicleAssignmentsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "DriversVehicleAssignmentsGetDriversVehicleAssignmentsResponseBody"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 703,
							"name": "getDriversVehicleAssignmentsRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/DriverVehicleAssignmentsApi.ts",
									"line": 72,
									"character": 41
								}
							],
							"signatures": [
								{
									"id": 704,
									"name": "getDriversVehicleAssignmentsRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get all vehicle assignments for the requested drivers in the requested time range. The only type of assignment supported right now are assignments created through the driver app.     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet all vehicles assigned to a set of drivers"
									},
									"parameters": [
										{
											"id": 705,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 691,
												"name": "GetDriversVehicleAssignmentsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "DriversVehicleAssignmentsGetDriversVehicleAssignmentsResponseBody"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 728,
							"name": "request",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 47,
									"character": 27
								}
							],
							"signatures": [
								{
									"id": 729,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 730,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "RequestOpts"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.request"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.request"
							}
						},
						{
							"id": 710,
							"name": "withMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 31,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 711,
									"name": "withMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 712,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 713,
											"name": "middlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Middleware"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withMiddleware"
							}
						},
						{
							"id": 721,
							"name": "withPostMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 42,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 722,
									"name": "withPostMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 723,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 724,
											"name": "postMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 725,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 726,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 727,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "ResponseContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "Response"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPostMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPostMiddleware"
							}
						},
						{
							"id": 714,
							"name": "withPreMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 37,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 715,
									"name": "withPreMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 716,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 717,
											"name": "preMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 718,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 719,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 720,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "RequestContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "FetchParams"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPreMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPreMiddleware"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								700
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								709
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								706,
								703,
								728,
								710,
								721,
								714
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/DriverVehicleAssignmentsApi.ts",
							"line": 66,
							"character": 40
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BaseAPI"
						}
					]
				},
				{
					"id": 691,
					"name": "GetDriversVehicleAssignmentsRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 698,
							"name": "after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/DriverVehicleAssignmentsApi.ts",
									"line": 60,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 697,
							"name": "driverActivationStatus",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/DriverVehicleAssignmentsApi.ts",
									"line": 59,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"id": 731,
								"name": "GetDriversVehicleAssignmentsDriverActivationStatusEnum"
							}
						},
						{
							"id": 692,
							"name": "driverIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/DriverVehicleAssignmentsApi.ts",
									"line": 54,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 694,
							"name": "endTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/DriverVehicleAssignmentsApi.ts",
									"line": 56,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 696,
							"name": "parentTagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/DriverVehicleAssignmentsApi.ts",
									"line": 58,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 693,
							"name": "startTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/DriverVehicleAssignmentsApi.ts",
									"line": 55,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 695,
							"name": "tagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/DriverVehicleAssignmentsApi.ts",
									"line": 57,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								698,
								697,
								692,
								694,
								696,
								693,
								695
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/DriverVehicleAssignmentsApi.ts",
							"line": 53,
							"character": 52
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						731
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						699
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						691
					]
				}
			],
			"sources": [
				{
					"fileName": "apis/DriverVehicleAssignmentsApi.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 734,
			"name": "DriversApi",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 800,
					"name": "ListDriversDriverActivationStatusEnum",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "export",
								"text": ""
							}
						]
					},
					"children": [
						{
							"id": 801,
							"name": "Active",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/DriversApi.ts",
									"line": 232,
									"character": 10
								}
							],
							"defaultValue": "\"active\""
						},
						{
							"id": 802,
							"name": "Deactivated",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/DriversApi.ts",
									"line": 233,
									"character": 15
								}
							],
							"defaultValue": "\"deactivated\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								801,
								802
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/DriversApi.ts",
							"line": 231,
							"character": 49
						}
					]
				},
				{
					"id": 750,
					"name": "DriversApi",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {},
					"children": [
						{
							"id": 751,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 752,
									"name": "new DriversApi",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 753,
											"name": "configuration",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Configuration"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"id": 750,
										"name": "DriversApi"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.constructor"
							}
						},
						{
							"id": 778,
							"name": "configuration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true
							},
							"type": {
								"type": "reference",
								"name": "Configuration"
							},
							"defaultValue": "...",
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.configuration"
							}
						},
						{
							"id": 757,
							"name": "createDriver",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/DriversApi.ts",
									"line": 93,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 758,
									"name": "createDriver",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add a driver to the organization.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nCreate a driver"
									},
									"parameters": [
										{
											"id": 759,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 735,
												"name": "CreateDriverOperationRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "DriverResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 754,
							"name": "createDriverRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/DriversApi.ts",
									"line": 67,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 755,
									"name": "createDriverRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add a driver to the organization.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nCreate a driver"
									},
									"parameters": [
										{
											"id": 756,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 735,
												"name": "CreateDriverOperationRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "DriverResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 763,
							"name": "getDriver",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/DriversApi.ts",
									"line": 125,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 764,
									"name": "getDriver",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get information about a driver.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nRetrieve a driver"
									},
									"parameters": [
										{
											"id": 765,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 737,
												"name": "GetDriverRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "DriverResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 760,
							"name": "getDriverRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/DriversApi.ts",
									"line": 102,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 761,
									"name": "getDriverRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get information about a driver.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nRetrieve a driver"
									},
									"parameters": [
										{
											"id": 762,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 737,
												"name": "GetDriverRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "DriverResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 769,
							"name": "listDrivers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/DriversApi.ts",
									"line": 181,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 770,
									"name": "listDrivers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get all drivers in organization.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nList all drivers"
									},
									"parameters": [
										{
											"id": 771,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 739,
												"name": "ListDriversRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ListDriversResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 766,
							"name": "listDriversRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/DriversApi.ts",
									"line": 134,
									"character": 24
								}
							],
							"signatures": [
								{
									"id": 767,
									"name": "listDriversRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get all drivers in organization.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nList all drivers"
									},
									"parameters": [
										{
											"id": 768,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 739,
												"name": "ListDriversRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ListDriversResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 797,
							"name": "request",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 47,
									"character": 27
								}
							],
							"signatures": [
								{
									"id": 798,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 799,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "RequestOpts"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.request"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.request"
							}
						},
						{
							"id": 775,
							"name": "updateDriver",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/DriversApi.ts",
									"line": 220,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 776,
									"name": "updateDriver",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Update a specific driver\\'s information. This can also be used to activate or de-activate a given driver by setting the driverActivationStatus field. If the driverActivationStatus field is \\'deactivated\\' then the user can also specify the deactivatedAtTime. The deactivatedAtTime cannot be more than 6 months in the past and must not come before the dirver\\'s latest active HOS log. It will be considered an error if deactivatedAtTime is provided with a driverActivationStatus of active.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nUpdate a driver"
									},
									"parameters": [
										{
											"id": 777,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 747,
												"name": "UpdateDriverOperationRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "DriverResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 772,
							"name": "updateDriverRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/DriversApi.ts",
									"line": 190,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 773,
									"name": "updateDriverRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Update a specific driver\\'s information. This can also be used to activate or de-activate a given driver by setting the driverActivationStatus field. If the driverActivationStatus field is \\'deactivated\\' then the user can also specify the deactivatedAtTime. The deactivatedAtTime cannot be more than 6 months in the past and must not come before the dirver\\'s latest active HOS log. It will be considered an error if deactivatedAtTime is provided with a driverActivationStatus of active.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nUpdate a driver"
									},
									"parameters": [
										{
											"id": 774,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 747,
												"name": "UpdateDriverOperationRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "DriverResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 779,
							"name": "withMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 31,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 780,
									"name": "withMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 781,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 782,
											"name": "middlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Middleware"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withMiddleware"
							}
						},
						{
							"id": 790,
							"name": "withPostMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 42,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 791,
									"name": "withPostMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 792,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 793,
											"name": "postMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 794,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 795,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 796,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "ResponseContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "Response"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPostMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPostMiddleware"
							}
						},
						{
							"id": 783,
							"name": "withPreMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 37,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 784,
									"name": "withPreMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 785,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 786,
											"name": "preMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 787,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 788,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 789,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "RequestContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "FetchParams"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPreMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPreMiddleware"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								751
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								778
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								757,
								754,
								763,
								760,
								769,
								766,
								797,
								775,
								772,
								779,
								790,
								783
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/DriversApi.ts",
							"line": 61,
							"character": 23
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BaseAPI"
						}
					]
				},
				{
					"id": 735,
					"name": "CreateDriverOperationRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 736,
							"name": "driver",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/DriversApi.ts",
									"line": 36,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "CreateDriverRequest"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								736
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/DriversApi.ts",
							"line": 35,
							"character": 45
						}
					]
				},
				{
					"id": 737,
					"name": "GetDriverRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 738,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/DriversApi.ts",
									"line": 40,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								738
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/DriversApi.ts",
							"line": 39,
							"character": 33
						}
					]
				},
				{
					"id": 739,
					"name": "ListDriversRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 742,
							"name": "after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/DriversApi.ts",
									"line": 46,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 746,
							"name": "createdAfterTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/DriversApi.ts",
									"line": 50,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 740,
							"name": "driverActivationStatus",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/DriversApi.ts",
									"line": 44,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"id": 800,
								"name": "ListDriversDriverActivationStatusEnum"
							}
						},
						{
							"id": 741,
							"name": "limit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/DriversApi.ts",
									"line": 45,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 743,
							"name": "parentTagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/DriversApi.ts",
									"line": 47,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 744,
							"name": "tagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/DriversApi.ts",
									"line": 48,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 745,
							"name": "updatedAfterTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/DriversApi.ts",
									"line": 49,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								742,
								746,
								740,
								741,
								743,
								744,
								745
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/DriversApi.ts",
							"line": 43,
							"character": 35
						}
					]
				},
				{
					"id": 747,
					"name": "UpdateDriverOperationRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 749,
							"name": "driver",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/DriversApi.ts",
									"line": 55,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "UpdateDriverRequest"
							}
						},
						{
							"id": 748,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/DriversApi.ts",
									"line": 54,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								749,
								748
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/DriversApi.ts",
							"line": 53,
							"character": 45
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						800
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						750
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						735,
						737,
						739,
						747
					]
				}
			],
			"sources": [
				{
					"fileName": "apis/DriversApi.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 803,
			"name": "EquipmentApi",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 931,
					"name": "GetEquipmentStatsFeedTypesEnum",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "export",
								"text": ""
							}
						]
					},
					"children": [
						{
							"id": 935,
							"name": "EngineRpm",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 526,
									"character": 13
								}
							],
							"defaultValue": "\"engineRpm\""
						},
						{
							"id": 934,
							"name": "FuelPercents",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 525,
									"character": 16
								}
							],
							"defaultValue": "\"fuelPercents\""
						},
						{
							"id": 936,
							"name": "GatewayEngineSeconds",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 527,
									"character": 24
								}
							],
							"defaultValue": "\"gatewayEngineSeconds\""
						},
						{
							"id": 932,
							"name": "GatewayEngineStates",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 523,
									"character": 23
								}
							],
							"defaultValue": "\"gatewayEngineStates\""
						},
						{
							"id": 938,
							"name": "GatewayJ1939EngineSeconds",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 529,
									"character": 29
								}
							],
							"defaultValue": "\"gatewayJ1939EngineSeconds\""
						},
						{
							"id": 939,
							"name": "GpsOdometerMeters",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 530,
									"character": 21
								}
							],
							"defaultValue": "\"gpsOdometerMeters\""
						},
						{
							"id": 937,
							"name": "ObdEngineSeconds",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 528,
									"character": 20
								}
							],
							"defaultValue": "\"obdEngineSeconds\""
						},
						{
							"id": 933,
							"name": "ObdEngineStates",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 524,
									"character": 19
								}
							],
							"defaultValue": "\"obdEngineStates\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								935,
								934,
								936,
								932,
								938,
								939,
								937,
								933
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/EquipmentApi.ts",
							"line": 522,
							"character": 42
						}
					]
				},
				{
					"id": 940,
					"name": "GetEquipmentStatsHistoryTypesEnum",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "export",
								"text": ""
							}
						]
					},
					"children": [
						{
							"id": 944,
							"name": "EngineRpm",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 540,
									"character": 13
								}
							],
							"defaultValue": "\"engineRpm\""
						},
						{
							"id": 943,
							"name": "FuelPercents",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 539,
									"character": 16
								}
							],
							"defaultValue": "\"fuelPercents\""
						},
						{
							"id": 945,
							"name": "GatewayEngineSeconds",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 541,
									"character": 24
								}
							],
							"defaultValue": "\"gatewayEngineSeconds\""
						},
						{
							"id": 941,
							"name": "GatewayEngineStates",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 537,
									"character": 23
								}
							],
							"defaultValue": "\"gatewayEngineStates\""
						},
						{
							"id": 947,
							"name": "GatewayJ1939EngineSeconds",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 543,
									"character": 29
								}
							],
							"defaultValue": "\"gatewayJ1939EngineSeconds\""
						},
						{
							"id": 948,
							"name": "GpsOdometerMeters",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 544,
									"character": 21
								}
							],
							"defaultValue": "\"gpsOdometerMeters\""
						},
						{
							"id": 946,
							"name": "ObdEngineSeconds",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 542,
									"character": 20
								}
							],
							"defaultValue": "\"obdEngineSeconds\""
						},
						{
							"id": 942,
							"name": "ObdEngineStates",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 538,
									"character": 19
								}
							],
							"defaultValue": "\"obdEngineStates\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								944,
								943,
								945,
								941,
								947,
								948,
								946,
								942
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/EquipmentApi.ts",
							"line": 536,
							"character": 45
						}
					]
				},
				{
					"id": 922,
					"name": "GetEquipmentStatsTypesEnum",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "export",
								"text": ""
							}
						]
					},
					"children": [
						{
							"id": 926,
							"name": "EngineRpm",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 512,
									"character": 13
								}
							],
							"defaultValue": "\"engineRpm\""
						},
						{
							"id": 925,
							"name": "FuelPercents",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 511,
									"character": 16
								}
							],
							"defaultValue": "\"fuelPercents\""
						},
						{
							"id": 927,
							"name": "GatewayEngineSeconds",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 513,
									"character": 24
								}
							],
							"defaultValue": "\"gatewayEngineSeconds\""
						},
						{
							"id": 923,
							"name": "GatewayEngineStates",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 509,
									"character": 23
								}
							],
							"defaultValue": "\"gatewayEngineStates\""
						},
						{
							"id": 929,
							"name": "GatewayJ1939EngineSeconds",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 515,
									"character": 29
								}
							],
							"defaultValue": "\"gatewayJ1939EngineSeconds\""
						},
						{
							"id": 930,
							"name": "GpsOdometerMeters",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 516,
									"character": 21
								}
							],
							"defaultValue": "\"gpsOdometerMeters\""
						},
						{
							"id": 928,
							"name": "ObdEngineSeconds",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 514,
									"character": 20
								}
							],
							"defaultValue": "\"obdEngineSeconds\""
						},
						{
							"id": 924,
							"name": "ObdEngineStates",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 510,
									"character": 19
								}
							],
							"defaultValue": "\"obdEngineStates\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								926,
								925,
								927,
								923,
								929,
								930,
								928,
								924
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/EquipmentApi.ts",
							"line": 508,
							"character": 38
						}
					]
				},
				{
					"id": 848,
					"name": "EquipmentApi",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {},
					"children": [
						{
							"id": 849,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 850,
									"name": "new EquipmentApi",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 851,
											"name": "configuration",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Configuration"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"id": 848,
										"name": "EquipmentApi"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.constructor"
							}
						},
						{
							"id": 900,
							"name": "configuration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true
							},
							"type": {
								"type": "reference",
								"name": "Configuration"
							},
							"defaultValue": "...",
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.configuration"
							}
						},
						{
							"id": 855,
							"name": "getEquipment",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 133,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 856,
									"name": "getEquipment",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Retrieves the unit of equipment with the given Samsara ID.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nRetrieve a unit of equipment"
									},
									"parameters": [
										{
											"id": 857,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 804,
												"name": "GetEquipmentRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "EquipmentResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 861,
							"name": "getEquipmentLocations",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 177,
									"character": 31
								}
							],
							"signatures": [
								{
									"id": 862,
									"name": "getEquipmentLocations",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns last known locations for all equipment. This can be optionally filtered by tags or specific equipment IDs.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet most recent locations for all equipment"
									},
									"parameters": [
										{
											"id": 863,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 806,
												"name": "GetEquipmentLocationsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "EquipmentLocationsResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 867,
							"name": "getEquipmentLocationsFeed",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 221,
									"character": 35
								}
							],
							"signatures": [
								{
									"id": 868,
									"name": "getEquipmentLocationsFeed",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Follow a continuous feed of all equipment locations from Samsara AG24s.  Your first call to this endpoint will provide you with the most recent location for each unit of equipment and a `pagination` object that contains an `endCursor`.  You can provide the `endCursor` to subsequent calls via the `after` parameter. The response will contain any equipment location updates since that `endCursor`.  If `hasNextPage` is `false`, no updates are readily available yet. We\\'d suggest waiting a minimum of 5 seconds before requesting updates.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nFollow feed of equipment locations"
									},
									"parameters": [
										{
											"id": 869,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 811,
												"name": "GetEquipmentLocationsFeedRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "EquipmentLocationsListResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 864,
							"name": "getEquipmentLocationsFeedRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 186,
									"character": 38
								}
							],
							"signatures": [
								{
									"id": 865,
									"name": "getEquipmentLocationsFeedRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Follow a continuous feed of all equipment locations from Samsara AG24s.  Your first call to this endpoint will provide you with the most recent location for each unit of equipment and a `pagination` object that contains an `endCursor`.  You can provide the `endCursor` to subsequent calls via the `after` parameter. The response will contain any equipment location updates since that `endCursor`.  If `hasNextPage` is `false`, no updates are readily available yet. We\\'d suggest waiting a minimum of 5 seconds before requesting updates.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nFollow feed of equipment locations"
									},
									"parameters": [
										{
											"id": 866,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 811,
												"name": "GetEquipmentLocationsFeedRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EquipmentLocationsListResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 873,
							"name": "getEquipmentLocationsHistory",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 281,
									"character": 38
								}
							],
							"signatures": [
								{
									"id": 874,
									"name": "getEquipmentLocationsHistory",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns historical equipment locations during the given time range. This can be optionally filtered by tags or specific equipment IDs.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet historical equipment locations"
									},
									"parameters": [
										{
											"id": 875,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 816,
												"name": "GetEquipmentLocationsHistoryRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "EquipmentLocationsListResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 870,
							"name": "getEquipmentLocationsHistoryRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 230,
									"character": 41
								}
							],
							"signatures": [
								{
									"id": 871,
									"name": "getEquipmentLocationsHistoryRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns historical equipment locations during the given time range. This can be optionally filtered by tags or specific equipment IDs.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet historical equipment locations"
									},
									"parameters": [
										{
											"id": 872,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 816,
												"name": "GetEquipmentLocationsHistoryRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EquipmentLocationsListResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 858,
							"name": "getEquipmentLocationsRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 142,
									"character": 34
								}
							],
							"signatures": [
								{
									"id": 859,
									"name": "getEquipmentLocationsRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns last known locations for all equipment. This can be optionally filtered by tags or specific equipment IDs.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet most recent locations for all equipment"
									},
									"parameters": [
										{
											"id": 860,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 806,
												"name": "GetEquipmentLocationsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EquipmentLocationsResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 852,
							"name": "getEquipmentRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 110,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 853,
									"name": "getEquipmentRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Retrieves the unit of equipment with the given Samsara ID.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nRetrieve a unit of equipment"
									},
									"parameters": [
										{
											"id": 854,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 804,
												"name": "GetEquipmentRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EquipmentResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 879,
							"name": "getEquipmentStats",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 333,
									"character": 27
								}
							],
							"signatures": [
								{
									"id": 880,
									"name": "getEquipmentStats",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the last known stats for all equipment. This can be optionally filtered by tags or specific equipment IDs.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet most recent stats for all equipment"
									},
									"parameters": [
										{
											"id": 881,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 823,
												"name": "GetEquipmentStatsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "EquipmentStatsResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 885,
							"name": "getEquipmentStatsFeed",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 385,
									"character": 31
								}
							],
							"signatures": [
								{
									"id": 886,
									"name": "getEquipmentStatsFeed",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Follow a continuous feed of all equipment stats from Samsara AG24s.  Your first call to this endpoint will provide you with the most recent stats for each unit of equipment and a `pagination` object that contains an `endCursor`.  You can provide the `endCursor` to subsequent calls via the `after` parameter. The response will contain any equipment stats updates since that `endCursor`.  If `hasNextPage` is `false`, no updates are readily available yet. Each stat type has a different refresh rate, but in general we\\'d suggest waiting a minimum of 5 seconds before requesting updates.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nFollow a feed of equipment stats"
									},
									"parameters": [
										{
											"id": 887,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 829,
												"name": "GetEquipmentStatsFeedRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "EquipmentStatsListResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 882,
							"name": "getEquipmentStatsFeedRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 342,
									"character": 34
								}
							],
							"signatures": [
								{
									"id": 883,
									"name": "getEquipmentStatsFeedRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Follow a continuous feed of all equipment stats from Samsara AG24s.  Your first call to this endpoint will provide you with the most recent stats for each unit of equipment and a `pagination` object that contains an `endCursor`.  You can provide the `endCursor` to subsequent calls via the `after` parameter. The response will contain any equipment stats updates since that `endCursor`.  If `hasNextPage` is `false`, no updates are readily available yet. Each stat type has a different refresh rate, but in general we\\'d suggest waiting a minimum of 5 seconds before requesting updates.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nFollow a feed of equipment stats"
									},
									"parameters": [
										{
											"id": 884,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 829,
												"name": "GetEquipmentStatsFeedRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EquipmentStatsListResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 891,
							"name": "getEquipmentStatsHistory",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 453,
									"character": 34
								}
							],
							"signatures": [
								{
									"id": 892,
									"name": "getEquipmentStatsHistory",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns historical equipment status during the given time range. This can be optionally filtered by tags or specific equipment IDs.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet historical equipment stats"
									},
									"parameters": [
										{
											"id": 893,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 835,
												"name": "GetEquipmentStatsHistoryRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "EquipmentStatsListResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 888,
							"name": "getEquipmentStatsHistoryRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 394,
									"character": 37
								}
							],
							"signatures": [
								{
									"id": 889,
									"name": "getEquipmentStatsHistoryRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns historical equipment status during the given time range. This can be optionally filtered by tags or specific equipment IDs.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet historical equipment stats"
									},
									"parameters": [
										{
											"id": 890,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 835,
												"name": "GetEquipmentStatsHistoryRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EquipmentStatsListResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 876,
							"name": "getEquipmentStatsRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 290,
									"character": 30
								}
							],
							"signatures": [
								{
									"id": 877,
									"name": "getEquipmentStatsRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the last known stats for all equipment. This can be optionally filtered by tags or specific equipment IDs.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet most recent stats for all equipment"
									},
									"parameters": [
										{
											"id": 878,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 823,
												"name": "GetEquipmentStatsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EquipmentStatsResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 897,
							"name": "listEquipment",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 497,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 898,
									"name": "listEquipment",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a list of all equipment in an organization. Equipment objects represent powered assets connected to a [Samsara AG24](https://www.samsara.com/products/models/ag24) via an APWR, CAT, or J1939 cable. They are automatically created with a unique Samsara Equipment ID whenever an AG24 is activated in your organization.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nList all equipment"
									},
									"parameters": [
										{
											"id": 899,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 843,
												"name": "ListEquipmentRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "EquipmentListResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 894,
							"name": "listEquipmentRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 462,
									"character": 26
								}
							],
							"signatures": [
								{
									"id": 895,
									"name": "listEquipmentRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a list of all equipment in an organization. Equipment objects represent powered assets connected to a [Samsara AG24](https://www.samsara.com/products/models/ag24) via an APWR, CAT, or J1939 cable. They are automatically created with a unique Samsara Equipment ID whenever an AG24 is activated in your organization.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nList all equipment"
									},
									"parameters": [
										{
											"id": 896,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 843,
												"name": "ListEquipmentRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EquipmentListResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 919,
							"name": "request",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 47,
									"character": 27
								}
							],
							"signatures": [
								{
									"id": 920,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 921,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "RequestOpts"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.request"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.request"
							}
						},
						{
							"id": 901,
							"name": "withMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 31,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 902,
									"name": "withMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 903,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 904,
											"name": "middlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Middleware"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withMiddleware"
							}
						},
						{
							"id": 912,
							"name": "withPostMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 42,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 913,
									"name": "withPostMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 914,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 915,
											"name": "postMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 916,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 917,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 918,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "ResponseContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "Response"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPostMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPostMiddleware"
							}
						},
						{
							"id": 905,
							"name": "withPreMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 37,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 906,
									"name": "withPreMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 907,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 908,
											"name": "preMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 909,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 910,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 911,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "RequestContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "FetchParams"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPreMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPreMiddleware"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								849
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								900
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								855,
								861,
								867,
								864,
								873,
								870,
								858,
								852,
								879,
								885,
								882,
								891,
								888,
								876,
								897,
								894,
								919,
								901,
								912,
								905
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/EquipmentApi.ts",
							"line": 104,
							"character": 25
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BaseAPI"
						}
					]
				},
				{
					"id": 811,
					"name": "GetEquipmentLocationsFeedRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 812,
							"name": "after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 53,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 815,
							"name": "equipmentIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 56,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 813,
							"name": "parentTagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 54,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 814,
							"name": "tagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 55,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								812,
								815,
								813,
								814
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/EquipmentApi.ts",
							"line": 52,
							"character": 49
						}
					]
				},
				{
					"id": 816,
					"name": "GetEquipmentLocationsHistoryRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 819,
							"name": "after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 62,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 818,
							"name": "endTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 61,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 822,
							"name": "equipmentIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 65,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 820,
							"name": "parentTagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 63,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 817,
							"name": "startTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 60,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 821,
							"name": "tagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 64,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								819,
								818,
								822,
								820,
								817,
								821
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/EquipmentApi.ts",
							"line": 59,
							"character": 52
						}
					]
				},
				{
					"id": 806,
					"name": "GetEquipmentLocationsRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 807,
							"name": "after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 46,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 810,
							"name": "equipmentIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 49,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 808,
							"name": "parentTagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 47,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 809,
							"name": "tagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 48,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								807,
								810,
								808,
								809
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/EquipmentApi.ts",
							"line": 45,
							"character": 45
						}
					]
				},
				{
					"id": 804,
					"name": "GetEquipmentRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 805,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 42,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								805
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/EquipmentApi.ts",
							"line": 41,
							"character": 36
						}
					]
				},
				{
					"id": 829,
					"name": "GetEquipmentStatsFeedRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 831,
							"name": "after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 78,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 834,
							"name": "equipmentIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 81,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 832,
							"name": "parentTagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 79,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 833,
							"name": "tagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 80,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 830,
							"name": "types",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 77,
									"character": 9
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 931,
									"name": "GetEquipmentStatsFeedTypesEnum"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								831,
								834,
								832,
								833,
								830
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/EquipmentApi.ts",
							"line": 76,
							"character": 45
						}
					]
				},
				{
					"id": 835,
					"name": "GetEquipmentStatsHistoryRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 839,
							"name": "after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 88,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 837,
							"name": "endTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 86,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 842,
							"name": "equipmentIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 91,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 840,
							"name": "parentTagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 89,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 836,
							"name": "startTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 85,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 841,
							"name": "tagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 90,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 838,
							"name": "types",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 87,
									"character": 9
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 940,
									"name": "GetEquipmentStatsHistoryTypesEnum"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								839,
								837,
								842,
								840,
								836,
								841,
								838
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/EquipmentApi.ts",
							"line": 84,
							"character": 48
						}
					]
				},
				{
					"id": 823,
					"name": "GetEquipmentStatsRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 825,
							"name": "after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 70,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 828,
							"name": "equipmentIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 73,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 826,
							"name": "parentTagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 71,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 827,
							"name": "tagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 72,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 824,
							"name": "types",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 69,
									"character": 9
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 922,
									"name": "GetEquipmentStatsTypesEnum"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								825,
								828,
								826,
								827,
								824
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/EquipmentApi.ts",
							"line": 68,
							"character": 41
						}
					]
				},
				{
					"id": 843,
					"name": "ListEquipmentRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 845,
							"name": "after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 96,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 844,
							"name": "limit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 95,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 846,
							"name": "parentTagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 97,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 847,
							"name": "tagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/EquipmentApi.ts",
									"line": 98,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								845,
								844,
								846,
								847
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/EquipmentApi.ts",
							"line": 94,
							"character": 37
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						931,
						940,
						922
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						848
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						811,
						816,
						806,
						804,
						829,
						835,
						823,
						843
					]
				}
			],
			"sources": [
				{
					"fileName": "apis/EquipmentApi.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 949,
			"name": "HoursOfServiceApi",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 1035,
					"name": "GetHosDailyLogsDriverActivationStatusEnum",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "export",
								"text": ""
							}
						]
					},
					"children": [
						{
							"id": 1036,
							"name": "Active",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/HoursOfServiceApi.ts",
									"line": 365,
									"character": 10
								}
							],
							"defaultValue": "\"active\""
						},
						{
							"id": 1037,
							"name": "Deactivated",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/HoursOfServiceApi.ts",
									"line": 366,
									"character": 15
								}
							],
							"defaultValue": "\"deactivated\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								1036,
								1037
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/HoursOfServiceApi.ts",
							"line": 364,
							"character": 53
						}
					]
				},
				{
					"id": 1038,
					"name": "GetHosDailyLogsExpandEnum",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "export",
								"text": ""
							}
						]
					},
					"children": [
						{
							"id": 1039,
							"name": "Vehicle",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/HoursOfServiceApi.ts",
									"line": 373,
									"character": 11
								}
							],
							"defaultValue": "\"vehicle\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								1039
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/HoursOfServiceApi.ts",
							"line": 372,
							"character": 37
						}
					]
				},
				{
					"id": 979,
					"name": "HoursOfServiceApi",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {},
					"children": [
						{
							"id": 980,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 981,
									"name": "new HoursOfServiceApi",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 982,
											"name": "configuration",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Configuration"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"id": 979,
										"name": "HoursOfServiceApi"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.constructor"
							}
						},
						{
							"id": 1013,
							"name": "configuration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true
							},
							"type": {
								"type": "reference",
								"name": "Configuration"
							},
							"defaultValue": "...",
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.configuration"
							}
						},
						{
							"id": 986,
							"name": "getHosClocks",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/HoursOfServiceApi.ts",
									"line": 155,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 987,
									"name": "getHosClocks",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get the current HOS status for all drivers. Note that this includes inactive as well as active drivers. The legacy version of this endpoint can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/getFleetHosLogsSummary).    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet HOS clocks"
									},
									"parameters": [
										{
											"id": 988,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 950,
												"name": "GetHosClocksRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HosClocksResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 983,
							"name": "getHosClocksRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/HoursOfServiceApi.ts",
									"line": 116,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 984,
									"name": "getHosClocksRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get the current HOS status for all drivers. Note that this includes inactive as well as active drivers. The legacy version of this endpoint can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/getFleetHosLogsSummary).    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet HOS clocks"
									},
									"parameters": [
										{
											"id": 985,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 950,
												"name": "GetHosClocksRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "HosClocksResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 992,
							"name": "getHosDailyLogs",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/HoursOfServiceApi.ts",
									"line": 215,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 993,
									"name": "getHosDailyLogs",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get summarized daily Hours of Service charts for the specified drivers.  The time range for a log is defined by the `driver`\\'s `eldDayStartHour`. This value is configurable per driver.  The `startDate` and `endDate` parameters indicate the date range you\\'d like to retrieve daily logs for. A daily log will be returned if its `startTime` is on any of the days within in this date range (inclusive of `startDate` and `endDate`).  **Note:** If data is still being uploaded from the Samsara Driver App, it may not be completely reflected in the response from this endpoint. The best practice is to wait a couple of days before querying this endpoint to make sure that all data from the Samsara Driver App has been uploaded.  If you are using the legacy version of this endpoint and looking for its documentation, you can find it [here](https://www.samsara.com/api-legacy#operation/getFleetDriversHosDailyLogs).     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet all driver HOS daily logs"
									},
									"parameters": [
										{
											"id": 994,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 956,
												"name": "GetHosDailyLogsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HosDailyLogsGetHosDailyLogsResponseBody"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 989,
							"name": "getHosDailyLogsRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/HoursOfServiceApi.ts",
									"line": 164,
									"character": 28
								}
							],
							"signatures": [
								{
									"id": 990,
									"name": "getHosDailyLogsRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get summarized daily Hours of Service charts for the specified drivers.  The time range for a log is defined by the `driver`\\'s `eldDayStartHour`. This value is configurable per driver.  The `startDate` and `endDate` parameters indicate the date range you\\'d like to retrieve daily logs for. A daily log will be returned if its `startTime` is on any of the days within in this date range (inclusive of `startDate` and `endDate`).  **Note:** If data is still being uploaded from the Samsara Driver App, it may not be completely reflected in the response from this endpoint. The best practice is to wait a couple of days before querying this endpoint to make sure that all data from the Samsara Driver App has been uploaded.  If you are using the legacy version of this endpoint and looking for its documentation, you can find it [here](https://www.samsara.com/api-legacy#operation/getFleetDriversHosDailyLogs).     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet all driver HOS daily logs"
									},
									"parameters": [
										{
											"id": 991,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 956,
												"name": "GetHosDailyLogsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "HosDailyLogsGetHosDailyLogsResponseBody"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 998,
							"name": "getHosLogs",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/HoursOfServiceApi.ts",
									"line": 267,
									"character": 20
								}
							],
							"signatures": [
								{
									"id": 999,
									"name": "getHosLogs",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns HOS logs between a given `startTime` and `endTime`. The logs can be further filtered using tags or by providing a list of driver IDs (including external IDs). The legacy version of this endpoint can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/getFleetHosLogs).  **Note:** If data is still being uploaded from the Samsara Driver App, it may not be completely reflected in the response from this endpoint. The best practice is to wait a couple of days before querying this endpoint to make sure that all data from the Samsara Driver App has been uploaded.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet HOS logs"
									},
									"parameters": [
										{
											"id": 1000,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 965,
												"name": "GetHosLogsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HosLogsResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 995,
							"name": "getHosLogsRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/HoursOfServiceApi.ts",
									"line": 224,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 996,
									"name": "getHosLogsRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns HOS logs between a given `startTime` and `endTime`. The logs can be further filtered using tags or by providing a list of driver IDs (including external IDs). The legacy version of this endpoint can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/getFleetHosLogs).  **Note:** If data is still being uploaded from the Samsara Driver App, it may not be completely reflected in the response from this endpoint. The best practice is to wait a couple of days before querying this endpoint to make sure that all data from the Samsara Driver App has been uploaded.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet HOS logs"
									},
									"parameters": [
										{
											"id": 997,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 965,
												"name": "GetHosLogsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "HosLogsResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1032,
							"name": "request",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 47,
									"character": 27
								}
							],
							"signatures": [
								{
									"id": 1033,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1034,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "RequestOpts"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.request"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.request"
							}
						},
						{
							"id": 1004,
							"name": "setCurrentDutyStatus",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/HoursOfServiceApi.ts",
									"line": 302,
									"character": 30
								}
							],
							"signatures": [
								{
									"id": 1005,
									"name": "setCurrentDutyStatus",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Set an individual driver’s current duty status to \\'On Duty\\' or \\'Off Duty\\'.   To ensure compliance with the ELD Mandate, only  authenticated drivers can make direct duty status changes on their own logbook. Any system external to the Samsara Driver App using this endpoint to trigger duty status changes must ensure that such changes are only triggered directly by the driver in question and that the driver has been properly authenticated. This endpoint should not be used to algorithmically trigger duty status changes nor should it be used by personnel besides the driver to trigger duty status changes on the driver’s behalf. Carriers and their drivers are ultimately responsible for maintaining accurate logs and should confirm that their use of the endpoint is compliant with the ELD Mandate.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nSet a duty status for a specific driver"
									},
									"parameters": [
										{
											"id": 1006,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 972,
												"name": "SetCurrentDutyStatusRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1001,
							"name": "setCurrentDutyStatusRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/HoursOfServiceApi.ts",
									"line": 276,
									"character": 33
								}
							],
							"signatures": [
								{
									"id": 1002,
									"name": "setCurrentDutyStatusRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Set an individual driver’s current duty status to \\'On Duty\\' or \\'Off Duty\\'.   To ensure compliance with the ELD Mandate, only  authenticated drivers can make direct duty status changes on their own logbook. Any system external to the Samsara Driver App using this endpoint to trigger duty status changes must ensure that such changes are only triggered directly by the driver in question and that the driver has been properly authenticated. This endpoint should not be used to algorithmically trigger duty status changes nor should it be used by personnel besides the driver to trigger duty status changes on the driver’s behalf. Carriers and their drivers are ultimately responsible for maintaining accurate logs and should confirm that their use of the endpoint is compliant with the ELD Mandate.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nSet a duty status for a specific driver"
									},
									"parameters": [
										{
											"id": 1003,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 972,
												"name": "SetCurrentDutyStatusRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1010,
							"name": "v1getFleetHosAuthenticationLogs",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/HoursOfServiceApi.ts",
									"line": 353,
									"character": 41
								}
							],
							"signatures": [
								{
									"id": 1011,
									"name": "v1getFleetHosAuthenticationLogs",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Get the HOS (hours of service) signin and signout logs for the specified driver. The response includes 4 fields that are now deprecated.  **Note:** If data is still being uploaded from the Samsara Driver App, it may not be completely reflected in the response from this endpoint. The best practice is to wait a couple of days before querying this endpoint to make sure that all data from the Samsara Driver App has been uploaded.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet HOS signin and signout"
									},
									"parameters": [
										{
											"id": 1012,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 975,
												"name": "V1getFleetHosAuthenticationLogsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "V1HosAuthenticationLogsResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1007,
							"name": "v1getFleetHosAuthenticationLogsRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/HoursOfServiceApi.ts",
									"line": 310,
									"character": 44
								}
							],
							"signatures": [
								{
									"id": 1008,
									"name": "v1getFleetHosAuthenticationLogsRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Get the HOS (hours of service) signin and signout logs for the specified driver. The response includes 4 fields that are now deprecated.  **Note:** If data is still being uploaded from the Samsara Driver App, it may not be completely reflected in the response from this endpoint. The best practice is to wait a couple of days before querying this endpoint to make sure that all data from the Samsara Driver App has been uploaded.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet HOS signin and signout"
									},
									"parameters": [
										{
											"id": 1009,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 975,
												"name": "V1getFleetHosAuthenticationLogsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "V1HosAuthenticationLogsResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1014,
							"name": "withMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 31,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 1015,
									"name": "withMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1016,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 1017,
											"name": "middlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Middleware"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withMiddleware"
							}
						},
						{
							"id": 1025,
							"name": "withPostMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 42,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 1026,
									"name": "withPostMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1027,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 1028,
											"name": "postMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 1029,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 1030,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 1031,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "ResponseContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "Response"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPostMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPostMiddleware"
							}
						},
						{
							"id": 1018,
							"name": "withPreMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 37,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 1019,
									"name": "withPreMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1020,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 1021,
											"name": "preMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 1022,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 1023,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 1024,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "RequestContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "FetchParams"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPreMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPreMiddleware"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								980
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1013
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								986,
								983,
								992,
								989,
								998,
								995,
								1032,
								1004,
								1001,
								1010,
								1007,
								1014,
								1025,
								1018
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/HoursOfServiceApi.ts",
							"line": 110,
							"character": 30
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BaseAPI"
						}
					]
				},
				{
					"id": 950,
					"name": "GetHosClocksRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 954,
							"name": "after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/HoursOfServiceApi.ts",
									"line": 72,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 953,
							"name": "driverIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/HoursOfServiceApi.ts",
									"line": 71,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 955,
							"name": "limit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/HoursOfServiceApi.ts",
									"line": 73,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 952,
							"name": "parentTagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/HoursOfServiceApi.ts",
									"line": 70,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 951,
							"name": "tagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/HoursOfServiceApi.ts",
									"line": 69,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								954,
								953,
								955,
								952,
								951
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/HoursOfServiceApi.ts",
							"line": 68,
							"character": 36
						}
					]
				},
				{
					"id": 956,
					"name": "GetHosDailyLogsRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 963,
							"name": "after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/HoursOfServiceApi.ts",
									"line": 83,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 962,
							"name": "driverActivationStatus",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/HoursOfServiceApi.ts",
									"line": 82,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"id": 1035,
								"name": "GetHosDailyLogsDriverActivationStatusEnum"
							}
						},
						{
							"id": 957,
							"name": "driverIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/HoursOfServiceApi.ts",
									"line": 77,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 959,
							"name": "endDate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/HoursOfServiceApi.ts",
									"line": 79,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 964,
							"name": "expand",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/HoursOfServiceApi.ts",
									"line": 84,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 1039,
								"name": "Vehicle"
							}
						},
						{
							"id": 961,
							"name": "parentTagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/HoursOfServiceApi.ts",
									"line": 81,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 958,
							"name": "startDate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/HoursOfServiceApi.ts",
									"line": 78,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 960,
							"name": "tagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/HoursOfServiceApi.ts",
									"line": 80,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								963,
								962,
								957,
								959,
								964,
								961,
								958,
								960
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/HoursOfServiceApi.ts",
							"line": 76,
							"character": 39
						}
					]
				},
				{
					"id": 965,
					"name": "GetHosLogsRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 971,
							"name": "after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/HoursOfServiceApi.ts",
									"line": 93,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 968,
							"name": "driverIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/HoursOfServiceApi.ts",
									"line": 90,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 970,
							"name": "endTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/HoursOfServiceApi.ts",
									"line": 92,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 967,
							"name": "parentTagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/HoursOfServiceApi.ts",
									"line": 89,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 969,
							"name": "startTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/HoursOfServiceApi.ts",
									"line": 91,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 966,
							"name": "tagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/HoursOfServiceApi.ts",
									"line": 88,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								971,
								968,
								970,
								967,
								969,
								966
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/HoursOfServiceApi.ts",
							"line": 87,
							"character": 34
						}
					]
				},
				{
					"id": 972,
					"name": "SetCurrentDutyStatusRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 973,
							"name": "driverId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/HoursOfServiceApi.ts",
									"line": 97,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 974,
							"name": "dutyStatusParams",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/HoursOfServiceApi.ts",
									"line": 98,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"name": "InlineObject1"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								973,
								974
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/HoursOfServiceApi.ts",
							"line": 96,
							"character": 44
						}
					]
				},
				{
					"id": 975,
					"name": "V1getFleetHosAuthenticationLogsRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 976,
							"name": "driverId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/HoursOfServiceApi.ts",
									"line": 102,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 978,
							"name": "endMs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/HoursOfServiceApi.ts",
									"line": 104,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 977,
							"name": "startMs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/HoursOfServiceApi.ts",
									"line": 103,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								976,
								978,
								977
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/HoursOfServiceApi.ts",
							"line": 101,
							"character": 55
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						1035,
						1038
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						979
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						950,
						956,
						965,
						972,
						975
					]
				}
			],
			"sources": [
				{
					"fileName": "apis/HoursOfServiceApi.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1040,
			"name": "IFTAApi",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 1116,
					"name": "GetIftaJurisdictionReportsFuelTypeEnum",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "export",
								"text": ""
							}
						]
					},
					"children": [
						{
							"id": 1118,
							"name": "A55",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 282,
									"character": 7
								}
							],
							"defaultValue": "\"A55\""
						},
						{
							"id": 1119,
							"name": "Biodiesel",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 283,
									"character": 13
								}
							],
							"defaultValue": "\"Biodiesel\""
						},
						{
							"id": 1120,
							"name": "CompressedNaturalGas",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 284,
									"character": 24
								}
							],
							"defaultValue": "\"CompressedNaturalGas\""
						},
						{
							"id": 1121,
							"name": "Diesel",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 285,
									"character": 10
								}
							],
							"defaultValue": "\"Diesel\""
						},
						{
							"id": 1122,
							"name": "E85",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 286,
									"character": 7
								}
							],
							"defaultValue": "\"E85\""
						},
						{
							"id": 1123,
							"name": "Electricity",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 287,
									"character": 15
								}
							],
							"defaultValue": "\"Electricity\""
						},
						{
							"id": 1124,
							"name": "Ethanol",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 288,
									"character": 11
								}
							],
							"defaultValue": "\"Ethanol\""
						},
						{
							"id": 1125,
							"name": "Gasohol",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 289,
									"character": 11
								}
							],
							"defaultValue": "\"Gasohol\""
						},
						{
							"id": 1126,
							"name": "Gasoline",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 290,
									"character": 12
								}
							],
							"defaultValue": "\"Gasoline\""
						},
						{
							"id": 1127,
							"name": "Hydrogen",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 291,
									"character": 12
								}
							],
							"defaultValue": "\"Hydrogen\""
						},
						{
							"id": 1128,
							"name": "LiquifiedNaturalGas",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 292,
									"character": 23
								}
							],
							"defaultValue": "\"LiquifiedNaturalGas\""
						},
						{
							"id": 1129,
							"name": "M85",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 293,
									"character": 7
								}
							],
							"defaultValue": "\"M85\""
						},
						{
							"id": 1130,
							"name": "Methanol",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 294,
									"character": 12
								}
							],
							"defaultValue": "\"Methanol\""
						},
						{
							"id": 1132,
							"name": "Other",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 296,
									"character": 9
								}
							],
							"defaultValue": "\"Other\""
						},
						{
							"id": 1131,
							"name": "Propane",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 295,
									"character": 11
								}
							],
							"defaultValue": "\"Propane\""
						},
						{
							"id": 1117,
							"name": "Unspecified",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 281,
									"character": 15
								}
							],
							"defaultValue": "\"Unspecified\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								1118,
								1119,
								1120,
								1121,
								1122,
								1123,
								1124,
								1125,
								1126,
								1127,
								1128,
								1129,
								1130,
								1132,
								1131,
								1117
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/IFTAApi.ts",
							"line": 280,
							"character": 50
						}
					]
				},
				{
					"id": 1098,
					"name": "GetIftaJurisdictionReportsMonthEnum",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "export",
								"text": ""
							}
						]
					},
					"children": [
						{
							"id": 1102,
							"name": "April",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 256,
									"character": 9
								}
							],
							"defaultValue": "\"April\""
						},
						{
							"id": 1106,
							"name": "August",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 260,
									"character": 10
								}
							],
							"defaultValue": "\"August\""
						},
						{
							"id": 1110,
							"name": "December",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 264,
									"character": 12
								}
							],
							"defaultValue": "\"December\""
						},
						{
							"id": 1100,
							"name": "February",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 254,
									"character": 12
								}
							],
							"defaultValue": "\"February\""
						},
						{
							"id": 1099,
							"name": "January",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 253,
									"character": 11
								}
							],
							"defaultValue": "\"January\""
						},
						{
							"id": 1105,
							"name": "July",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 259,
									"character": 8
								}
							],
							"defaultValue": "\"July\""
						},
						{
							"id": 1104,
							"name": "June",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 258,
									"character": 8
								}
							],
							"defaultValue": "\"June\""
						},
						{
							"id": 1101,
							"name": "March",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 255,
									"character": 9
								}
							],
							"defaultValue": "\"March\""
						},
						{
							"id": 1103,
							"name": "May",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 257,
									"character": 7
								}
							],
							"defaultValue": "\"May\""
						},
						{
							"id": 1109,
							"name": "November",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 263,
									"character": 12
								}
							],
							"defaultValue": "\"November\""
						},
						{
							"id": 1108,
							"name": "October",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 262,
									"character": 11
								}
							],
							"defaultValue": "\"October\""
						},
						{
							"id": 1107,
							"name": "September",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 261,
									"character": 13
								}
							],
							"defaultValue": "\"September\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								1102,
								1106,
								1110,
								1100,
								1099,
								1105,
								1104,
								1101,
								1103,
								1109,
								1108,
								1107
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/IFTAApi.ts",
							"line": 252,
							"character": 47
						}
					]
				},
				{
					"id": 1111,
					"name": "GetIftaJurisdictionReportsQuarterEnum",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "export",
								"text": ""
							}
						]
					},
					"children": [
						{
							"id": 1112,
							"name": "Q1",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 271,
									"character": 6
								}
							],
							"defaultValue": "\"Q1\""
						},
						{
							"id": 1113,
							"name": "Q2",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 272,
									"character": 6
								}
							],
							"defaultValue": "\"Q2\""
						},
						{
							"id": 1114,
							"name": "Q3",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 273,
									"character": 6
								}
							],
							"defaultValue": "\"Q3\""
						},
						{
							"id": 1115,
							"name": "Q4",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 274,
									"character": 6
								}
							],
							"defaultValue": "\"Q4\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								1112,
								1113,
								1114,
								1115
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/IFTAApi.ts",
							"line": 270,
							"character": 49
						}
					]
				},
				{
					"id": 1151,
					"name": "GetIftaVehicleReportsFuelTypeEnum",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "export",
								"text": ""
							}
						]
					},
					"children": [
						{
							"id": 1153,
							"name": "A55",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 332,
									"character": 7
								}
							],
							"defaultValue": "\"A55\""
						},
						{
							"id": 1154,
							"name": "Biodiesel",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 333,
									"character": 13
								}
							],
							"defaultValue": "\"Biodiesel\""
						},
						{
							"id": 1155,
							"name": "CompressedNaturalGas",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 334,
									"character": 24
								}
							],
							"defaultValue": "\"CompressedNaturalGas\""
						},
						{
							"id": 1156,
							"name": "Diesel",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 335,
									"character": 10
								}
							],
							"defaultValue": "\"Diesel\""
						},
						{
							"id": 1157,
							"name": "E85",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 336,
									"character": 7
								}
							],
							"defaultValue": "\"E85\""
						},
						{
							"id": 1158,
							"name": "Electricity",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 337,
									"character": 15
								}
							],
							"defaultValue": "\"Electricity\""
						},
						{
							"id": 1159,
							"name": "Ethanol",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 338,
									"character": 11
								}
							],
							"defaultValue": "\"Ethanol\""
						},
						{
							"id": 1160,
							"name": "Gasohol",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 339,
									"character": 11
								}
							],
							"defaultValue": "\"Gasohol\""
						},
						{
							"id": 1161,
							"name": "Gasoline",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 340,
									"character": 12
								}
							],
							"defaultValue": "\"Gasoline\""
						},
						{
							"id": 1162,
							"name": "Hydrogen",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 341,
									"character": 12
								}
							],
							"defaultValue": "\"Hydrogen\""
						},
						{
							"id": 1163,
							"name": "LiquifiedNaturalGas",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 342,
									"character": 23
								}
							],
							"defaultValue": "\"LiquifiedNaturalGas\""
						},
						{
							"id": 1164,
							"name": "M85",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 343,
									"character": 7
								}
							],
							"defaultValue": "\"M85\""
						},
						{
							"id": 1165,
							"name": "Methanol",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 344,
									"character": 12
								}
							],
							"defaultValue": "\"Methanol\""
						},
						{
							"id": 1167,
							"name": "Other",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 346,
									"character": 9
								}
							],
							"defaultValue": "\"Other\""
						},
						{
							"id": 1166,
							"name": "Propane",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 345,
									"character": 11
								}
							],
							"defaultValue": "\"Propane\""
						},
						{
							"id": 1152,
							"name": "Unspecified",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 331,
									"character": 15
								}
							],
							"defaultValue": "\"Unspecified\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								1153,
								1154,
								1155,
								1156,
								1157,
								1158,
								1159,
								1160,
								1161,
								1162,
								1163,
								1164,
								1165,
								1167,
								1166,
								1152
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/IFTAApi.ts",
							"line": 330,
							"character": 45
						}
					]
				},
				{
					"id": 1133,
					"name": "GetIftaVehicleReportsMonthEnum",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "export",
								"text": ""
							}
						]
					},
					"children": [
						{
							"id": 1137,
							"name": "April",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 306,
									"character": 9
								}
							],
							"defaultValue": "\"April\""
						},
						{
							"id": 1141,
							"name": "August",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 310,
									"character": 10
								}
							],
							"defaultValue": "\"August\""
						},
						{
							"id": 1145,
							"name": "December",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 314,
									"character": 12
								}
							],
							"defaultValue": "\"December\""
						},
						{
							"id": 1135,
							"name": "February",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 304,
									"character": 12
								}
							],
							"defaultValue": "\"February\""
						},
						{
							"id": 1134,
							"name": "January",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 303,
									"character": 11
								}
							],
							"defaultValue": "\"January\""
						},
						{
							"id": 1140,
							"name": "July",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 309,
									"character": 8
								}
							],
							"defaultValue": "\"July\""
						},
						{
							"id": 1139,
							"name": "June",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 308,
									"character": 8
								}
							],
							"defaultValue": "\"June\""
						},
						{
							"id": 1136,
							"name": "March",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 305,
									"character": 9
								}
							],
							"defaultValue": "\"March\""
						},
						{
							"id": 1138,
							"name": "May",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 307,
									"character": 7
								}
							],
							"defaultValue": "\"May\""
						},
						{
							"id": 1144,
							"name": "November",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 313,
									"character": 12
								}
							],
							"defaultValue": "\"November\""
						},
						{
							"id": 1143,
							"name": "October",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 312,
									"character": 11
								}
							],
							"defaultValue": "\"October\""
						},
						{
							"id": 1142,
							"name": "September",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 311,
									"character": 13
								}
							],
							"defaultValue": "\"September\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								1137,
								1141,
								1145,
								1135,
								1134,
								1140,
								1139,
								1136,
								1138,
								1144,
								1143,
								1142
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/IFTAApi.ts",
							"line": 302,
							"character": 42
						}
					]
				},
				{
					"id": 1146,
					"name": "GetIftaVehicleReportsQuarterEnum",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "export",
								"text": ""
							}
						]
					},
					"children": [
						{
							"id": 1147,
							"name": "Q1",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 321,
									"character": 6
								}
							],
							"defaultValue": "\"Q1\""
						},
						{
							"id": 1148,
							"name": "Q2",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 322,
									"character": 6
								}
							],
							"defaultValue": "\"Q2\""
						},
						{
							"id": 1149,
							"name": "Q3",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 323,
									"character": 6
								}
							],
							"defaultValue": "\"Q3\""
						},
						{
							"id": 1150,
							"name": "Q4",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 324,
									"character": 6
								}
							],
							"defaultValue": "\"Q4\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								1147,
								1148,
								1149,
								1150
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/IFTAApi.ts",
							"line": 320,
							"character": 44
						}
					]
				},
				{
					"id": 1060,
					"name": "IFTAApi",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {},
					"children": [
						{
							"id": 1061,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1062,
									"name": "new IFTAApi",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1063,
											"name": "configuration",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Configuration"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"id": 1060,
										"name": "IFTAApi"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.constructor"
							}
						},
						{
							"id": 1076,
							"name": "configuration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true
							},
							"type": {
								"type": "reference",
								"name": "Configuration"
							},
							"defaultValue": "...",
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.configuration"
							}
						},
						{
							"id": 1067,
							"name": "getIftaJurisdictionReports",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 173,
									"character": 36
								}
							],
							"signatures": [
								{
									"id": 1068,
									"name": "getIftaJurisdictionReports",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get all jurisdiction IFTA reports for the requested time duration. Data is returned in your organization\\'s defined timezone.     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet IFTA jurisdiction reports."
									},
									"parameters": [
										{
											"id": 1069,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1041,
												"name": "GetIftaJurisdictionReportsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IFTAGetIftaJurisdictionReportsResponseBody"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1064,
							"name": "getIftaJurisdictionReportsRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 118,
									"character": 39
								}
							],
							"signatures": [
								{
									"id": 1065,
									"name": "getIftaJurisdictionReportsRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get all jurisdiction IFTA reports for the requested time duration. Data is returned in your organization\\'s defined timezone.     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet IFTA jurisdiction reports."
									},
									"parameters": [
										{
											"id": 1066,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1041,
												"name": "GetIftaJurisdictionReportsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IFTAGetIftaJurisdictionReportsResponseBody"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1073,
							"name": "getIftaVehicleReports",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 241,
									"character": 31
								}
							],
							"signatures": [
								{
									"id": 1074,
									"name": "getIftaVehicleReports",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get all vehicle IFTA reports for the requested time duration. Data is returned in your organization\\'s defined timezone.     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet IFTA vehicle reports."
									},
									"parameters": [
										{
											"id": 1075,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1050,
												"name": "GetIftaVehicleReportsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IFTAGetIftaVehicleReportsResponseBody"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1070,
							"name": "getIftaVehicleReportsRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 182,
									"character": 34
								}
							],
							"signatures": [
								{
									"id": 1071,
									"name": "getIftaVehicleReportsRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get all vehicle IFTA reports for the requested time duration. Data is returned in your organization\\'s defined timezone.     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet IFTA vehicle reports."
									},
									"parameters": [
										{
											"id": 1072,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1050,
												"name": "GetIftaVehicleReportsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IFTAGetIftaVehicleReportsResponseBody"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1095,
							"name": "request",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 47,
									"character": 27
								}
							],
							"signatures": [
								{
									"id": 1096,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1097,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "RequestOpts"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.request"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.request"
							}
						},
						{
							"id": 1077,
							"name": "withMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 31,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 1078,
									"name": "withMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1079,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 1080,
											"name": "middlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Middleware"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withMiddleware"
							}
						},
						{
							"id": 1088,
							"name": "withPostMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 42,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 1089,
									"name": "withPostMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1090,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 1091,
											"name": "postMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 1092,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 1093,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 1094,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "ResponseContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "Response"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPostMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPostMiddleware"
							}
						},
						{
							"id": 1081,
							"name": "withPreMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 37,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 1082,
									"name": "withPreMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1083,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 1084,
											"name": "preMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 1085,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 1086,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 1087,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "RequestContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "FetchParams"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPreMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPreMiddleware"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1061
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1076
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1067,
								1064,
								1073,
								1070,
								1095,
								1077,
								1088,
								1081
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/IFTAApi.ts",
							"line": 112,
							"character": 20
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BaseAPI"
						}
					]
				},
				{
					"id": 1041,
					"name": "GetIftaJurisdictionReportsRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1046,
							"name": "fuelType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 91,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 1116,
								"name": "GetIftaJurisdictionReportsFuelTypeEnum"
							}
						},
						{
							"id": 1045,
							"name": "jurisdictions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 90,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1043,
							"name": "month",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 88,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 1098,
								"name": "GetIftaJurisdictionReportsMonthEnum"
							}
						},
						{
							"id": 1049,
							"name": "parentTagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 94,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1044,
							"name": "quarter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 89,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1111,
								"name": "GetIftaJurisdictionReportsQuarterEnum"
							}
						},
						{
							"id": 1048,
							"name": "tagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 93,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1047,
							"name": "vehicleIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 92,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1042,
							"name": "year",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 87,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1046,
								1045,
								1043,
								1049,
								1044,
								1048,
								1047,
								1042
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/IFTAApi.ts",
							"line": 86,
							"character": 50
						}
					]
				},
				{
					"id": 1050,
					"name": "GetIftaVehicleReportsRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1059,
							"name": "after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 106,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1055,
							"name": "fuelType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 102,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 1151,
								"name": "GetIftaVehicleReportsFuelTypeEnum"
							}
						},
						{
							"id": 1054,
							"name": "jurisdictions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 101,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1052,
							"name": "month",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 99,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 1133,
								"name": "GetIftaVehicleReportsMonthEnum"
							}
						},
						{
							"id": 1058,
							"name": "parentTagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 105,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1053,
							"name": "quarter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 100,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1146,
								"name": "GetIftaVehicleReportsQuarterEnum"
							}
						},
						{
							"id": 1057,
							"name": "tagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 104,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1056,
							"name": "vehicleIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 103,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1051,
							"name": "year",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IFTAApi.ts",
									"line": 98,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1059,
								1055,
								1054,
								1052,
								1058,
								1053,
								1057,
								1056,
								1051
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/IFTAApi.ts",
							"line": 97,
							"character": 45
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						1116,
						1098,
						1111,
						1151,
						1133,
						1146
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1060
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1041,
						1050
					]
				}
			],
			"sources": [
				{
					"fileName": "apis/IFTAApi.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1168,
			"name": "IndustrialApi",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 1233,
					"name": "IndustrialApi",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {},
					"children": [
						{
							"id": 1234,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1235,
									"name": "new IndustrialApi",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1236,
											"name": "configuration",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Configuration"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"id": 1233,
										"name": "IndustrialApi"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.constructor"
							}
						},
						{
							"id": 1335,
							"name": "configuration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true
							},
							"type": {
								"type": "reference",
								"name": "Configuration"
							},
							"defaultValue": "...",
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.configuration"
							}
						},
						{
							"id": 1240,
							"name": "createIndustrialAsset",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 223,
									"character": 31
								}
							],
							"signatures": [
								{
									"id": 1241,
									"name": "createIndustrialAsset",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create an asset with optional configuration parameters.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nCreate an asset"
									},
									"parameters": [
										{
											"id": 1242,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1169,
												"name": "CreateIndustrialAssetRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "InlineResponse200"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1237,
							"name": "createIndustrialAssetRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 201,
									"character": 34
								}
							],
							"signatures": [
								{
									"id": 1238,
									"name": "createIndustrialAssetRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create an asset with optional configuration parameters.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nCreate an asset"
									},
									"parameters": [
										{
											"id": 1239,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1169,
												"name": "CreateIndustrialAssetRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "InlineResponse200"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1246,
							"name": "deleteIndustrialAsset",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 255,
									"character": 31
								}
							],
							"signatures": [
								{
									"id": 1247,
									"name": "deleteIndustrialAsset",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Delete asset.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nDelete an existing asset"
									},
									"parameters": [
										{
											"id": 1248,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1171,
												"name": "DeleteIndustrialAssetRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1243,
							"name": "deleteIndustrialAssetRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 232,
									"character": 34
								}
							],
							"signatures": [
								{
									"id": 1244,
									"name": "deleteIndustrialAssetRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Delete asset.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nDelete an existing asset"
									},
									"parameters": [
										{
											"id": 1245,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1171,
												"name": "DeleteIndustrialAssetRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1252,
							"name": "getDataInputDataFeed",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 303,
									"character": 30
								}
							],
							"signatures": [
								{
									"id": 1253,
									"name": "getDataInputDataFeed",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Follow a continuous feed of all data input data points.  Your first call to this endpoint will provide you with the most recent data points for each data input and a `pagination` object that contains an `endCursor`.  You can provide the `endCursor` to the `after` parameter of this endpoint to get data point updates since that `endCursor`.  If `hasNextPage` is `false`, no updates are readily available yet. We suggest waiting a minimum of 5 seconds before requesting updates.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nFollow a real-time feed of data points for data inputs"
									},
									"parameters": [
										{
											"id": 1254,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1173,
												"name": "GetDataInputDataFeedRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "DataInputListResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1249,
							"name": "getDataInputDataFeedRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 264,
									"character": 33
								}
							],
							"signatures": [
								{
									"id": 1250,
									"name": "getDataInputDataFeedRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Follow a continuous feed of all data input data points.  Your first call to this endpoint will provide you with the most recent data points for each data input and a `pagination` object that contains an `endCursor`.  You can provide the `endCursor` to the `after` parameter of this endpoint to get data point updates since that `endCursor`.  If `hasNextPage` is `false`, no updates are readily available yet. We suggest waiting a minimum of 5 seconds before requesting updates.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nFollow a real-time feed of data points for data inputs"
									},
									"parameters": [
										{
											"id": 1251,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1173,
												"name": "GetDataInputDataFeedRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "DataInputListResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1258,
							"name": "getDataInputDataHistory",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 367,
									"character": 33
								}
							],
							"signatures": [
								{
									"id": 1259,
									"name": "getDataInputDataHistory",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns all known data points during the given time range for all data inputs. This can be filtered by optional tags, specific data input IDs or asset IDs.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nList historical data points for data inputs"
									},
									"parameters": [
										{
											"id": 1260,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1179,
												"name": "GetDataInputDataHistoryRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "DataInputListResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1255,
							"name": "getDataInputDataHistoryRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 312,
									"character": 36
								}
							],
							"signatures": [
								{
									"id": 1256,
									"name": "getDataInputDataHistoryRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns all known data points during the given time range for all data inputs. This can be filtered by optional tags, specific data input IDs or asset IDs.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nList historical data points for data inputs"
									},
									"parameters": [
										{
											"id": 1257,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1179,
												"name": "GetDataInputDataHistoryRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "DataInputListResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1264,
							"name": "getDataInputDataSnapshot",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 415,
									"character": 34
								}
							],
							"signatures": [
								{
									"id": 1265,
									"name": "getDataInputDataSnapshot",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns last known data points for all data inputs. This can be filtered by optional tags, specific data input IDs or asset IDs.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nList most recent data points for data inputs"
									},
									"parameters": [
										{
											"id": 1266,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1187,
												"name": "GetDataInputDataSnapshotRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "DataInputSnapshotResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1261,
							"name": "getDataInputDataSnapshotRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 376,
									"character": 37
								}
							],
							"signatures": [
								{
									"id": 1262,
									"name": "getDataInputDataSnapshotRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns last known data points for all data inputs. This can be filtered by optional tags, specific data input IDs or asset IDs.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nList most recent data points for data inputs"
									},
									"parameters": [
										{
											"id": 1263,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1187,
												"name": "GetDataInputDataSnapshotRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "DataInputSnapshotResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1270,
							"name": "getDataInputs",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 463,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 1271,
									"name": "getDataInputs",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns all data inputs, optionally filtered by tags or asset ids.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nList all data inputs"
									},
									"parameters": [
										{
											"id": 1272,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1193,
												"name": "GetDataInputsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "DataInputsTinyResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1267,
							"name": "getDataInputsRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 424,
									"character": 26
								}
							],
							"signatures": [
								{
									"id": 1268,
									"name": "getDataInputsRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns all data inputs, optionally filtered by tags or asset ids.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nList all data inputs"
									},
									"parameters": [
										{
											"id": 1269,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1193,
												"name": "GetDataInputsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "DataInputsTinyResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1276,
							"name": "getIndustrialAssets",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 511,
									"character": 29
								}
							],
							"signatures": [
								{
									"id": 1277,
									"name": "getIndustrialAssets",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "List all assets in the organization.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nList all assets"
									},
									"parameters": [
										{
											"id": 1278,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1199,
												"name": "GetIndustrialAssetsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ListIndustrialAssetsResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1273,
							"name": "getIndustrialAssetsRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 472,
									"character": 32
								}
							],
							"signatures": [
								{
									"id": 1274,
									"name": "getIndustrialAssetsRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "List all assets in the organization.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nList all assets"
									},
									"parameters": [
										{
											"id": 1275,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1199,
												"name": "GetIndustrialAssetsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ListIndustrialAssetsResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1282,
							"name": "getVisionRunsByCamera",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 555,
									"character": 31
								}
							],
							"signatures": [
								{
									"id": 1283,
									"name": "getVisionRunsByCamera",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Fetch runs by camera.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nFetch runs by camera"
									},
									"parameters": [
										{
											"id": 1284,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1205,
												"name": "GetVisionRunsByCameraRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "object"
												}
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1279,
							"name": "getVisionRunsByCameraRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 520,
									"character": 34
								}
							],
							"signatures": [
								{
									"id": 1280,
									"name": "getVisionRunsByCameraRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Fetch runs by camera.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nFetch runs by camera"
									},
									"parameters": [
										{
											"id": 1281,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1205,
												"name": "GetVisionRunsByCameraRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "object"
														}
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1288,
							"name": "patchAssetDataOutputs",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 594,
									"character": 31
								}
							],
							"signatures": [
								{
									"id": 1289,
									"name": "patchAssetDataOutputs",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Writes values to multiple data outputs on an asset simultaneously. Only the provided data outputs will be updated.     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nWrites to data outputs on an asset"
									},
									"parameters": [
										{
											"id": 1290,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1209,
												"name": "PatchAssetDataOutputsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "AssetDataOutputsPatchAssetDataOutputsResponseBody"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1285,
							"name": "patchAssetDataOutputsRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 564,
									"character": 34
								}
							],
							"signatures": [
								{
									"id": 1286,
									"name": "patchAssetDataOutputsRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Writes values to multiple data outputs on an asset simultaneously. Only the provided data outputs will be updated.     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nWrites to data outputs on an asset"
									},
									"parameters": [
										{
											"id": 1287,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1209,
												"name": "PatchAssetDataOutputsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "AssetDataOutputsPatchAssetDataOutputsResponseBody"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1294,
							"name": "patchIndustrialAsset",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 629,
									"character": 30
								}
							],
							"signatures": [
								{
									"id": 1295,
									"name": "patchIndustrialAsset",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Update an existing asset. Only the provided fields will be updated.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nUpdate an asset"
									},
									"parameters": [
										{
											"id": 1296,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1212,
												"name": "PatchIndustrialAssetRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "InlineResponse200"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1291,
							"name": "patchIndustrialAssetRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 603,
									"character": 33
								}
							],
							"signatures": [
								{
									"id": 1292,
									"name": "patchIndustrialAssetRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Update an existing asset. Only the provided fields will be updated.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nUpdate an asset"
									},
									"parameters": [
										{
											"id": 1293,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1212,
												"name": "PatchIndustrialAssetRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "InlineResponse200"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1354,
							"name": "request",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 47,
									"character": 27
								}
							],
							"signatures": [
								{
									"id": 1355,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1356,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "RequestOpts"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.request"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.request"
							}
						},
						{
							"id": 1299,
							"name": "v1getCameras",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 657,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 1300,
									"name": "v1getCameras",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Fetch all cameras.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nFetch industrial cameras"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "object"
												}
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1297,
							"name": "v1getCamerasRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 638,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1298,
									"name": "v1getCamerasRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Fetch all cameras.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nFetch industrial cameras"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "object"
														}
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1303,
							"name": "v1getMachines",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 685,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 1304,
									"name": "v1getMachines",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Get machine objects. This method returns a list of the machine objects in the Samsara Cloud and information about them.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet machines"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "InlineResponse2008"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1308,
							"name": "v1getMachinesHistory",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 720,
									"character": 30
								}
							],
							"signatures": [
								{
									"id": 1309,
									"name": "v1getMachinesHistory",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Get historical data for machine objects. This method returns a set of historical data for all machines.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet machine history"
									},
									"parameters": [
										{
											"id": 1310,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1215,
												"name": "V1getMachinesHistoryRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "V1MachineHistoryResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1305,
							"name": "v1getMachinesHistoryRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 694,
									"character": 33
								}
							],
							"signatures": [
								{
									"id": 1306,
									"name": "v1getMachinesHistoryRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Get historical data for machine objects. This method returns a set of historical data for all machines.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet machine history"
									},
									"parameters": [
										{
											"id": 1307,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1215,
												"name": "V1getMachinesHistoryRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "V1MachineHistoryResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1301,
							"name": "v1getMachinesRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 666,
									"character": 26
								}
							],
							"signatures": [
								{
									"id": 1302,
									"name": "v1getMachinesRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Get machine objects. This method returns a list of the machine objects in the Samsara Cloud and information about them.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet machines"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "InlineResponse2008"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1314,
							"name": "v1getVisionLatestRunCamera",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 768,
									"character": 36
								}
							],
							"signatures": [
								{
									"id": 1315,
									"name": "v1getVisionLatestRunCamera",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetch the latest run for a camera or program by default. If startedAtMs is supplied, fetch the specific run that corresponds to that start time.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nFetch the latest run for a camera or program"
									},
									"parameters": [
										{
											"id": 1316,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1217,
												"name": "V1getVisionLatestRunCameraRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "V1VisionRunByCameraResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1311,
							"name": "v1getVisionLatestRunCameraRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 729,
									"character": 39
								}
							],
							"signatures": [
								{
									"id": 1312,
									"name": "v1getVisionLatestRunCameraRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetch the latest run for a camera or program by default. If startedAtMs is supplied, fetch the specific run that corresponds to that start time.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nFetch the latest run for a camera or program"
									},
									"parameters": [
										{
											"id": 1313,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1217,
												"name": "V1getVisionLatestRunCameraRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "V1VisionRunByCameraResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1320,
							"name": "v1getVisionProgramsByCamera",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 800,
									"character": 37
								}
							],
							"signatures": [
								{
									"id": 1321,
									"name": "v1getVisionProgramsByCamera",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Fetch configured programs on the camera.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nFetch industrial camera programs"
									},
									"parameters": [
										{
											"id": 1322,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1223,
												"name": "V1getVisionProgramsByCameraRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "object"
												}
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1317,
							"name": "v1getVisionProgramsByCameraRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 777,
									"character": 40
								}
							],
							"signatures": [
								{
									"id": 1318,
									"name": "v1getVisionProgramsByCameraRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Fetch configured programs on the camera.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nFetch industrial camera programs"
									},
									"parameters": [
										{
											"id": 1319,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1223,
												"name": "V1getVisionProgramsByCameraRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "object"
														}
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1326,
							"name": "v1getVisionRuns",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 840,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1327,
									"name": "v1getVisionRuns",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Fetch runs.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nFetch runs"
									},
									"parameters": [
										{
											"id": 1328,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1225,
												"name": "V1getVisionRunsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "V1VisionRunsResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1332,
							"name": "v1getVisionRunsByCameraAndProgram",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 884,
									"character": 43
								}
							],
							"signatures": [
								{
									"id": 1333,
									"name": "v1getVisionRunsByCameraAndProgram",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Fetch runs by camera and program.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nFetch runs by camera and program"
									},
									"parameters": [
										{
											"id": 1334,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1228,
												"name": "V1getVisionRunsByCameraAndProgramRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "V1VisionRunsByCameraAndProgramResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1329,
							"name": "v1getVisionRunsByCameraAndProgramRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 849,
									"character": 46
								}
							],
							"signatures": [
								{
									"id": 1330,
									"name": "v1getVisionRunsByCameraAndProgramRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Fetch runs by camera and program.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nFetch runs by camera and program"
									},
									"parameters": [
										{
											"id": 1331,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1228,
												"name": "V1getVisionRunsByCameraAndProgramRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "V1VisionRunsByCameraAndProgramResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1323,
							"name": "v1getVisionRunsRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 809,
									"character": 28
								}
							],
							"signatures": [
								{
									"id": 1324,
									"name": "v1getVisionRunsRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Fetch runs.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nFetch runs"
									},
									"parameters": [
										{
											"id": 1325,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1225,
												"name": "V1getVisionRunsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "V1VisionRunsResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1336,
							"name": "withMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 31,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 1337,
									"name": "withMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1338,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 1339,
											"name": "middlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Middleware"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withMiddleware"
							}
						},
						{
							"id": 1347,
							"name": "withPostMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 42,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 1348,
									"name": "withPostMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1349,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 1350,
											"name": "postMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 1351,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 1352,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 1353,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "ResponseContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "Response"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPostMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPostMiddleware"
							}
						},
						{
							"id": 1340,
							"name": "withPreMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 37,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 1341,
									"name": "withPreMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1342,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 1343,
											"name": "preMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 1344,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 1345,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 1346,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "RequestContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "FetchParams"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPreMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPreMiddleware"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1234
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1335
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1240,
								1237,
								1246,
								1243,
								1252,
								1249,
								1258,
								1255,
								1264,
								1261,
								1270,
								1267,
								1276,
								1273,
								1282,
								1279,
								1288,
								1285,
								1294,
								1291,
								1354,
								1299,
								1297,
								1303,
								1308,
								1305,
								1301,
								1314,
								1311,
								1320,
								1317,
								1326,
								1332,
								1329,
								1323,
								1336,
								1347,
								1340
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/IndustrialApi.ts",
							"line": 195,
							"character": 26
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BaseAPI"
						}
					]
				},
				{
					"id": 1169,
					"name": "CreateIndustrialAssetRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1170,
							"name": "asset",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 99,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "AssetCreate"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1170
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/IndustrialApi.ts",
							"line": 98,
							"character": 45
						}
					]
				},
				{
					"id": 1171,
					"name": "DeleteIndustrialAssetRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1172,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 103,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1172
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/IndustrialApi.ts",
							"line": 102,
							"character": 45
						}
					]
				},
				{
					"id": 1173,
					"name": "GetDataInputDataFeedRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1174,
							"name": "after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 107,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1178,
							"name": "assetIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 111,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1177,
							"name": "dataInputIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 110,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1175,
							"name": "parentTagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 108,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1176,
							"name": "tagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 109,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1174,
								1178,
								1177,
								1175,
								1176
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/IndustrialApi.ts",
							"line": 106,
							"character": 44
						}
					]
				},
				{
					"id": 1179,
					"name": "GetDataInputDataHistoryRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1182,
							"name": "after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 117,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1186,
							"name": "assetIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 121,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1185,
							"name": "dataInputIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 120,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1181,
							"name": "endTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 116,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1183,
							"name": "parentTagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 118,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1180,
							"name": "startTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 115,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1184,
							"name": "tagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 119,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1182,
								1186,
								1185,
								1181,
								1183,
								1180,
								1184
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/IndustrialApi.ts",
							"line": 114,
							"character": 47
						}
					]
				},
				{
					"id": 1187,
					"name": "GetDataInputDataSnapshotRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1188,
							"name": "after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 125,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1192,
							"name": "assetIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 129,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1191,
							"name": "dataInputIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 128,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1189,
							"name": "parentTagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 126,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1190,
							"name": "tagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 127,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1188,
								1192,
								1191,
								1189,
								1190
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/IndustrialApi.ts",
							"line": 124,
							"character": 48
						}
					]
				},
				{
					"id": 1193,
					"name": "GetDataInputsRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1195,
							"name": "after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 134,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1198,
							"name": "assetIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 137,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1194,
							"name": "limit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 133,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1196,
							"name": "parentTagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 135,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1197,
							"name": "tagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 136,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1195,
								1198,
								1194,
								1196,
								1197
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/IndustrialApi.ts",
							"line": 132,
							"character": 37
						}
					]
				},
				{
					"id": 1199,
					"name": "GetIndustrialAssetsRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1201,
							"name": "after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 142,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1204,
							"name": "assetIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 145,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1200,
							"name": "limit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 141,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1202,
							"name": "parentTagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 143,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1203,
							"name": "tagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 144,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1201,
								1204,
								1200,
								1202,
								1203
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/IndustrialApi.ts",
							"line": 140,
							"character": 43
						}
					]
				},
				{
					"id": 1205,
					"name": "GetVisionRunsByCameraRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1206,
							"name": "cameraId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 149,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1207,
							"name": "durationMs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 150,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1208,
							"name": "endMs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 151,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1206,
								1207,
								1208
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/IndustrialApi.ts",
							"line": 148,
							"character": 45
						}
					]
				},
				{
					"id": 1209,
					"name": "PatchAssetDataOutputsRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1210,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 155,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1211,
							"name": "patchAssetDataOutputsRequestBody",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 156,
									"character": 36
								}
							],
							"type": {
								"type": "reference",
								"name": "AssetDataOutputsPatchAssetDataOutputsRequestBody"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1210,
								1211
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/IndustrialApi.ts",
							"line": 154,
							"character": 45
						}
					]
				},
				{
					"id": 1212,
					"name": "PatchIndustrialAssetRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1214,
							"name": "asset",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 161,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "AssetPatch"
							}
						},
						{
							"id": 1213,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 160,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1214,
								1213
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/IndustrialApi.ts",
							"line": 159,
							"character": 44
						}
					]
				},
				{
					"id": 1215,
					"name": "V1getMachinesHistoryRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1216,
							"name": "historyParam",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 165,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "InlineObject3"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1216
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/IndustrialApi.ts",
							"line": 164,
							"character": 44
						}
					]
				},
				{
					"id": 1217,
					"name": "V1getVisionLatestRunCameraRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1218,
							"name": "cameraId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 169,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1221,
							"name": "include",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 172,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1222,
							"name": "limit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 173,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1219,
							"name": "programId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 170,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1220,
							"name": "startedAtMs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 171,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1218,
								1221,
								1222,
								1219,
								1220
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/IndustrialApi.ts",
							"line": 168,
							"character": 50
						}
					]
				},
				{
					"id": 1223,
					"name": "V1getVisionProgramsByCameraRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1224,
							"name": "cameraId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 177,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1224
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/IndustrialApi.ts",
							"line": 176,
							"character": 51
						}
					]
				},
				{
					"id": 1228,
					"name": "V1getVisionRunsByCameraAndProgramRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1229,
							"name": "cameraId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 186,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1232,
							"name": "include",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 189,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1230,
							"name": "programId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 187,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1231,
							"name": "startedAtMs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 188,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1229,
								1232,
								1230,
								1231
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/IndustrialApi.ts",
							"line": 185,
							"character": 57
						}
					]
				},
				{
					"id": 1225,
					"name": "V1getVisionRunsRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1226,
							"name": "durationMs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 181,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1227,
							"name": "endMs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/IndustrialApi.ts",
									"line": 182,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1226,
								1227
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/IndustrialApi.ts",
							"line": 180,
							"character": 39
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1233
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1169,
						1171,
						1173,
						1179,
						1187,
						1193,
						1199,
						1205,
						1209,
						1212,
						1215,
						1217,
						1223,
						1228,
						1225
					]
				}
			],
			"sources": [
				{
					"fileName": "apis/IndustrialApi.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1357,
			"name": "MaintenanceApi",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 1379,
					"name": "MaintenanceApi",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {},
					"children": [
						{
							"id": 1380,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1381,
									"name": "new MaintenanceApi",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1382,
											"name": "configuration",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Configuration"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"id": 1379,
										"name": "MaintenanceApi"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.constructor"
							}
						},
						{
							"id": 1417,
							"name": "configuration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true
							},
							"type": {
								"type": "reference",
								"name": "Configuration"
							},
							"defaultValue": "...",
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.configuration"
							}
						},
						{
							"id": 1386,
							"name": "createDvir",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/MaintenanceApi.ts",
									"line": 109,
									"character": 20
								}
							],
							"signatures": [
								{
									"id": 1387,
									"name": "createDvir",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a new mechanic DVIR in the organization.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nCreate a mechanic DVIR"
									},
									"parameters": [
										{
											"id": 1388,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1358,
												"name": "CreateDvirOperationRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "DvirResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1383,
							"name": "createDvirRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/MaintenanceApi.ts",
									"line": 87,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 1384,
									"name": "createDvirRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a new mechanic DVIR in the organization.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nCreate a mechanic DVIR"
									},
									"parameters": [
										{
											"id": 1385,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1358,
												"name": "CreateDvirOperationRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "DvirResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1392,
							"name": "getDvirDefects",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/MaintenanceApi.ts",
									"line": 165,
									"character": 24
								}
							],
							"signatures": [
								{
									"id": 1393,
									"name": "getDvirDefects",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a list of DVIR defects in an organization, filtered by creation time. The maximum time period you can query for is 30 days.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet all defects"
									},
									"parameters": [
										{
											"id": 1394,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1360,
												"name": "GetDvirDefectsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "DefectsResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1389,
							"name": "getDvirDefectsRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/MaintenanceApi.ts",
									"line": 118,
									"character": 27
								}
							],
							"signatures": [
								{
									"id": 1390,
									"name": "getDvirDefectsRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a list of DVIR defects in an organization, filtered by creation time. The maximum time period you can query for is 30 days.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet all defects"
									},
									"parameters": [
										{
											"id": 1391,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1360,
												"name": "GetDvirDefectsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "DefectsResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1398,
							"name": "getDvirHistory",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/MaintenanceApi.ts",
									"line": 225,
									"character": 24
								}
							],
							"signatures": [
								{
									"id": 1399,
									"name": "getDvirHistory",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a list of all DVIRs in an organization.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet all DVIRs"
									},
									"parameters": [
										{
											"id": 1400,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1366,
												"name": "GetDvirHistoryRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "DvirsListResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1395,
							"name": "getDvirHistoryRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/MaintenanceApi.ts",
									"line": 174,
									"character": 27
								}
							],
							"signatures": [
								{
									"id": 1396,
									"name": "getDvirHistoryRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a list of all DVIRs in an organization.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet all DVIRs"
									},
									"parameters": [
										{
											"id": 1397,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1366,
												"name": "GetDvirHistoryRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "DvirsListResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1436,
							"name": "request",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 47,
									"character": 27
								}
							],
							"signatures": [
								{
									"id": 1437,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1438,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "RequestOpts"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.request"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.request"
							}
						},
						{
							"id": 1404,
							"name": "updateDvir",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/MaintenanceApi.ts",
									"line": 260,
									"character": 20
								}
							],
							"signatures": [
								{
									"id": 1405,
									"name": "updateDvir",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Resolves a given DVIR by marking its `isResolved` field to `true`.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nResolve a DVIR"
									},
									"parameters": [
										{
											"id": 1406,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1373,
												"name": "UpdateDvirOperationRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "DvirResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1410,
							"name": "updateDvirDefect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/MaintenanceApi.ts",
									"line": 295,
									"character": 26
								}
							],
							"signatures": [
								{
									"id": 1411,
									"name": "updateDvirDefect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Updates a given defect. Can be used to resolve a defect by marking its `isResolved` field to `true`.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nUpdate a defect"
									},
									"parameters": [
										{
											"id": 1412,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1376,
												"name": "UpdateDvirDefectRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "DefectResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1407,
							"name": "updateDvirDefectRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/MaintenanceApi.ts",
									"line": 269,
									"character": 29
								}
							],
							"signatures": [
								{
									"id": 1408,
									"name": "updateDvirDefectRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Updates a given defect. Can be used to resolve a defect by marking its `isResolved` field to `true`.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nUpdate a defect"
									},
									"parameters": [
										{
											"id": 1409,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1376,
												"name": "UpdateDvirDefectRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "DefectResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1401,
							"name": "updateDvirRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/MaintenanceApi.ts",
									"line": 234,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 1402,
									"name": "updateDvirRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Resolves a given DVIR by marking its `isResolved` field to `true`.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nResolve a DVIR"
									},
									"parameters": [
										{
											"id": 1403,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1373,
												"name": "UpdateDvirOperationRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "DvirResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1415,
							"name": "v1getFleetMaintenanceList",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/MaintenanceApi.ts",
									"line": 323,
									"character": 35
								}
							],
							"signatures": [
								{
									"id": 1416,
									"name": "v1getFleetMaintenanceList",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Get list of the vehicles with any engine faults or check light data.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet vehicles with engine faults or check lights"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "InlineResponse2004"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1413,
							"name": "v1getFleetMaintenanceListRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/MaintenanceApi.ts",
									"line": 304,
									"character": 38
								}
							],
							"signatures": [
								{
									"id": 1414,
									"name": "v1getFleetMaintenanceListRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Get list of the vehicles with any engine faults or check light data.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet vehicles with engine faults or check lights"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "InlineResponse2004"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1418,
							"name": "withMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 31,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 1419,
									"name": "withMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1420,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 1421,
											"name": "middlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Middleware"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withMiddleware"
							}
						},
						{
							"id": 1429,
							"name": "withPostMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 42,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 1430,
									"name": "withPostMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1431,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 1432,
											"name": "postMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 1433,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 1434,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 1435,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "ResponseContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "Response"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPostMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPostMiddleware"
							}
						},
						{
							"id": 1422,
							"name": "withPreMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 37,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 1423,
									"name": "withPreMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1424,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 1425,
											"name": "preMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 1426,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 1427,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 1428,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "RequestContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "FetchParams"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPreMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPreMiddleware"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1380
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1417
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1386,
								1383,
								1392,
								1389,
								1398,
								1395,
								1436,
								1404,
								1410,
								1407,
								1401,
								1415,
								1413,
								1418,
								1429,
								1422
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/MaintenanceApi.ts",
							"line": 81,
							"character": 27
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BaseAPI"
						}
					]
				},
				{
					"id": 1358,
					"name": "CreateDvirOperationRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1359,
							"name": "dvir",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/MaintenanceApi.ts",
									"line": 48,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "CreateDvirRequest"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1359
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/MaintenanceApi.ts",
							"line": 47,
							"character": 43
						}
					]
				},
				{
					"id": 1360,
					"name": "GetDvirDefectsRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1364,
							"name": "after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/MaintenanceApi.ts",
									"line": 55,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1362,
							"name": "endTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/MaintenanceApi.ts",
									"line": 53,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1365,
							"name": "isResolved",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/MaintenanceApi.ts",
									"line": 56,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1363,
							"name": "limit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/MaintenanceApi.ts",
									"line": 54,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1361,
							"name": "startTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/MaintenanceApi.ts",
									"line": 52,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1364,
								1362,
								1365,
								1363,
								1361
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/MaintenanceApi.ts",
							"line": 51,
							"character": 38
						}
					]
				},
				{
					"id": 1366,
					"name": "GetDvirHistoryRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1370,
							"name": "after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/MaintenanceApi.ts",
									"line": 63,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1368,
							"name": "endTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/MaintenanceApi.ts",
									"line": 61,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1369,
							"name": "limit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/MaintenanceApi.ts",
									"line": 62,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1371,
							"name": "parentTagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/MaintenanceApi.ts",
									"line": 64,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1367,
							"name": "startTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/MaintenanceApi.ts",
									"line": 60,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1372,
							"name": "tagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/MaintenanceApi.ts",
									"line": 65,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1370,
								1368,
								1369,
								1371,
								1367,
								1372
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/MaintenanceApi.ts",
							"line": 59,
							"character": 38
						}
					]
				},
				{
					"id": 1376,
					"name": "UpdateDvirDefectRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1378,
							"name": "defect",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/MaintenanceApi.ts",
									"line": 75,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "DefectPatch"
							}
						},
						{
							"id": 1377,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/MaintenanceApi.ts",
									"line": 74,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1378,
								1377
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/MaintenanceApi.ts",
							"line": 73,
							"character": 40
						}
					]
				},
				{
					"id": 1373,
					"name": "UpdateDvirOperationRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1375,
							"name": "dvir",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/MaintenanceApi.ts",
									"line": 70,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "UpdateDvirRequest"
							}
						},
						{
							"id": 1374,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/MaintenanceApi.ts",
									"line": 69,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1375,
								1374
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/MaintenanceApi.ts",
							"line": 68,
							"character": 43
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1379
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1358,
						1360,
						1366,
						1376,
						1373
					]
				}
			],
			"sources": [
				{
					"fileName": "apis/MaintenanceApi.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1439,
			"name": "MessagesApi",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 1445,
					"name": "MessagesApi",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {},
					"children": [
						{
							"id": 1446,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1447,
									"name": "new MessagesApi",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1448,
											"name": "configuration",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Configuration"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"id": 1445,
										"name": "MessagesApi"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.constructor"
							}
						},
						{
							"id": 1461,
							"name": "configuration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true
							},
							"type": {
								"type": "reference",
								"name": "Configuration"
							},
							"defaultValue": "...",
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.configuration"
							}
						},
						{
							"id": 1480,
							"name": "request",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 47,
									"character": 27
								}
							],
							"signatures": [
								{
									"id": 1481,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1482,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "RequestOpts"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.request"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.request"
							}
						},
						{
							"id": 1452,
							"name": "v1createMessages",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/MessagesApi.ts",
									"line": 73,
									"character": 26
								}
							],
							"signatures": [
								{
									"id": 1453,
									"name": "v1createMessages",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Send a message to a list of driver ids.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nSend a message to a list of driver ids."
									},
									"parameters": [
										{
											"id": 1454,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1440,
												"name": "V1createMessagesRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "InlineResponse2006"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1449,
							"name": "v1createMessagesRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/MessagesApi.ts",
									"line": 47,
									"character": 29
								}
							],
							"signatures": [
								{
									"id": 1450,
									"name": "v1createMessagesRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Send a message to a list of driver ids.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nSend a message to a list of driver ids."
									},
									"parameters": [
										{
											"id": 1451,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1440,
												"name": "V1createMessagesRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "InlineResponse2006"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1458,
							"name": "v1getMessages",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/MessagesApi.ts",
									"line": 109,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 1459,
									"name": "v1getMessages",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Get all messages.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet all messages."
									},
									"parameters": [
										{
											"id": 1460,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1442,
												"name": "V1getMessagesRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "InlineResponse2005"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1455,
							"name": "v1getMessagesRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/MessagesApi.ts",
									"line": 82,
									"character": 26
								}
							],
							"signatures": [
								{
									"id": 1456,
									"name": "v1getMessagesRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Get all messages.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet all messages."
									},
									"parameters": [
										{
											"id": 1457,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1442,
												"name": "V1getMessagesRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "InlineResponse2005"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1462,
							"name": "withMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 31,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 1463,
									"name": "withMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1464,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 1465,
											"name": "middlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Middleware"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withMiddleware"
							}
						},
						{
							"id": 1473,
							"name": "withPostMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 42,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 1474,
									"name": "withPostMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1475,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 1476,
											"name": "postMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 1477,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 1478,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 1479,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "ResponseContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "Response"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPostMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPostMiddleware"
							}
						},
						{
							"id": 1466,
							"name": "withPreMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 37,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 1467,
									"name": "withPreMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1468,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 1469,
											"name": "preMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 1470,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 1471,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 1472,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "RequestContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "FetchParams"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPreMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPreMiddleware"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1446
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1461
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1480,
								1452,
								1449,
								1458,
								1455,
								1462,
								1473,
								1466
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/MessagesApi.ts",
							"line": 41,
							"character": 24
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BaseAPI"
						}
					]
				},
				{
					"id": 1440,
					"name": "V1createMessagesRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1441,
							"name": "createMessages",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/MessagesApi.ts",
									"line": 30,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "InlineObject2"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1441
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/MessagesApi.ts",
							"line": 29,
							"character": 40
						}
					]
				},
				{
					"id": 1442,
					"name": "V1getMessagesRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1444,
							"name": "durationMs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/MessagesApi.ts",
									"line": 35,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1443,
							"name": "endMs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/MessagesApi.ts",
									"line": 34,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1444,
								1443
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/MessagesApi.ts",
							"line": 33,
							"character": 37
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1445
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1440,
						1442
					]
				}
			],
			"sources": [
				{
					"fileName": "apis/MessagesApi.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1483,
			"name": "OrganizationInfoApi",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 1484,
					"name": "OrganizationInfoApi",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {},
					"children": [
						{
							"id": 1485,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1486,
									"name": "new OrganizationInfoApi",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1487,
											"name": "configuration",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Configuration"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"id": 1484,
										"name": "OrganizationInfoApi"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.constructor"
							}
						},
						{
							"id": 1492,
							"name": "configuration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true
							},
							"type": {
								"type": "reference",
								"name": "Configuration"
							},
							"defaultValue": "...",
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.configuration"
							}
						},
						{
							"id": 1490,
							"name": "getOrganizationInfo",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/OrganizationInfoApi.ts",
									"line": 54,
									"character": 29
								}
							],
							"signatures": [
								{
									"id": 1491,
									"name": "getOrganizationInfo",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get information about your organization.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet information about your organization"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "OrganizationInfoResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1488,
							"name": "getOrganizationInfoRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/OrganizationInfoApi.ts",
									"line": 35,
									"character": 32
								}
							],
							"signatures": [
								{
									"id": 1489,
									"name": "getOrganizationInfoRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get information about your organization.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet information about your organization"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "OrganizationInfoResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1511,
							"name": "request",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 47,
									"character": 27
								}
							],
							"signatures": [
								{
									"id": 1512,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1513,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "RequestOpts"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.request"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.request"
							}
						},
						{
							"id": 1493,
							"name": "withMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 31,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 1494,
									"name": "withMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1495,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 1496,
											"name": "middlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Middleware"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withMiddleware"
							}
						},
						{
							"id": 1504,
							"name": "withPostMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 42,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 1505,
									"name": "withPostMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1506,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 1507,
											"name": "postMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 1508,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 1509,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 1510,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "ResponseContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "Response"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPostMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPostMiddleware"
							}
						},
						{
							"id": 1497,
							"name": "withPreMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 37,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 1498,
									"name": "withPreMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1499,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 1500,
											"name": "preMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 1501,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 1502,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 1503,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "RequestContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "FetchParams"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPreMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPreMiddleware"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1485
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1492
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1490,
								1488,
								1511,
								1493,
								1504,
								1497
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/OrganizationInfoApi.ts",
							"line": 29,
							"character": 32
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BaseAPI"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1484
					]
				}
			],
			"sources": [
				{
					"fileName": "apis/OrganizationInfoApi.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1514,
			"name": "RoutesApi",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 1595,
					"name": "GetRoutesFeedExpandEnum",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "export",
								"text": ""
							}
						]
					},
					"children": [
						{
							"id": 1596,
							"name": "Route",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/RoutesApi.ts",
									"line": 464,
									"character": 9
								}
							],
							"defaultValue": "\"route\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								1596
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/RoutesApi.ts",
							"line": 463,
							"character": 35
						}
					]
				},
				{
					"id": 1533,
					"name": "RoutesApi",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {},
					"children": [
						{
							"id": 1534,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1535,
									"name": "new RoutesApi",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1536,
											"name": "configuration",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Configuration"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"id": 1533,
										"name": "RoutesApi"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.constructor"
							}
						},
						{
							"id": 1573,
							"name": "configuration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true
							},
							"type": {
								"type": "reference",
								"name": "Configuration"
							},
							"defaultValue": "...",
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.configuration"
							}
						},
						{
							"id": 1540,
							"name": "createRoute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/RoutesApi.ts",
									"line": 259,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 1541,
									"name": "createRoute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create a route. The legacy version of this endpoint can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/createDispatchRoute).     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nCreate a route"
									},
									"parameters": [
										{
											"id": 1542,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1515,
												"name": "CreateRouteRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "RoutesCreateRouteResponseBody"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1537,
							"name": "createRouteRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/RoutesApi.ts",
									"line": 233,
									"character": 24
								}
							],
							"signatures": [
								{
									"id": 1538,
									"name": "createRouteRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create a route. The legacy version of this endpoint can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/createDispatchRoute).     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nCreate a route"
									},
									"parameters": [
										{
											"id": 1539,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1515,
												"name": "CreateRouteRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "RoutesCreateRouteResponseBody"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1546,
							"name": "fetchRoute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/RoutesApi.ts",
									"line": 291,
									"character": 20
								}
							],
							"signatures": [
								{
									"id": 1547,
									"name": "fetchRoute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a single route. The legacy version of this endpoint can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/getDispatchRouteById).     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nFetch a route"
									},
									"parameters": [
										{
											"id": 1548,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1517,
												"name": "FetchRouteRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "RoutesFetchRouteResponseBody"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1543,
							"name": "fetchRouteRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/RoutesApi.ts",
									"line": 268,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 1544,
									"name": "fetchRouteRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a single route. The legacy version of this endpoint can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/getDispatchRouteById).     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nFetch a route"
									},
									"parameters": [
										{
											"id": 1545,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1517,
												"name": "FetchRouteRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "RoutesFetchRouteResponseBody"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1552,
							"name": "fetchRoutes",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/RoutesApi.ts",
									"line": 343,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 1553,
									"name": "fetchRoutes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns multiple routes. The legacy version of this endpoint can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/fetchAllDispatchRoutes).     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nFetch all routes"
									},
									"parameters": [
										{
											"id": 1554,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1519,
												"name": "FetchRoutesRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "RoutesFetchRoutesResponseBody"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1549,
							"name": "fetchRoutesRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/RoutesApi.ts",
									"line": 300,
									"character": 24
								}
							],
							"signatures": [
								{
									"id": 1550,
									"name": "fetchRoutesRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns multiple routes. The legacy version of this endpoint can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/fetchAllDispatchRoutes).     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nFetch all routes"
									},
									"parameters": [
										{
											"id": 1551,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1519,
												"name": "FetchRoutesRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "RoutesFetchRoutesResponseBody"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1558,
							"name": "getRoutesFeed",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/RoutesApi.ts",
									"line": 379,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 1559,
									"name": "getRoutesFeed",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Subscribes to a feed of immutable, append-only updates for routes. The initial request to this feed endpoint returns a cursor, which can be used on the next request to fetch updated routes that have had state changes since that request.  The legacy version of this endpoint can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/fetchAllRouteJobUpdates).     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet route updates"
									},
									"parameters": [
										{
											"id": 1560,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1524,
												"name": "GetRoutesFeedRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "RoutesGetRoutesFeedResponseBody"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1555,
							"name": "getRoutesFeedRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/RoutesApi.ts",
									"line": 352,
									"character": 26
								}
							],
							"signatures": [
								{
									"id": 1556,
									"name": "getRoutesFeedRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Subscribes to a feed of immutable, append-only updates for routes. The initial request to this feed endpoint returns a cursor, which can be used on the next request to fetch updated routes that have had state changes since that request.  The legacy version of this endpoint can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/fetchAllRouteJobUpdates).     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet route updates"
									},
									"parameters": [
										{
											"id": 1557,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1524,
												"name": "GetRoutesFeedRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "RoutesGetRoutesFeedResponseBody"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1564,
							"name": "patchRoute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/RoutesApi.ts",
									"line": 418,
									"character": 20
								}
							],
							"signatures": [
								{
									"id": 1565,
									"name": "patchRoute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Update a route.  **Note** this implementation of patch uses [the JSON merge patch](https://tools.ietf.org/html/rfc7396) proposed standard.  This means that any fields included in the patch request will _overwrite_ fields which exist on the target resource.  For arrays, this means any array included in the request will _replace_ the array that exists at the specified path, it will not _add_ to the existing array.  The legacy version of this endpoint (which uses PUT instead of PATCH) can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/updateDispatchRouteById).     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nUpdate a route"
									},
									"parameters": [
										{
											"id": 1566,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1527,
												"name": "PatchRouteRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "RoutesPatchRouteResponseBody"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1561,
							"name": "patchRouteRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/RoutesApi.ts",
									"line": 388,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 1562,
									"name": "patchRouteRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Update a route.  **Note** this implementation of patch uses [the JSON merge patch](https://tools.ietf.org/html/rfc7396) proposed standard.  This means that any fields included in the patch request will _overwrite_ fields which exist on the target resource.  For arrays, this means any array included in the request will _replace_ the array that exists at the specified path, it will not _add_ to the existing array.  The legacy version of this endpoint (which uses PUT instead of PATCH) can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/updateDispatchRouteById).     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nUpdate a route"
									},
									"parameters": [
										{
											"id": 1563,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1527,
												"name": "PatchRouteRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "RoutesPatchRouteResponseBody"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1592,
							"name": "request",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 47,
									"character": 27
								}
							],
							"signatures": [
								{
									"id": 1593,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1594,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "RequestOpts"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.request"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.request"
							}
						},
						{
							"id": 1570,
							"name": "v1deleteDispatchRouteById",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/RoutesApi.ts",
									"line": 453,
									"character": 35
								}
							],
							"signatures": [
								{
									"id": 1571,
									"name": "v1deleteDispatchRouteById",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Delete a dispatch route and its associated jobs.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nDelete a route"
									},
									"parameters": [
										{
											"id": 1572,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1530,
												"name": "V1deleteDispatchRouteByIdRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1567,
							"name": "v1deleteDispatchRouteByIdRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/RoutesApi.ts",
									"line": 427,
									"character": 38
								}
							],
							"signatures": [
								{
									"id": 1568,
									"name": "v1deleteDispatchRouteByIdRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Delete a dispatch route and its associated jobs.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nDelete a route"
									},
									"parameters": [
										{
											"id": 1569,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1530,
												"name": "V1deleteDispatchRouteByIdRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1574,
							"name": "withMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 31,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 1575,
									"name": "withMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1576,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 1577,
											"name": "middlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Middleware"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withMiddleware"
							}
						},
						{
							"id": 1585,
							"name": "withPostMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 42,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 1586,
									"name": "withPostMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1587,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 1588,
											"name": "postMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 1589,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 1590,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 1591,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "ResponseContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "Response"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPostMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPostMiddleware"
							}
						},
						{
							"id": 1578,
							"name": "withPreMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 37,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 1579,
									"name": "withPreMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1580,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 1581,
											"name": "preMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 1582,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 1583,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 1584,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "RequestContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "FetchParams"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPreMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPreMiddleware"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1534
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1573
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1540,
								1537,
								1546,
								1543,
								1552,
								1549,
								1558,
								1555,
								1564,
								1561,
								1592,
								1570,
								1567,
								1574,
								1585,
								1578
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/RoutesApi.ts",
							"line": 227,
							"character": 22
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BaseAPI"
						}
					]
				},
				{
					"id": 1515,
					"name": "CreateRouteRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1516,
							"name": "createRouteRequestBody",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/RoutesApi.ts",
									"line": 195,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"name": "RoutesCreateRouteRequestBody"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1516
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/RoutesApi.ts",
							"line": 194,
							"character": 35
						}
					]
				},
				{
					"id": 1517,
					"name": "FetchRouteRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1518,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/RoutesApi.ts",
									"line": 199,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1518
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/RoutesApi.ts",
							"line": 198,
							"character": 34
						}
					]
				},
				{
					"id": 1519,
					"name": "FetchRoutesRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1523,
							"name": "after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/RoutesApi.ts",
									"line": 206,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1521,
							"name": "endTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/RoutesApi.ts",
									"line": 204,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1522,
							"name": "limit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/RoutesApi.ts",
									"line": 205,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1520,
							"name": "startTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/RoutesApi.ts",
									"line": 203,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1523,
								1521,
								1522,
								1520
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/RoutesApi.ts",
							"line": 202,
							"character": 35
						}
					]
				},
				{
					"id": 1524,
					"name": "GetRoutesFeedRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1525,
							"name": "after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/RoutesApi.ts",
									"line": 210,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1526,
							"name": "expand",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/RoutesApi.ts",
									"line": 211,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 1596,
								"name": "Route"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1525,
								1526
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/RoutesApi.ts",
							"line": 209,
							"character": 37
						}
					]
				},
				{
					"id": 1527,
					"name": "PatchRouteRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1528,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/RoutesApi.ts",
									"line": 215,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1529,
							"name": "patchRouteRequestBody",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/RoutesApi.ts",
									"line": 216,
									"character": 25
								}
							],
							"type": {
								"type": "reference",
								"name": "RoutesPatchRouteRequestBody"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1528,
								1529
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/RoutesApi.ts",
							"line": 214,
							"character": 34
						}
					]
				},
				{
					"id": 1530,
					"name": "V1deleteDispatchRouteByIdRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1532,
							"name": "applyToFutureRoutes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/RoutesApi.ts",
									"line": 221,
									"character": 23
								}
							],
							"type": {
								"type": "reference",
								"name": "InlineObject"
							}
						},
						{
							"id": 1531,
							"name": "routeIdOrExternalId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/RoutesApi.ts",
									"line": 220,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1532,
								1531
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/RoutesApi.ts",
							"line": 219,
							"character": 49
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						1595
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1533
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1515,
						1517,
						1519,
						1524,
						1527,
						1530
					]
				}
			],
			"sources": [
				{
					"fileName": "apis/RoutesApi.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1597,
			"name": "SafetyApi",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 1616,
					"name": "SafetyApi",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {},
					"children": [
						{
							"id": 1617,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1618,
									"name": "new SafetyApi",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1619,
											"name": "configuration",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Configuration"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"id": 1616,
										"name": "SafetyApi"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.constructor"
							}
						},
						{
							"id": 1644,
							"name": "configuration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true
							},
							"type": {
								"type": "reference",
								"name": "Configuration"
							},
							"defaultValue": "...",
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.configuration"
							}
						},
						{
							"id": 1623,
							"name": "getSafetyEvents",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/SafetyApi.ts",
									"line": 121,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1624,
									"name": "getSafetyEvents",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetch safety events for the organization in a given time period.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nList all safety events."
									},
									"parameters": [
										{
											"id": 1625,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1598,
												"name": "GetSafetyEventsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "SafetyEventsListResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1620,
							"name": "getSafetyEventsRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/SafetyApi.ts",
									"line": 70,
									"character": 28
								}
							],
							"signatures": [
								{
									"id": 1621,
									"name": "getSafetyEventsRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetch safety events for the organization in a given time period.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nList all safety events."
									},
									"parameters": [
										{
											"id": 1622,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1598,
												"name": "GetSafetyEventsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SafetyEventsListResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1663,
							"name": "request",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 47,
									"character": 27
								}
							],
							"signatures": [
								{
									"id": 1664,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1665,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "RequestOpts"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.request"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.request"
							}
						},
						{
							"id": 1629,
							"name": "v1getDriverSafetyScore",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/SafetyApi.ts",
									"line": 169,
									"character": 32
								}
							],
							"signatures": [
								{
									"id": 1630,
									"name": "v1getDriverSafetyScore",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Fetch the safety score for the driver.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nFetch driver safety score"
									},
									"parameters": [
										{
											"id": 1631,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1605,
												"name": "V1getDriverSafetyScoreRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "V1DriverSafetyScoreResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1626,
							"name": "v1getDriverSafetyScoreRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/SafetyApi.ts",
									"line": 130,
									"character": 35
								}
							],
							"signatures": [
								{
									"id": 1627,
									"name": "v1getDriverSafetyScoreRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Fetch the safety score for the driver.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nFetch driver safety score"
									},
									"parameters": [
										{
											"id": 1628,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1605,
												"name": "V1getDriverSafetyScoreRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "V1DriverSafetyScoreResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1635,
							"name": "v1getVehicleHarshEvent",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/SafetyApi.ts",
									"line": 209,
									"character": 32
								}
							],
							"signatures": [
								{
									"id": 1636,
									"name": "v1getVehicleHarshEvent",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Fetch harsh event details for a vehicle.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nFetch harsh events"
									},
									"parameters": [
										{
											"id": 1637,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1609,
												"name": "V1getVehicleHarshEventRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "V1VehicleHarshEventResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1632,
							"name": "v1getVehicleHarshEventRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/SafetyApi.ts",
									"line": 178,
									"character": 35
								}
							],
							"signatures": [
								{
									"id": 1633,
									"name": "v1getVehicleHarshEventRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Fetch harsh event details for a vehicle.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nFetch harsh events"
									},
									"parameters": [
										{
											"id": 1634,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1609,
												"name": "V1getVehicleHarshEventRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "V1VehicleHarshEventResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1641,
							"name": "v1getVehicleSafetyScore",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/SafetyApi.ts",
									"line": 257,
									"character": 33
								}
							],
							"signatures": [
								{
									"id": 1642,
									"name": "v1getVehicleSafetyScore",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Fetch the safety score for the vehicle.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nFetch vehicle safety scores"
									},
									"parameters": [
										{
											"id": 1643,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1612,
												"name": "V1getVehicleSafetyScoreRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "V1VehicleSafetyScoreResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1638,
							"name": "v1getVehicleSafetyScoreRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/SafetyApi.ts",
									"line": 218,
									"character": 36
								}
							],
							"signatures": [
								{
									"id": 1639,
									"name": "v1getVehicleSafetyScoreRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Fetch the safety score for the vehicle.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nFetch vehicle safety scores"
									},
									"parameters": [
										{
											"id": 1640,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1612,
												"name": "V1getVehicleSafetyScoreRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "V1VehicleSafetyScoreResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1645,
							"name": "withMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 31,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 1646,
									"name": "withMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1647,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 1648,
											"name": "middlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Middleware"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withMiddleware"
							}
						},
						{
							"id": 1656,
							"name": "withPostMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 42,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 1657,
									"name": "withPostMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1658,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 1659,
											"name": "postMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 1660,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 1661,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 1662,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "ResponseContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "Response"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPostMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPostMiddleware"
							}
						},
						{
							"id": 1649,
							"name": "withPreMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 37,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 1650,
									"name": "withPreMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1651,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 1652,
											"name": "preMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 1653,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 1654,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 1655,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "RequestContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "FetchParams"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPreMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPreMiddleware"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1617
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1644
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1623,
								1620,
								1663,
								1629,
								1626,
								1635,
								1632,
								1641,
								1638,
								1645,
								1656,
								1649
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/SafetyApi.ts",
							"line": 64,
							"character": 22
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BaseAPI"
						}
					]
				},
				{
					"id": 1598,
					"name": "GetSafetyEventsRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1601,
							"name": "after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/SafetyApi.ts",
									"line": 38,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1600,
							"name": "endTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/SafetyApi.ts",
									"line": 37,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1603,
							"name": "parentTagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/SafetyApi.ts",
									"line": 40,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1599,
							"name": "startTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/SafetyApi.ts",
									"line": 36,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1602,
							"name": "tagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/SafetyApi.ts",
									"line": 39,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1604,
							"name": "vehicleIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/SafetyApi.ts",
									"line": 41,
									"character": 14
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1601,
								1600,
								1603,
								1599,
								1602,
								1604
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/SafetyApi.ts",
							"line": 35,
							"character": 39
						}
					]
				},
				{
					"id": 1605,
					"name": "V1getDriverSafetyScoreRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1606,
							"name": "driverId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/SafetyApi.ts",
									"line": 45,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1608,
							"name": "endMs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/SafetyApi.ts",
									"line": 47,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1607,
							"name": "startMs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/SafetyApi.ts",
									"line": 46,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1606,
								1608,
								1607
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/SafetyApi.ts",
							"line": 44,
							"character": 46
						}
					]
				},
				{
					"id": 1609,
					"name": "V1getVehicleHarshEventRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1611,
							"name": "timestamp",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/SafetyApi.ts",
									"line": 52,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1610,
							"name": "vehicleId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/SafetyApi.ts",
									"line": 51,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1611,
								1610
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/SafetyApi.ts",
							"line": 50,
							"character": 46
						}
					]
				},
				{
					"id": 1612,
					"name": "V1getVehicleSafetyScoreRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1615,
							"name": "endMs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/SafetyApi.ts",
									"line": 58,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1614,
							"name": "startMs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/SafetyApi.ts",
									"line": 57,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1613,
							"name": "vehicleId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/SafetyApi.ts",
									"line": 56,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1615,
								1614,
								1613
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/SafetyApi.ts",
							"line": 55,
							"character": 47
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1616
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1598,
						1605,
						1609,
						1612
					]
				}
			],
			"sources": [
				{
					"fileName": "apis/SafetyApi.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1666,
			"name": "SensorsApi",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 1677,
					"name": "SensorsApi",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {},
					"children": [
						{
							"id": 1678,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1679,
									"name": "new SensorsApi",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1680,
											"name": "configuration",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Configuration"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"id": 1677,
										"name": "SensorsApi"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.constructor"
							}
						},
						{
							"id": 1715,
							"name": "configuration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true
							},
							"type": {
								"type": "reference",
								"name": "Configuration"
							},
							"defaultValue": "...",
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.configuration"
							}
						},
						{
							"id": 1734,
							"name": "request",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 47,
									"character": 27
								}
							],
							"signatures": [
								{
									"id": 1735,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1736,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "RequestOpts"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.request"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.request"
							}
						},
						{
							"id": 1683,
							"name": "v1getSensors",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/SensorsApi.ts",
									"line": 101,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 1684,
									"name": "v1getSensors",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Get sensor objects. This method returns a list of the sensor objects in the Samsara Cloud and information about them.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet all sensors"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "InlineResponse2009"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1688,
							"name": "v1getSensorsCargo",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/SensorsApi.ts",
									"line": 136,
									"character": 27
								}
							],
							"signatures": [
								{
									"id": 1689,
									"name": "v1getSensorsCargo",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Get cargo monitor status (empty / full) for requested sensors.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet cargo status"
									},
									"parameters": [
										{
											"id": 1690,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1667,
												"name": "V1getSensorsCargoRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "V1CargoResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1685,
							"name": "v1getSensorsCargoRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/SensorsApi.ts",
									"line": 110,
									"character": 30
								}
							],
							"signatures": [
								{
									"id": 1686,
									"name": "v1getSensorsCargoRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Get cargo monitor status (empty / full) for requested sensors.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet cargo status"
									},
									"parameters": [
										{
											"id": 1687,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1667,
												"name": "V1getSensorsCargoRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "V1CargoResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1694,
							"name": "v1getSensorsDoor",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/SensorsApi.ts",
									"line": 171,
									"character": 26
								}
							],
							"signatures": [
								{
									"id": 1695,
									"name": "v1getSensorsDoor",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Get door monitor status (closed / open) for requested sensors.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet door status"
									},
									"parameters": [
										{
											"id": 1696,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1669,
												"name": "V1getSensorsDoorRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "V1DoorResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1691,
							"name": "v1getSensorsDoorRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/SensorsApi.ts",
									"line": 145,
									"character": 29
								}
							],
							"signatures": [
								{
									"id": 1692,
									"name": "v1getSensorsDoorRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Get door monitor status (closed / open) for requested sensors.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet door status"
									},
									"parameters": [
										{
											"id": 1693,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1669,
												"name": "V1getSensorsDoorRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "V1DoorResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1700,
							"name": "v1getSensorsHistory",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/SensorsApi.ts",
									"line": 206,
									"character": 29
								}
							],
							"signatures": [
								{
									"id": 1701,
									"name": "v1getSensorsHistory",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Get historical data for specified sensors. This method returns a set of historical data for the specified sensors in the specified time range and at the specified time resolution.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet sensor history"
									},
									"parameters": [
										{
											"id": 1702,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1671,
												"name": "V1getSensorsHistoryRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "V1SensorHistoryResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1697,
							"name": "v1getSensorsHistoryRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/SensorsApi.ts",
									"line": 180,
									"character": 32
								}
							],
							"signatures": [
								{
									"id": 1698,
									"name": "v1getSensorsHistoryRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Get historical data for specified sensors. This method returns a set of historical data for the specified sensors in the specified time range and at the specified time resolution.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet sensor history"
									},
									"parameters": [
										{
											"id": 1699,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1671,
												"name": "V1getSensorsHistoryRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "V1SensorHistoryResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1706,
							"name": "v1getSensorsHumidity",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/SensorsApi.ts",
									"line": 241,
									"character": 30
								}
							],
							"signatures": [
								{
									"id": 1707,
									"name": "v1getSensorsHumidity",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Get humidity for requested sensors. This method returns the current relative humidity for the requested sensors.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet humidity"
									},
									"parameters": [
										{
											"id": 1708,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1673,
												"name": "V1getSensorsHumidityRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "V1HumidityResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1703,
							"name": "v1getSensorsHumidityRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/SensorsApi.ts",
									"line": 215,
									"character": 33
								}
							],
							"signatures": [
								{
									"id": 1704,
									"name": "v1getSensorsHumidityRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Get humidity for requested sensors. This method returns the current relative humidity for the requested sensors.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet humidity"
									},
									"parameters": [
										{
											"id": 1705,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1673,
												"name": "V1getSensorsHumidityRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "V1HumidityResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1681,
							"name": "v1getSensorsRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/SensorsApi.ts",
									"line": 82,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1682,
									"name": "v1getSensorsRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Get sensor objects. This method returns a list of the sensor objects in the Samsara Cloud and information about them.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet all sensors"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "InlineResponse2009"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1712,
							"name": "v1getSensorsTemperature",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/SensorsApi.ts",
									"line": 276,
									"character": 33
								}
							],
							"signatures": [
								{
									"id": 1713,
									"name": "v1getSensorsTemperature",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Get temperature for requested sensors. This method returns the current ambient temperature (and probe temperature if applicable) for the requested sensors.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet temperature"
									},
									"parameters": [
										{
											"id": 1714,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1675,
												"name": "V1getSensorsTemperatureRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "V1TemperatureResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1709,
							"name": "v1getSensorsTemperatureRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/SensorsApi.ts",
									"line": 250,
									"character": 36
								}
							],
							"signatures": [
								{
									"id": 1710,
									"name": "v1getSensorsTemperatureRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Get temperature for requested sensors. This method returns the current ambient temperature (and probe temperature if applicable) for the requested sensors.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet temperature"
									},
									"parameters": [
										{
											"id": 1711,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1675,
												"name": "V1getSensorsTemperatureRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "V1TemperatureResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1716,
							"name": "withMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 31,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 1717,
									"name": "withMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1718,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 1719,
											"name": "middlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Middleware"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withMiddleware"
							}
						},
						{
							"id": 1727,
							"name": "withPostMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 42,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 1728,
									"name": "withPostMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1729,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 1730,
											"name": "postMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 1731,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 1732,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 1733,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "ResponseContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "Response"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPostMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPostMiddleware"
							}
						},
						{
							"id": 1720,
							"name": "withPreMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 37,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 1721,
									"name": "withPreMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1722,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 1723,
											"name": "preMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 1724,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 1725,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 1726,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "RequestContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "FetchParams"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPreMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPreMiddleware"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1678
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1715
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1734,
								1683,
								1688,
								1685,
								1694,
								1691,
								1700,
								1697,
								1706,
								1703,
								1681,
								1712,
								1709,
								1716,
								1727,
								1720
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/SensorsApi.ts",
							"line": 76,
							"character": 23
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BaseAPI"
						}
					]
				},
				{
					"id": 1667,
					"name": "V1getSensorsCargoRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1668,
							"name": "v1sensorParam",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/SensorsApi.ts",
									"line": 54,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "InlineObject4"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1668
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/SensorsApi.ts",
							"line": 53,
							"character": 41
						}
					]
				},
				{
					"id": 1669,
					"name": "V1getSensorsDoorRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1670,
							"name": "v1sensorParam",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/SensorsApi.ts",
									"line": 58,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "InlineObject5"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1670
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/SensorsApi.ts",
							"line": 57,
							"character": 40
						}
					]
				},
				{
					"id": 1671,
					"name": "V1getSensorsHistoryRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1672,
							"name": "historyParam",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/SensorsApi.ts",
									"line": 62,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "InlineObject6"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1672
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/SensorsApi.ts",
							"line": 61,
							"character": 43
						}
					]
				},
				{
					"id": 1673,
					"name": "V1getSensorsHumidityRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1674,
							"name": "v1sensorParam",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/SensorsApi.ts",
									"line": 66,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "InlineObject7"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1674
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/SensorsApi.ts",
							"line": 65,
							"character": 44
						}
					]
				},
				{
					"id": 1675,
					"name": "V1getSensorsTemperatureRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1676,
							"name": "v1sensorParam",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/SensorsApi.ts",
									"line": 70,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "InlineObject8"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1676
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/SensorsApi.ts",
							"line": 69,
							"character": 47
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1677
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1667,
						1669,
						1671,
						1673,
						1675
					]
				}
			],
			"sources": [
				{
					"fileName": "apis/SensorsApi.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1737,
			"name": "TachographEUOnlyApi",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 1759,
					"name": "TachographEUOnlyApi",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {},
					"children": [
						{
							"id": 1760,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1761,
									"name": "new TachographEUOnlyApi",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1762,
											"name": "configuration",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Configuration"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"id": 1759,
										"name": "TachographEUOnlyApi"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.constructor"
							}
						},
						{
							"id": 1781,
							"name": "configuration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true
							},
							"type": {
								"type": "reference",
								"name": "Configuration"
							},
							"defaultValue": "...",
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.configuration"
							}
						},
						{
							"id": 1766,
							"name": "getDriverTachographActivity",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/TachographEUOnlyApi.ts",
									"line": 119,
									"character": 37
								}
							],
							"signatures": [
								{
									"id": 1767,
									"name": "getDriverTachographActivity",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns all known tachograph activity for all specified drivers in the time range.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet driver tachograph activity"
									},
									"parameters": [
										{
											"id": 1768,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1738,
												"name": "GetDriverTachographActivityRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "DriverTachographActivityResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1763,
							"name": "getDriverTachographActivityRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/TachographEUOnlyApi.ts",
									"line": 68,
									"character": 40
								}
							],
							"signatures": [
								{
									"id": 1764,
									"name": "getDriverTachographActivityRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns all known tachograph activity for all specified drivers in the time range.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet driver tachograph activity"
									},
									"parameters": [
										{
											"id": 1765,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1738,
												"name": "GetDriverTachographActivityRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "DriverTachographActivityResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1772,
							"name": "getDriverTachographFiles",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/TachographEUOnlyApi.ts",
									"line": 179,
									"character": 34
								}
							],
							"signatures": [
								{
									"id": 1773,
									"name": "getDriverTachographFiles",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns all known tachograph files for all specified drivers in the time range.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet tachograph driver files"
									},
									"parameters": [
										{
											"id": 1774,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1745,
												"name": "GetDriverTachographFilesRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "TachographDriverFilesResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1769,
							"name": "getDriverTachographFilesRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/TachographEUOnlyApi.ts",
									"line": 128,
									"character": 37
								}
							],
							"signatures": [
								{
									"id": 1770,
									"name": "getDriverTachographFilesRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns all known tachograph files for all specified drivers in the time range.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet tachograph driver files"
									},
									"parameters": [
										{
											"id": 1771,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1745,
												"name": "GetDriverTachographFilesRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "TachographDriverFilesResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1778,
							"name": "getVehicleTachographFiles",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/TachographEUOnlyApi.ts",
									"line": 239,
									"character": 35
								}
							],
							"signatures": [
								{
									"id": 1779,
									"name": "getVehicleTachographFiles",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns all known tachograph files for all specified vehicles in the time range.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet tachograph vehicle files"
									},
									"parameters": [
										{
											"id": 1780,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1752,
												"name": "GetVehicleTachographFilesRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "TachographVehicleFilesResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1775,
							"name": "getVehicleTachographFilesRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/TachographEUOnlyApi.ts",
									"line": 188,
									"character": 38
								}
							],
							"signatures": [
								{
									"id": 1776,
									"name": "getVehicleTachographFilesRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns all known tachograph files for all specified vehicles in the time range.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet tachograph vehicle files"
									},
									"parameters": [
										{
											"id": 1777,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1752,
												"name": "GetVehicleTachographFilesRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "TachographVehicleFilesResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1800,
							"name": "request",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 47,
									"character": 27
								}
							],
							"signatures": [
								{
									"id": 1801,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1802,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "RequestOpts"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.request"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.request"
							}
						},
						{
							"id": 1782,
							"name": "withMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 31,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 1783,
									"name": "withMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1784,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 1785,
											"name": "middlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Middleware"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withMiddleware"
							}
						},
						{
							"id": 1793,
							"name": "withPostMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 42,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 1794,
									"name": "withPostMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1795,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 1796,
											"name": "postMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 1797,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 1798,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 1799,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "ResponseContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "Response"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPostMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPostMiddleware"
							}
						},
						{
							"id": 1786,
							"name": "withPreMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 37,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 1787,
									"name": "withPreMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1788,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 1789,
											"name": "preMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 1790,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 1791,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 1792,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "RequestContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "FetchParams"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPreMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPreMiddleware"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1760
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1781
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1766,
								1763,
								1772,
								1769,
								1778,
								1775,
								1800,
								1782,
								1793,
								1786
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/TachographEUOnlyApi.ts",
							"line": 62,
							"character": 32
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BaseAPI"
						}
					]
				},
				{
					"id": 1738,
					"name": "GetDriverTachographActivityRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1741,
							"name": "after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/TachographEUOnlyApi.ts",
									"line": 35,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1742,
							"name": "driverIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/TachographEUOnlyApi.ts",
									"line": 36,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1740,
							"name": "endTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/TachographEUOnlyApi.ts",
									"line": 34,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1743,
							"name": "parentTagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/TachographEUOnlyApi.ts",
									"line": 37,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1739,
							"name": "startTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/TachographEUOnlyApi.ts",
									"line": 33,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1744,
							"name": "tagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/TachographEUOnlyApi.ts",
									"line": 38,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1741,
								1742,
								1740,
								1743,
								1739,
								1744
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/TachographEUOnlyApi.ts",
							"line": 32,
							"character": 51
						}
					]
				},
				{
					"id": 1745,
					"name": "GetDriverTachographFilesRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1748,
							"name": "after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/TachographEUOnlyApi.ts",
									"line": 44,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1749,
							"name": "driverIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/TachographEUOnlyApi.ts",
									"line": 45,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1747,
							"name": "endTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/TachographEUOnlyApi.ts",
									"line": 43,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1750,
							"name": "parentTagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/TachographEUOnlyApi.ts",
									"line": 46,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1746,
							"name": "startTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/TachographEUOnlyApi.ts",
									"line": 42,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1751,
							"name": "tagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/TachographEUOnlyApi.ts",
									"line": 47,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1748,
								1749,
								1747,
								1750,
								1746,
								1751
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/TachographEUOnlyApi.ts",
							"line": 41,
							"character": 48
						}
					]
				},
				{
					"id": 1752,
					"name": "GetVehicleTachographFilesRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1755,
							"name": "after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/TachographEUOnlyApi.ts",
									"line": 53,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1754,
							"name": "endTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/TachographEUOnlyApi.ts",
									"line": 52,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1757,
							"name": "parentTagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/TachographEUOnlyApi.ts",
									"line": 55,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1753,
							"name": "startTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/TachographEUOnlyApi.ts",
									"line": 51,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1758,
							"name": "tagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/TachographEUOnlyApi.ts",
									"line": 56,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1756,
							"name": "vehicleIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/TachographEUOnlyApi.ts",
									"line": 54,
									"character": 14
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1755,
								1754,
								1757,
								1753,
								1758,
								1756
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/TachographEUOnlyApi.ts",
							"line": 50,
							"character": 49
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1759
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1738,
						1745,
						1752
					]
				}
			],
			"sources": [
				{
					"fileName": "apis/TachographEUOnlyApi.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1803,
			"name": "TagsApi",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 1819,
					"name": "TagsApi",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {},
					"children": [
						{
							"id": 1820,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1821,
									"name": "new TagsApi",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1822,
											"name": "configuration",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Configuration"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"id": 1819,
										"name": "TagsApi"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.constructor"
							}
						},
						{
							"id": 1859,
							"name": "configuration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true
							},
							"type": {
								"type": "reference",
								"name": "Configuration"
							},
							"defaultValue": "...",
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.configuration"
							}
						},
						{
							"id": 1826,
							"name": "createTag",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/TagsApi.ts",
									"line": 100,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 1827,
									"name": "createTag",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create a new tag for the organization.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nCreate a tag"
									},
									"parameters": [
										{
											"id": 1828,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1804,
												"name": "CreateTagOperationRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "TagResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1823,
							"name": "createTagRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/TagsApi.ts",
									"line": 74,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 1824,
									"name": "createTagRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create a new tag for the organization.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nCreate a tag"
									},
									"parameters": [
										{
											"id": 1825,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1804,
												"name": "CreateTagOperationRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "TagResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1832,
							"name": "deleteTag",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/TagsApi.ts",
									"line": 132,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 1833,
									"name": "deleteTag",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Permanently deletes a tag.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nDelete a tag"
									},
									"parameters": [
										{
											"id": 1834,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1806,
												"name": "DeleteTagRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1829,
							"name": "deleteTagRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/TagsApi.ts",
									"line": 109,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 1830,
									"name": "deleteTagRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Permanently deletes a tag.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nDelete a tag"
									},
									"parameters": [
										{
											"id": 1831,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1806,
												"name": "DeleteTagRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1838,
							"name": "getTag",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/TagsApi.ts",
									"line": 164,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 1839,
									"name": "getTag",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetch a tag by id.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nRetrieve a tag"
									},
									"parameters": [
										{
											"id": 1840,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1808,
												"name": "GetTagRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "TagResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1835,
							"name": "getTagRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/TagsApi.ts",
									"line": 141,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 1836,
									"name": "getTagRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetch a tag by id.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nRetrieve a tag"
									},
									"parameters": [
										{
											"id": 1837,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1808,
												"name": "GetTagRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "TagResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1844,
							"name": "listTags",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/TagsApi.ts",
									"line": 200,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 1845,
									"name": "listTags",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return all of the tags for an organization.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nList all tags"
									},
									"parameters": [
										{
											"id": 1846,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1810,
												"name": "ListTagsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ListTagsResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1841,
							"name": "listTagsRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/TagsApi.ts",
									"line": 173,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 1842,
									"name": "listTagsRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return all of the tags for an organization.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nList all tags"
									},
									"parameters": [
										{
											"id": 1843,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1810,
												"name": "ListTagsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ListTagsResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1850,
							"name": "patchTag",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/TagsApi.ts",
									"line": 239,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 1851,
									"name": "patchTag",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Update an existing tag. **Note** this implementation of patch uses [the JSON merge patch](https://tools.ietf.org/html/rfc7396) proposed standard.    This means that any fields included in the patch request will _overwrite_ fields which exist on the target resource.    For arrays, this means any array included in the request will _replace_ the array that exists at the specified path, it will not _add_ to the existing array.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nUpdate a tag"
									},
									"parameters": [
										{
											"id": 1852,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1813,
												"name": "PatchTagOperationRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "TagResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1847,
							"name": "patchTagRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/TagsApi.ts",
									"line": 209,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 1848,
									"name": "patchTagRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Update an existing tag. **Note** this implementation of patch uses [the JSON merge patch](https://tools.ietf.org/html/rfc7396) proposed standard.    This means that any fields included in the patch request will _overwrite_ fields which exist on the target resource.    For arrays, this means any array included in the request will _replace_ the array that exists at the specified path, it will not _add_ to the existing array.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nUpdate a tag"
									},
									"parameters": [
										{
											"id": 1849,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1813,
												"name": "PatchTagOperationRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "TagResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1856,
							"name": "replaceTag",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/TagsApi.ts",
									"line": 278,
									"character": 20
								}
							],
							"signatures": [
								{
									"id": 1857,
									"name": "replaceTag",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Update a tag with a new name and new members. This API call would replace all old members of a tag with new members specified in the request body.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nUpdate a tag"
									},
									"parameters": [
										{
											"id": 1858,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1816,
												"name": "ReplaceTagOperationRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "TagResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1853,
							"name": "replaceTagRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/TagsApi.ts",
									"line": 248,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 1854,
									"name": "replaceTagRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Update a tag with a new name and new members. This API call would replace all old members of a tag with new members specified in the request body.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nUpdate a tag"
									},
									"parameters": [
										{
											"id": 1855,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1816,
												"name": "ReplaceTagOperationRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "TagResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1878,
							"name": "request",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 47,
									"character": 27
								}
							],
							"signatures": [
								{
									"id": 1879,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1880,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "RequestOpts"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.request"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.request"
							}
						},
						{
							"id": 1860,
							"name": "withMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 31,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 1861,
									"name": "withMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1862,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 1863,
											"name": "middlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Middleware"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withMiddleware"
							}
						},
						{
							"id": 1871,
							"name": "withPostMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 42,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 1872,
									"name": "withPostMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1873,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 1874,
											"name": "postMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 1875,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 1876,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 1877,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "ResponseContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "Response"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPostMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPostMiddleware"
							}
						},
						{
							"id": 1864,
							"name": "withPreMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 37,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 1865,
									"name": "withPreMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1866,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 1867,
											"name": "preMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 1868,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 1869,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 1870,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "RequestContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "FetchParams"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPreMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPreMiddleware"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1820
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1859
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1826,
								1823,
								1832,
								1829,
								1838,
								1835,
								1844,
								1841,
								1850,
								1847,
								1856,
								1853,
								1878,
								1860,
								1871,
								1864
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/TagsApi.ts",
							"line": 68,
							"character": 20
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BaseAPI"
						}
					]
				},
				{
					"id": 1804,
					"name": "CreateTagOperationRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1805,
							"name": "tag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/TagsApi.ts",
									"line": 39,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "CreateTagRequest"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1805
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/TagsApi.ts",
							"line": 38,
							"character": 42
						}
					]
				},
				{
					"id": 1806,
					"name": "DeleteTagRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1807,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/TagsApi.ts",
									"line": 43,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1807
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/TagsApi.ts",
							"line": 42,
							"character": 33
						}
					]
				},
				{
					"id": 1808,
					"name": "GetTagRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1809,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/TagsApi.ts",
									"line": 47,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1809
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/TagsApi.ts",
							"line": 46,
							"character": 30
						}
					]
				},
				{
					"id": 1810,
					"name": "ListTagsRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1812,
							"name": "after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/TagsApi.ts",
									"line": 52,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1811,
							"name": "limit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/TagsApi.ts",
									"line": 51,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1812,
								1811
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/TagsApi.ts",
							"line": 50,
							"character": 32
						}
					]
				},
				{
					"id": 1813,
					"name": "PatchTagOperationRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1814,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/TagsApi.ts",
									"line": 56,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1815,
							"name": "tag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/TagsApi.ts",
									"line": 57,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "PatchTagRequest"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1814,
								1815
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/TagsApi.ts",
							"line": 55,
							"character": 41
						}
					]
				},
				{
					"id": 1816,
					"name": "ReplaceTagOperationRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1817,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/TagsApi.ts",
									"line": 61,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1818,
							"name": "tag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/TagsApi.ts",
									"line": 62,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "ReplaceTagRequest"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1817,
								1818
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/TagsApi.ts",
							"line": 60,
							"character": 43
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1819
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1804,
						1806,
						1808,
						1810,
						1813,
						1816
					]
				}
			],
			"sources": [
				{
					"fileName": "apis/TagsApi.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1881,
			"name": "TrailerAssignmentsApi",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 1892,
					"name": "TrailerAssignmentsApi",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {},
					"children": [
						{
							"id": 1893,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1894,
									"name": "new TrailerAssignmentsApi",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1895,
											"name": "configuration",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Configuration"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"id": 1892,
										"name": "TrailerAssignmentsApi"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.constructor"
							}
						},
						{
							"id": 1908,
							"name": "configuration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true
							},
							"type": {
								"type": "reference",
								"name": "Configuration"
							},
							"defaultValue": "...",
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.configuration"
							}
						},
						{
							"id": 1927,
							"name": "request",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 47,
									"character": 27
								}
							],
							"signatures": [
								{
									"id": 1928,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1929,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "RequestOpts"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.request"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.request"
							}
						},
						{
							"id": 1899,
							"name": "v1getAllTrailerAssignments",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/TrailerAssignmentsApi.ts",
									"line": 88,
									"character": 36
								}
							],
							"signatures": [
								{
									"id": 1900,
									"name": "v1getAllTrailerAssignments",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Fetch trailer assignment data for all trailers in your organization.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nList trailer assignments for all trailers"
									},
									"parameters": [
										{
											"id": 1901,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1882,
												"name": "V1getAllTrailerAssignmentsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "InlineResponse2007"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1896,
							"name": "v1getAllTrailerAssignmentsRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/TrailerAssignmentsApi.ts",
									"line": 49,
									"character": 39
								}
							],
							"signatures": [
								{
									"id": 1897,
									"name": "v1getAllTrailerAssignmentsRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Fetch trailer assignment data for all trailers in your organization.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nList trailer assignments for all trailers"
									},
									"parameters": [
										{
											"id": 1898,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1882,
												"name": "V1getAllTrailerAssignmentsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "InlineResponse2007"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1905,
							"name": "v1getFleetTrailerAssignments",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/TrailerAssignmentsApi.ts",
									"line": 128,
									"character": 38
								}
							],
							"signatures": [
								{
									"id": 1906,
									"name": "v1getFleetTrailerAssignments",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Fetch trailer assignment data for a single trailer.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nList trailer assignments for a given trailer"
									},
									"parameters": [
										{
											"id": 1907,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1888,
												"name": "V1getFleetTrailerAssignmentsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "V1TrailerAssignmentsResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1902,
							"name": "v1getFleetTrailerAssignmentsRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/TrailerAssignmentsApi.ts",
									"line": 97,
									"character": 41
								}
							],
							"signatures": [
								{
									"id": 1903,
									"name": "v1getFleetTrailerAssignmentsRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Fetch trailer assignment data for a single trailer.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nList trailer assignments for a given trailer"
									},
									"parameters": [
										{
											"id": 1904,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1888,
												"name": "V1getFleetTrailerAssignmentsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "V1TrailerAssignmentsResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1909,
							"name": "withMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 31,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 1910,
									"name": "withMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1911,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 1912,
											"name": "middlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Middleware"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withMiddleware"
							}
						},
						{
							"id": 1920,
							"name": "withPostMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 42,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 1921,
									"name": "withPostMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1922,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 1923,
											"name": "postMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 1924,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 1925,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 1926,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "ResponseContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "Response"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPostMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPostMiddleware"
							}
						},
						{
							"id": 1913,
							"name": "withPreMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 37,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 1914,
									"name": "withPreMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1915,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 1916,
											"name": "preMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 1917,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 1918,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 1919,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "RequestContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "FetchParams"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPreMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPreMiddleware"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1893
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1908
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1927,
								1899,
								1896,
								1905,
								1902,
								1909,
								1920,
								1913
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/TrailerAssignmentsApi.ts",
							"line": 43,
							"character": 34
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BaseAPI"
						}
					]
				},
				{
					"id": 1882,
					"name": "V1getAllTrailerAssignmentsRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1884,
							"name": "endMs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/TrailerAssignmentsApi.ts",
									"line": 28,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1887,
							"name": "endingBefore",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/TrailerAssignmentsApi.ts",
									"line": 31,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1885,
							"name": "limit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/TrailerAssignmentsApi.ts",
									"line": 29,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1883,
							"name": "startMs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/TrailerAssignmentsApi.ts",
									"line": 27,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1886,
							"name": "startingAfter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/TrailerAssignmentsApi.ts",
									"line": 30,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1884,
								1887,
								1885,
								1883,
								1886
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/TrailerAssignmentsApi.ts",
							"line": 26,
							"character": 50
						}
					]
				},
				{
					"id": 1888,
					"name": "V1getFleetTrailerAssignmentsRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1891,
							"name": "endMs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/TrailerAssignmentsApi.ts",
									"line": 37,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1890,
							"name": "startMs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/TrailerAssignmentsApi.ts",
									"line": 36,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1889,
							"name": "trailerId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/TrailerAssignmentsApi.ts",
									"line": 35,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1891,
								1890,
								1889
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/TrailerAssignmentsApi.ts",
							"line": 34,
							"character": 52
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1892
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1882,
						1888
					]
				}
			],
			"sources": [
				{
					"fileName": "apis/TrailerAssignmentsApi.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1930,
			"name": "TripsApi",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 1935,
					"name": "TripsApi",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {},
					"children": [
						{
							"id": 1936,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1937,
									"name": "new TripsApi",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1938,
											"name": "configuration",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Configuration"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"id": 1935,
										"name": "TripsApi"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.constructor"
							}
						},
						{
							"id": 1945,
							"name": "configuration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true
							},
							"type": {
								"type": "reference",
								"name": "Configuration"
							},
							"defaultValue": "...",
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.configuration"
							}
						},
						{
							"id": 1964,
							"name": "request",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 47,
									"character": 27
								}
							],
							"signatures": [
								{
									"id": 1965,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1966,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "RequestOpts"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.request"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.request"
							}
						},
						{
							"id": 1942,
							"name": "v1getFleetTrips",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/TripsApi.ts",
									"line": 81,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1943,
									"name": "v1getFleetTrips",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Get historical trips data for specified vehicle. This method returns a set of historical trips data for the specified vehicle in the specified time range.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet vehicle trips"
									},
									"parameters": [
										{
											"id": 1944,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1931,
												"name": "V1getFleetTripsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "V1TripResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1939,
							"name": "v1getFleetTripsRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/TripsApi.ts",
									"line": 38,
									"character": 28
								}
							],
							"signatures": [
								{
									"id": 1940,
									"name": "v1getFleetTripsRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "<n class=\\\"warning\\\"> <nh> <i class=\\\"fa fa-exclamation-circle\\\"></i> This endpoint is still on our legacy API. </nh> </n>  Get historical trips data for specified vehicle. This method returns a set of historical trips data for the specified vehicle in the specified time range.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet vehicle trips"
									},
									"parameters": [
										{
											"id": 1941,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1931,
												"name": "V1getFleetTripsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "V1TripResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1946,
							"name": "withMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 31,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 1947,
									"name": "withMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1948,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 1949,
											"name": "middlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Middleware"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withMiddleware"
							}
						},
						{
							"id": 1957,
							"name": "withPostMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 42,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 1958,
									"name": "withPostMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1959,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 1960,
											"name": "postMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 1961,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 1962,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 1963,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "ResponseContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "Response"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPostMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPostMiddleware"
							}
						},
						{
							"id": 1950,
							"name": "withPreMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 37,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 1951,
									"name": "withPreMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1952,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 1953,
											"name": "preMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 1954,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 1955,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 1956,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "RequestContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "FetchParams"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPreMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPreMiddleware"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1936
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1945
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1964,
								1942,
								1939,
								1946,
								1957,
								1950
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/TripsApi.ts",
							"line": 32,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BaseAPI"
						}
					]
				},
				{
					"id": 1931,
					"name": "V1getFleetTripsRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1934,
							"name": "endMs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/TripsApi.ts",
									"line": 26,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1933,
							"name": "startMs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/TripsApi.ts",
									"line": 25,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1932,
							"name": "vehicleId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/TripsApi.ts",
									"line": 24,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1934,
								1933,
								1932
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/TripsApi.ts",
							"line": 23,
							"character": 39
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1935
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1931
					]
				}
			],
			"sources": [
				{
					"fileName": "apis/TripsApi.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1967,
			"name": "UsersApi",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 1983,
					"name": "UsersApi",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {},
					"children": [
						{
							"id": 1984,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1985,
									"name": "new UsersApi",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1986,
											"name": "configuration",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Configuration"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"id": 1983,
										"name": "UsersApi"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.constructor"
							}
						},
						{
							"id": 2023,
							"name": "configuration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true
							},
							"type": {
								"type": "reference",
								"name": "Configuration"
							},
							"defaultValue": "...",
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.configuration"
							}
						},
						{
							"id": 1990,
							"name": "createUser",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/UsersApi.ts",
									"line": 100,
									"character": 20
								}
							],
							"signatures": [
								{
									"id": 1991,
									"name": "createUser",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add a user to the organization.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nCreate a user"
									},
									"parameters": [
										{
											"id": 1992,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1968,
												"name": "CreateUserOperationRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "UserResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1987,
							"name": "createUserRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/UsersApi.ts",
									"line": 74,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 1988,
									"name": "createUserRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add a user to the organization.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nCreate a user"
									},
									"parameters": [
										{
											"id": 1989,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1968,
												"name": "CreateUserOperationRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "UserResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1996,
							"name": "deleteUser",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/UsersApi.ts",
									"line": 132,
									"character": 20
								}
							],
							"signatures": [
								{
									"id": 1997,
									"name": "deleteUser",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Delete the given user.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nDelete a user"
									},
									"parameters": [
										{
											"id": 1998,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1970,
												"name": "DeleteUserRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1993,
							"name": "deleteUserRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/UsersApi.ts",
									"line": 109,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 1994,
									"name": "deleteUserRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Delete the given user.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nDelete a user"
									},
									"parameters": [
										{
											"id": 1995,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1970,
												"name": "DeleteUserRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2002,
							"name": "getUser",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/UsersApi.ts",
									"line": 164,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 2003,
									"name": "getUser",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get a specific user\\'s information.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nRetrieve a user"
									},
									"parameters": [
										{
											"id": 2004,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1972,
												"name": "GetUserRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "UserResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1999,
							"name": "getUserRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/UsersApi.ts",
									"line": 141,
									"character": 20
								}
							],
							"signatures": [
								{
									"id": 2000,
									"name": "getUserRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get a specific user\\'s information.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nRetrieve a user"
									},
									"parameters": [
										{
											"id": 2001,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1972,
												"name": "GetUserRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "UserResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2008,
							"name": "listUserRoles",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/UsersApi.ts",
									"line": 200,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 2009,
									"name": "listUserRoles",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a list of all user roles in an organization.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nList all user roles"
									},
									"parameters": [
										{
											"id": 2010,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1974,
												"name": "ListUserRolesRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ListUserRolesResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2005,
							"name": "listUserRolesRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/UsersApi.ts",
									"line": 173,
									"character": 26
								}
							],
							"signatures": [
								{
									"id": 2006,
									"name": "listUserRolesRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a list of all user roles in an organization.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nList all user roles"
									},
									"parameters": [
										{
											"id": 2007,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1974,
												"name": "ListUserRolesRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ListUserRolesResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2014,
							"name": "listUsers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/UsersApi.ts",
									"line": 236,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 2015,
									"name": "listUsers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a list of all users in an organization.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nList all users"
									},
									"parameters": [
										{
											"id": 2016,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1977,
												"name": "ListUsersRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ListUsersResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2011,
							"name": "listUsersRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/UsersApi.ts",
									"line": 209,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 2012,
									"name": "listUsersRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a list of all users in an organization.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nList all users"
									},
									"parameters": [
										{
											"id": 2013,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1977,
												"name": "ListUsersRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ListUsersResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2042,
							"name": "request",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 47,
									"character": 27
								}
							],
							"signatures": [
								{
									"id": 2043,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2044,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "RequestOpts"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.request"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.request"
							}
						},
						{
							"id": 2020,
							"name": "updateUser",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/UsersApi.ts",
									"line": 275,
									"character": 20
								}
							],
							"signatures": [
								{
									"id": 2021,
									"name": "updateUser",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Update a specific user\\'s information.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nUpdate a user"
									},
									"parameters": [
										{
											"id": 2022,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1980,
												"name": "UpdateUserOperationRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "UserResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2017,
							"name": "updateUserRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/UsersApi.ts",
									"line": 245,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 2018,
									"name": "updateUserRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Update a specific user\\'s information.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nUpdate a user"
									},
									"parameters": [
										{
											"id": 2019,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1980,
												"name": "UpdateUserOperationRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "UserResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2024,
							"name": "withMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 31,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 2025,
									"name": "withMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2026,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 2027,
											"name": "middlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Middleware"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withMiddleware"
							}
						},
						{
							"id": 2035,
							"name": "withPostMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 42,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 2036,
									"name": "withPostMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2037,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 2038,
											"name": "postMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 2039,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 2040,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 2041,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "ResponseContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "Response"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPostMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPostMiddleware"
							}
						},
						{
							"id": 2028,
							"name": "withPreMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 37,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 2029,
									"name": "withPreMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2030,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 2031,
											"name": "preMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 2032,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 2033,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 2034,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "RequestContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "FetchParams"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPreMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPreMiddleware"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1984
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2023
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1990,
								1987,
								1996,
								1993,
								2002,
								1999,
								2008,
								2005,
								2014,
								2011,
								2042,
								2020,
								2017,
								2024,
								2035,
								2028
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/UsersApi.ts",
							"line": 68,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BaseAPI"
						}
					]
				},
				{
					"id": 1968,
					"name": "CreateUserOperationRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1969,
							"name": "user",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/UsersApi.ts",
									"line": 39,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "CreateUserRequest"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1969
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/UsersApi.ts",
							"line": 38,
							"character": 43
						}
					]
				},
				{
					"id": 1970,
					"name": "DeleteUserRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1971,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/UsersApi.ts",
									"line": 43,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1971
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/UsersApi.ts",
							"line": 42,
							"character": 34
						}
					]
				},
				{
					"id": 1972,
					"name": "GetUserRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1973,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/UsersApi.ts",
									"line": 47,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1973
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/UsersApi.ts",
							"line": 46,
							"character": 31
						}
					]
				},
				{
					"id": 1974,
					"name": "ListUserRolesRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1976,
							"name": "after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/UsersApi.ts",
									"line": 52,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1975,
							"name": "limit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/UsersApi.ts",
									"line": 51,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1976,
								1975
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/UsersApi.ts",
							"line": 50,
							"character": 37
						}
					]
				},
				{
					"id": 1977,
					"name": "ListUsersRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1979,
							"name": "after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/UsersApi.ts",
									"line": 57,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1978,
							"name": "limit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/UsersApi.ts",
									"line": 56,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1979,
								1978
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/UsersApi.ts",
							"line": 55,
							"character": 33
						}
					]
				},
				{
					"id": 1980,
					"name": "UpdateUserOperationRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1981,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/UsersApi.ts",
									"line": 61,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1982,
							"name": "user",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/UsersApi.ts",
									"line": 62,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "UpdateUserRequest"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1981,
								1982
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/UsersApi.ts",
							"line": 60,
							"character": 43
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1983
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1968,
						1970,
						1972,
						1974,
						1977,
						1980
					]
				}
			],
			"sources": [
				{
					"fileName": "apis/UsersApi.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2045,
			"name": "VehicleDriverAssignmentsApi",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2053,
					"name": "VehicleDriverAssignmentsApi",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {},
					"children": [
						{
							"id": 2054,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2055,
									"name": "new VehicleDriverAssignmentsApi",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2056,
											"name": "configuration",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Configuration"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"id": 2053,
										"name": "VehicleDriverAssignmentsApi"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.constructor"
							}
						},
						{
							"id": 2063,
							"name": "configuration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true
							},
							"type": {
								"type": "reference",
								"name": "Configuration"
							},
							"defaultValue": "...",
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.configuration"
							}
						},
						{
							"id": 2060,
							"name": "getVehiclesDriverAssignments",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleDriverAssignmentsApi.ts",
									"line": 114,
									"character": 38
								}
							],
							"signatures": [
								{
									"id": 2061,
									"name": "getVehiclesDriverAssignments",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get all driver assignments for the requested vehicles in the requested time range. The only type of assignment supported right now are assignments created through the driver app.     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet all drivers assigned to a set of vehicles"
									},
									"parameters": [
										{
											"id": 2062,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2046,
												"name": "GetVehiclesDriverAssignmentsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "VehiclesDriverAssignmentsGetVehiclesDriverAssignmentsResponseBody"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2057,
							"name": "getVehiclesDriverAssignmentsRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleDriverAssignmentsApi.ts",
									"line": 71,
									"character": 41
								}
							],
							"signatures": [
								{
									"id": 2058,
									"name": "getVehiclesDriverAssignmentsRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get all driver assignments for the requested vehicles in the requested time range. The only type of assignment supported right now are assignments created through the driver app.     **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nGet all drivers assigned to a set of vehicles"
									},
									"parameters": [
										{
											"id": 2059,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2046,
												"name": "GetVehiclesDriverAssignmentsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "VehiclesDriverAssignmentsGetVehiclesDriverAssignmentsResponseBody"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2082,
							"name": "request",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 47,
									"character": 27
								}
							],
							"signatures": [
								{
									"id": 2083,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2084,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "RequestOpts"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.request"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.request"
							}
						},
						{
							"id": 2064,
							"name": "withMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 31,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 2065,
									"name": "withMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2066,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 2067,
											"name": "middlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Middleware"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withMiddleware"
							}
						},
						{
							"id": 2075,
							"name": "withPostMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 42,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 2076,
									"name": "withPostMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2077,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 2078,
											"name": "postMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 2079,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 2080,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 2081,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "ResponseContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "Response"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPostMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPostMiddleware"
							}
						},
						{
							"id": 2068,
							"name": "withPreMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 37,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 2069,
									"name": "withPreMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2070,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 2071,
											"name": "preMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 2072,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 2073,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 2074,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "RequestContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "FetchParams"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPreMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPreMiddleware"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2054
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2063
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2060,
								2057,
								2082,
								2064,
								2075,
								2068
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/VehicleDriverAssignmentsApi.ts",
							"line": 65,
							"character": 40
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BaseAPI"
						}
					]
				},
				{
					"id": 2046,
					"name": "GetVehiclesDriverAssignmentsRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2052,
							"name": "after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/VehicleDriverAssignmentsApi.ts",
									"line": 59,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2048,
							"name": "endTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/VehicleDriverAssignmentsApi.ts",
									"line": 55,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2051,
							"name": "parentTagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/VehicleDriverAssignmentsApi.ts",
									"line": 58,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2047,
							"name": "startTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/VehicleDriverAssignmentsApi.ts",
									"line": 54,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2050,
							"name": "tagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/VehicleDriverAssignmentsApi.ts",
									"line": 57,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2049,
							"name": "vehicleIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/VehicleDriverAssignmentsApi.ts",
									"line": 56,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2052,
								2048,
								2051,
								2047,
								2050,
								2049
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/VehicleDriverAssignmentsApi.ts",
							"line": 53,
							"character": 52
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2053
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2046
					]
				}
			],
			"sources": [
				{
					"fileName": "apis/VehicleDriverAssignmentsApi.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2085,
			"name": "VehicleLocationsApi",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2104,
					"name": "VehicleLocationsApi",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {},
					"children": [
						{
							"id": 2105,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2106,
									"name": "new VehicleLocationsApi",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2107,
											"name": "configuration",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Configuration"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"id": 2104,
										"name": "VehicleLocationsApi"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.constructor"
							}
						},
						{
							"id": 2126,
							"name": "configuration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true
							},
							"type": {
								"type": "reference",
								"name": "Configuration"
							},
							"defaultValue": "...",
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.configuration"
							}
						},
						{
							"id": 2111,
							"name": "getVehicleLocations",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleLocationsApi.ts",
									"line": 101,
									"character": 29
								}
							],
							"signatures": [
								{
									"id": 2112,
									"name": "getVehicleLocations",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "***NOTE: The Vehicle Locations API is an older API that does not combine GPS data with onboard diagnostics. Try our new [Vehicle Stats API](ref:getvehiclestats) instead.***  Returns the last known location of all vehicles at the given `time`. If no `time` is specified, the current time is used. This can be optionally filtered by tags or specific vehicle IDs.  Related guide: <a href=\\\"/docs/vehicle-locations-1\\\" target=\\\"_blank\\\">Vehicle Locations</a>.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nLocations snapshot"
									},
									"parameters": [
										{
											"id": 2113,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2086,
												"name": "GetVehicleLocationsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "VehicleLocationsResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2117,
							"name": "getVehicleLocationsFeed",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleLocationsApi.ts",
									"line": 145,
									"character": 33
								}
							],
							"signatures": [
								{
									"id": 2118,
									"name": "getVehicleLocationsFeed",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "***NOTE: The Vehicle Locations API is an older API that does not combine GPS data with onboard diagnostics. Try our new [Vehicle Stats API](ref:getvehiclestatsfeed) instead.***  Follow a continuous feed of all vehicle locations from Samsara Vehicle Gateways.  Your first call to this endpoint will provide you with the most recent location for each vehicle and a `pagination` object that contains an `endCursor`.  You can provide the `endCursor` to the `after` parameter of this endpoint to get location updates since that `endCursor`.   If `hasNextPage` is `false`, no updates are readily available yet. We\\'d suggest waiting a minimum of 5 seconds before requesting updates.  Related guide: <a href=\\\"/docs/vehicle-locations-1\\\" target=\\\"_blank\\\">Vehicle Locations</a>.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nLocations feed"
									},
									"parameters": [
										{
											"id": 2119,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2092,
												"name": "GetVehicleLocationsFeedRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "VehicleLocationsListResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2114,
							"name": "getVehicleLocationsFeedRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleLocationsApi.ts",
									"line": 110,
									"character": 36
								}
							],
							"signatures": [
								{
									"id": 2115,
									"name": "getVehicleLocationsFeedRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "***NOTE: The Vehicle Locations API is an older API that does not combine GPS data with onboard diagnostics. Try our new [Vehicle Stats API](ref:getvehiclestatsfeed) instead.***  Follow a continuous feed of all vehicle locations from Samsara Vehicle Gateways.  Your first call to this endpoint will provide you with the most recent location for each vehicle and a `pagination` object that contains an `endCursor`.  You can provide the `endCursor` to the `after` parameter of this endpoint to get location updates since that `endCursor`.   If `hasNextPage` is `false`, no updates are readily available yet. We\\'d suggest waiting a minimum of 5 seconds before requesting updates.  Related guide: <a href=\\\"/docs/vehicle-locations-1\\\" target=\\\"_blank\\\">Vehicle Locations</a>.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nLocations feed"
									},
									"parameters": [
										{
											"id": 2116,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2092,
												"name": "GetVehicleLocationsFeedRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "VehicleLocationsListResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2123,
							"name": "getVehicleLocationsHistory",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleLocationsApi.ts",
									"line": 205,
									"character": 36
								}
							],
							"signatures": [
								{
									"id": 2124,
									"name": "getVehicleLocationsHistory",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "***NOTE: The Vehicle Locations API is an older API that does not combine GPS data with onboard diagnostics. Try our new [Vehicle Stats API](ref:getvehiclestatshistory) instead.***  Returns all known vehicle locations during the given time range. This can be optionally filtered by tags or specific vehicle IDs.  Related guide: <a href=\\\"/docs/vehicle-locations-1\\\" target=\\\"_blank\\\">Vehicle Locations</a>.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nHistorical locations"
									},
									"parameters": [
										{
											"id": 2125,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2097,
												"name": "GetVehicleLocationsHistoryRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "VehicleLocationsListResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2120,
							"name": "getVehicleLocationsHistoryRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleLocationsApi.ts",
									"line": 154,
									"character": 39
								}
							],
							"signatures": [
								{
									"id": 2121,
									"name": "getVehicleLocationsHistoryRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "***NOTE: The Vehicle Locations API is an older API that does not combine GPS data with onboard diagnostics. Try our new [Vehicle Stats API](ref:getvehiclestatshistory) instead.***  Returns all known vehicle locations during the given time range. This can be optionally filtered by tags or specific vehicle IDs.  Related guide: <a href=\\\"/docs/vehicle-locations-1\\\" target=\\\"_blank\\\">Vehicle Locations</a>.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nHistorical locations"
									},
									"parameters": [
										{
											"id": 2122,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2097,
												"name": "GetVehicleLocationsHistoryRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "VehicleLocationsListResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2108,
							"name": "getVehicleLocationsRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleLocationsApi.ts",
									"line": 62,
									"character": 32
								}
							],
							"signatures": [
								{
									"id": 2109,
									"name": "getVehicleLocationsRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "***NOTE: The Vehicle Locations API is an older API that does not combine GPS data with onboard diagnostics. Try our new [Vehicle Stats API](ref:getvehiclestats) instead.***  Returns the last known location of all vehicles at the given `time`. If no `time` is specified, the current time is used. This can be optionally filtered by tags or specific vehicle IDs.  Related guide: <a href=\\\"/docs/vehicle-locations-1\\\" target=\\\"_blank\\\">Vehicle Locations</a>.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nLocations snapshot"
									},
									"parameters": [
										{
											"id": 2110,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2086,
												"name": "GetVehicleLocationsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "VehicleLocationsResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2145,
							"name": "request",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 47,
									"character": 27
								}
							],
							"signatures": [
								{
									"id": 2146,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2147,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "RequestOpts"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.request"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.request"
							}
						},
						{
							"id": 2127,
							"name": "withMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 31,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 2128,
									"name": "withMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2129,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 2130,
											"name": "middlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Middleware"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withMiddleware"
							}
						},
						{
							"id": 2138,
							"name": "withPostMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 42,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 2139,
									"name": "withPostMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2140,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 2141,
											"name": "postMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 2142,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 2143,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 2144,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "ResponseContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "Response"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPostMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPostMiddleware"
							}
						},
						{
							"id": 2131,
							"name": "withPreMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 37,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 2132,
									"name": "withPreMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2133,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 2134,
											"name": "preMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 2135,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 2136,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 2137,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "RequestContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "FetchParams"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPreMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPreMiddleware"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2105
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2126
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2111,
								2117,
								2114,
								2123,
								2120,
								2108,
								2145,
								2127,
								2138,
								2131
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/VehicleLocationsApi.ts",
							"line": 56,
							"character": 32
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BaseAPI"
						}
					]
				},
				{
					"id": 2092,
					"name": "GetVehicleLocationsFeedRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2093,
							"name": "after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/VehicleLocationsApi.ts",
									"line": 38,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2094,
							"name": "parentTagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/VehicleLocationsApi.ts",
									"line": 39,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 2095,
							"name": "tagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/VehicleLocationsApi.ts",
									"line": 40,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 2096,
							"name": "vehicleIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/VehicleLocationsApi.ts",
									"line": 41,
									"character": 14
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2093,
								2094,
								2095,
								2096
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/VehicleLocationsApi.ts",
							"line": 37,
							"character": 47
						}
					]
				},
				{
					"id": 2097,
					"name": "GetVehicleLocationsHistoryRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2100,
							"name": "after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/VehicleLocationsApi.ts",
									"line": 47,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2099,
							"name": "endTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleLocationsApi.ts",
									"line": 46,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2101,
							"name": "parentTagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/VehicleLocationsApi.ts",
									"line": 48,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 2098,
							"name": "startTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleLocationsApi.ts",
									"line": 45,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2102,
							"name": "tagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/VehicleLocationsApi.ts",
									"line": 49,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 2103,
							"name": "vehicleIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/VehicleLocationsApi.ts",
									"line": 50,
									"character": 14
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2100,
								2099,
								2101,
								2098,
								2102,
								2103
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/VehicleLocationsApi.ts",
							"line": 44,
							"character": 50
						}
					]
				},
				{
					"id": 2086,
					"name": "GetVehicleLocationsRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2087,
							"name": "after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/VehicleLocationsApi.ts",
									"line": 30,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2089,
							"name": "parentTagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/VehicleLocationsApi.ts",
									"line": 32,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 2090,
							"name": "tagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/VehicleLocationsApi.ts",
									"line": 33,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 2088,
							"name": "time",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/VehicleLocationsApi.ts",
									"line": 31,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2091,
							"name": "vehicleIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/VehicleLocationsApi.ts",
									"line": 34,
									"character": 14
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2087,
								2089,
								2090,
								2088,
								2091
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/VehicleLocationsApi.ts",
							"line": 29,
							"character": 43
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2104
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2092,
						2097,
						2086
					]
				}
			],
			"sources": [
				{
					"fileName": "apis/VehicleLocationsApi.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2148,
			"name": "VehicleStatsApi",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2280,
					"name": "GetVehicleStatsFeedDecorationsEnum",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "export",
								"text": ""
							}
						]
					},
					"children": [
						{
							"id": 2281,
							"name": "AmbientAirTemperatureMilliC",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 328,
									"character": 31
								}
							],
							"defaultValue": "\"ambientAirTemperatureMilliC\""
						},
						{
							"id": 2282,
							"name": "AuxInput1",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 329,
									"character": 13
								}
							],
							"defaultValue": "\"auxInput1\""
						},
						{
							"id": 2291,
							"name": "AuxInput10",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 338,
									"character": 14
								}
							],
							"defaultValue": "\"auxInput10\""
						},
						{
							"id": 2283,
							"name": "AuxInput2",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 330,
									"character": 13
								}
							],
							"defaultValue": "\"auxInput2\""
						},
						{
							"id": 2284,
							"name": "AuxInput3",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 331,
									"character": 13
								}
							],
							"defaultValue": "\"auxInput3\""
						},
						{
							"id": 2285,
							"name": "AuxInput4",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 332,
									"character": 13
								}
							],
							"defaultValue": "\"auxInput4\""
						},
						{
							"id": 2286,
							"name": "AuxInput5",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 333,
									"character": 13
								}
							],
							"defaultValue": "\"auxInput5\""
						},
						{
							"id": 2287,
							"name": "AuxInput6",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 334,
									"character": 13
								}
							],
							"defaultValue": "\"auxInput6\""
						},
						{
							"id": 2288,
							"name": "AuxInput7",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 335,
									"character": 13
								}
							],
							"defaultValue": "\"auxInput7\""
						},
						{
							"id": 2289,
							"name": "AuxInput8",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 336,
									"character": 13
								}
							],
							"defaultValue": "\"auxInput8\""
						},
						{
							"id": 2290,
							"name": "AuxInput9",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 337,
									"character": 13
								}
							],
							"defaultValue": "\"auxInput9\""
						},
						{
							"id": 2293,
							"name": "BarometricPressurePa",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 340,
									"character": 24
								}
							],
							"defaultValue": "\"barometricPressurePa\""
						},
						{
							"id": 2292,
							"name": "BatteryMilliVolts",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 339,
									"character": 21
								}
							],
							"defaultValue": "\"batteryMilliVolts\""
						},
						{
							"id": 2294,
							"name": "DefLevelMilliPercent",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 341,
									"character": 24
								}
							],
							"defaultValue": "\"defLevelMilliPercent\""
						},
						{
							"id": 2295,
							"name": "EcuSpeedMph",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 342,
									"character": 15
								}
							],
							"defaultValue": "\"ecuSpeedMph\""
						},
						{
							"id": 2296,
							"name": "EngineCoolantTemperatureMilliC",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 343,
									"character": 34
								}
							],
							"defaultValue": "\"engineCoolantTemperatureMilliC\""
						},
						{
							"id": 2297,
							"name": "EngineImmobilizer",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 344,
									"character": 21
								}
							],
							"defaultValue": "\"engineImmobilizer\""
						},
						{
							"id": 2298,
							"name": "EngineLoadPercent",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 345,
									"character": 21
								}
							],
							"defaultValue": "\"engineLoadPercent\""
						},
						{
							"id": 2299,
							"name": "EngineOilPressureKpa",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 346,
									"character": 24
								}
							],
							"defaultValue": "\"engineOilPressureKPa\""
						},
						{
							"id": 2300,
							"name": "EngineRpm",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 347,
									"character": 13
								}
							],
							"defaultValue": "\"engineRpm\""
						},
						{
							"id": 2301,
							"name": "EngineStates",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 348,
									"character": 16
								}
							],
							"defaultValue": "\"engineStates\""
						},
						{
							"id": 2302,
							"name": "FaultCodes",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 349,
									"character": 14
								}
							],
							"defaultValue": "\"faultCodes\""
						},
						{
							"id": 2303,
							"name": "FuelPercents",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 350,
									"character": 16
								}
							],
							"defaultValue": "\"fuelPercents\""
						},
						{
							"id": 2304,
							"name": "Gps",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 351,
									"character": 7
								}
							],
							"defaultValue": "\"gps\""
						},
						{
							"id": 2305,
							"name": "GpsDistanceMeters",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 352,
									"character": 21
								}
							],
							"defaultValue": "\"gpsDistanceMeters\""
						},
						{
							"id": 2306,
							"name": "IntakeManifoldTemperatureMilliC",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 353,
									"character": 35
								}
							],
							"defaultValue": "\"intakeManifoldTemperatureMilliC\""
						},
						{
							"id": 2307,
							"name": "NfcCardScans",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 354,
									"character": 16
								}
							],
							"defaultValue": "\"nfcCardScans\""
						},
						{
							"id": 2308,
							"name": "ObdEngineSeconds",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 355,
									"character": 20
								}
							],
							"defaultValue": "\"obdEngineSeconds\""
						},
						{
							"id": 2309,
							"name": "ObdOdometerMeters",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 356,
									"character": 21
								}
							],
							"defaultValue": "\"obdOdometerMeters\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								2281,
								2282,
								2291,
								2283,
								2284,
								2285,
								2286,
								2287,
								2288,
								2289,
								2290,
								2293,
								2292,
								2294,
								2295,
								2296,
								2297,
								2298,
								2299,
								2300,
								2301,
								2302,
								2303,
								2304,
								2305,
								2306,
								2307,
								2308,
								2309
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/VehicleStatsApi.ts",
							"line": 327,
							"character": 46
						}
					]
				},
				{
					"id": 2248,
					"name": "GetVehicleStatsFeedTypesEnum",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "export",
								"text": ""
							}
						]
					},
					"children": [
						{
							"id": 2249,
							"name": "AmbientAirTemperatureMilliC",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 291,
									"character": 31
								}
							],
							"defaultValue": "\"ambientAirTemperatureMilliC\""
						},
						{
							"id": 2250,
							"name": "AuxInput1",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 292,
									"character": 13
								}
							],
							"defaultValue": "\"auxInput1\""
						},
						{
							"id": 2259,
							"name": "AuxInput10",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 301,
									"character": 14
								}
							],
							"defaultValue": "\"auxInput10\""
						},
						{
							"id": 2251,
							"name": "AuxInput2",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 293,
									"character": 13
								}
							],
							"defaultValue": "\"auxInput2\""
						},
						{
							"id": 2252,
							"name": "AuxInput3",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 294,
									"character": 13
								}
							],
							"defaultValue": "\"auxInput3\""
						},
						{
							"id": 2253,
							"name": "AuxInput4",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 295,
									"character": 13
								}
							],
							"defaultValue": "\"auxInput4\""
						},
						{
							"id": 2254,
							"name": "AuxInput5",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 296,
									"character": 13
								}
							],
							"defaultValue": "\"auxInput5\""
						},
						{
							"id": 2255,
							"name": "AuxInput6",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 297,
									"character": 13
								}
							],
							"defaultValue": "\"auxInput6\""
						},
						{
							"id": 2256,
							"name": "AuxInput7",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 298,
									"character": 13
								}
							],
							"defaultValue": "\"auxInput7\""
						},
						{
							"id": 2257,
							"name": "AuxInput8",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 299,
									"character": 13
								}
							],
							"defaultValue": "\"auxInput8\""
						},
						{
							"id": 2258,
							"name": "AuxInput9",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 300,
									"character": 13
								}
							],
							"defaultValue": "\"auxInput9\""
						},
						{
							"id": 2260,
							"name": "BarometricPressurePa",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 302,
									"character": 24
								}
							],
							"defaultValue": "\"barometricPressurePa\""
						},
						{
							"id": 2261,
							"name": "BatteryMilliVolts",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 303,
									"character": 21
								}
							],
							"defaultValue": "\"batteryMilliVolts\""
						},
						{
							"id": 2262,
							"name": "DefLevelMilliPercent",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 304,
									"character": 24
								}
							],
							"defaultValue": "\"defLevelMilliPercent\""
						},
						{
							"id": 2263,
							"name": "EcuSpeedMph",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 305,
									"character": 15
								}
							],
							"defaultValue": "\"ecuSpeedMph\""
						},
						{
							"id": 2264,
							"name": "EngineCoolantTemperatureMilliC",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 306,
									"character": 34
								}
							],
							"defaultValue": "\"engineCoolantTemperatureMilliC\""
						},
						{
							"id": 2265,
							"name": "EngineImmobilizer",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 307,
									"character": 21
								}
							],
							"defaultValue": "\"engineImmobilizer\""
						},
						{
							"id": 2266,
							"name": "EngineLoadPercent",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 308,
									"character": 21
								}
							],
							"defaultValue": "\"engineLoadPercent\""
						},
						{
							"id": 2267,
							"name": "EngineOilPressureKpa",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 309,
									"character": 24
								}
							],
							"defaultValue": "\"engineOilPressureKPa\""
						},
						{
							"id": 2268,
							"name": "EngineRpm",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 310,
									"character": 13
								}
							],
							"defaultValue": "\"engineRpm\""
						},
						{
							"id": 2269,
							"name": "EngineStates",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 311,
									"character": 16
								}
							],
							"defaultValue": "\"engineStates\""
						},
						{
							"id": 2270,
							"name": "FaultCodes",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 312,
									"character": 14
								}
							],
							"defaultValue": "\"faultCodes\""
						},
						{
							"id": 2271,
							"name": "FuelPercents",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 313,
									"character": 16
								}
							],
							"defaultValue": "\"fuelPercents\""
						},
						{
							"id": 2272,
							"name": "Gps",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 314,
									"character": 7
								}
							],
							"defaultValue": "\"gps\""
						},
						{
							"id": 2273,
							"name": "GpsDistanceMeters",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 315,
									"character": 21
								}
							],
							"defaultValue": "\"gpsDistanceMeters\""
						},
						{
							"id": 2274,
							"name": "GpsOdometerMeters",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 316,
									"character": 21
								}
							],
							"defaultValue": "\"gpsOdometerMeters\""
						},
						{
							"id": 2275,
							"name": "IntakeManifoldTemperatureMilliC",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 317,
									"character": 35
								}
							],
							"defaultValue": "\"intakeManifoldTemperatureMilliC\""
						},
						{
							"id": 2276,
							"name": "NfcCardScans",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 318,
									"character": 16
								}
							],
							"defaultValue": "\"nfcCardScans\""
						},
						{
							"id": 2277,
							"name": "ObdEngineSeconds",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 319,
									"character": 20
								}
							],
							"defaultValue": "\"obdEngineSeconds\""
						},
						{
							"id": 2278,
							"name": "ObdOdometerMeters",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 320,
									"character": 21
								}
							],
							"defaultValue": "\"obdOdometerMeters\""
						},
						{
							"id": 2279,
							"name": "SyntheticEngineSeconds",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 321,
									"character": 26
								}
							],
							"defaultValue": "\"syntheticEngineSeconds\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								2249,
								2250,
								2259,
								2251,
								2252,
								2253,
								2254,
								2255,
								2256,
								2257,
								2258,
								2260,
								2261,
								2262,
								2263,
								2264,
								2265,
								2266,
								2267,
								2268,
								2269,
								2270,
								2271,
								2272,
								2273,
								2274,
								2275,
								2276,
								2277,
								2278,
								2279
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/VehicleStatsApi.ts",
							"line": 290,
							"character": 40
						}
					]
				},
				{
					"id": 2342,
					"name": "GetVehicleStatsHistoryDecorationsEnum",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "export",
								"text": ""
							}
						]
					},
					"children": [
						{
							"id": 2343,
							"name": "AmbientAirTemperatureMilliC",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 400,
									"character": 31
								}
							],
							"defaultValue": "\"ambientAirTemperatureMilliC\""
						},
						{
							"id": 2344,
							"name": "AuxInput1",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 401,
									"character": 13
								}
							],
							"defaultValue": "\"auxInput1\""
						},
						{
							"id": 2353,
							"name": "AuxInput10",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 410,
									"character": 14
								}
							],
							"defaultValue": "\"auxInput10\""
						},
						{
							"id": 2345,
							"name": "AuxInput2",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 402,
									"character": 13
								}
							],
							"defaultValue": "\"auxInput2\""
						},
						{
							"id": 2346,
							"name": "AuxInput3",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 403,
									"character": 13
								}
							],
							"defaultValue": "\"auxInput3\""
						},
						{
							"id": 2347,
							"name": "AuxInput4",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 404,
									"character": 13
								}
							],
							"defaultValue": "\"auxInput4\""
						},
						{
							"id": 2348,
							"name": "AuxInput5",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 405,
									"character": 13
								}
							],
							"defaultValue": "\"auxInput5\""
						},
						{
							"id": 2349,
							"name": "AuxInput6",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 406,
									"character": 13
								}
							],
							"defaultValue": "\"auxInput6\""
						},
						{
							"id": 2350,
							"name": "AuxInput7",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 407,
									"character": 13
								}
							],
							"defaultValue": "\"auxInput7\""
						},
						{
							"id": 2351,
							"name": "AuxInput8",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 408,
									"character": 13
								}
							],
							"defaultValue": "\"auxInput8\""
						},
						{
							"id": 2352,
							"name": "AuxInput9",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 409,
									"character": 13
								}
							],
							"defaultValue": "\"auxInput9\""
						},
						{
							"id": 2355,
							"name": "BarometricPressurePa",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 412,
									"character": 24
								}
							],
							"defaultValue": "\"barometricPressurePa\""
						},
						{
							"id": 2354,
							"name": "BatteryMilliVolts",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 411,
									"character": 21
								}
							],
							"defaultValue": "\"batteryMilliVolts\""
						},
						{
							"id": 2356,
							"name": "DefLevelMilliPercent",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 413,
									"character": 24
								}
							],
							"defaultValue": "\"defLevelMilliPercent\""
						},
						{
							"id": 2357,
							"name": "EcuSpeedMph",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 414,
									"character": 15
								}
							],
							"defaultValue": "\"ecuSpeedMph\""
						},
						{
							"id": 2358,
							"name": "EngineCoolantTemperatureMilliC",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 415,
									"character": 34
								}
							],
							"defaultValue": "\"engineCoolantTemperatureMilliC\""
						},
						{
							"id": 2359,
							"name": "EngineImmobilizer",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 416,
									"character": 21
								}
							],
							"defaultValue": "\"engineImmobilizer\""
						},
						{
							"id": 2360,
							"name": "EngineLoadPercent",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 417,
									"character": 21
								}
							],
							"defaultValue": "\"engineLoadPercent\""
						},
						{
							"id": 2361,
							"name": "EngineOilPressureKpa",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 418,
									"character": 24
								}
							],
							"defaultValue": "\"engineOilPressureKPa\""
						},
						{
							"id": 2362,
							"name": "EngineRpm",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 419,
									"character": 13
								}
							],
							"defaultValue": "\"engineRpm\""
						},
						{
							"id": 2363,
							"name": "EngineStates",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 420,
									"character": 16
								}
							],
							"defaultValue": "\"engineStates\""
						},
						{
							"id": 2364,
							"name": "FaultCodes",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 421,
									"character": 14
								}
							],
							"defaultValue": "\"faultCodes\""
						},
						{
							"id": 2365,
							"name": "FuelPercents",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 422,
									"character": 16
								}
							],
							"defaultValue": "\"fuelPercents\""
						},
						{
							"id": 2366,
							"name": "Gps",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 423,
									"character": 7
								}
							],
							"defaultValue": "\"gps\""
						},
						{
							"id": 2367,
							"name": "GpsDistanceMeters",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 424,
									"character": 21
								}
							],
							"defaultValue": "\"gpsDistanceMeters\""
						},
						{
							"id": 2368,
							"name": "IntakeManifoldTemperatureMilliC",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 425,
									"character": 35
								}
							],
							"defaultValue": "\"intakeManifoldTemperatureMilliC\""
						},
						{
							"id": 2369,
							"name": "NfcCardScans",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 426,
									"character": 16
								}
							],
							"defaultValue": "\"nfcCardScans\""
						},
						{
							"id": 2370,
							"name": "ObdEngineSeconds",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 427,
									"character": 20
								}
							],
							"defaultValue": "\"obdEngineSeconds\""
						},
						{
							"id": 2371,
							"name": "ObdOdometerMeters",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 428,
									"character": 21
								}
							],
							"defaultValue": "\"obdOdometerMeters\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								2343,
								2344,
								2353,
								2345,
								2346,
								2347,
								2348,
								2349,
								2350,
								2351,
								2352,
								2355,
								2354,
								2356,
								2357,
								2358,
								2359,
								2360,
								2361,
								2362,
								2363,
								2364,
								2365,
								2366,
								2367,
								2368,
								2369,
								2370,
								2371
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/VehicleStatsApi.ts",
							"line": 399,
							"character": 49
						}
					]
				},
				{
					"id": 2310,
					"name": "GetVehicleStatsHistoryTypesEnum",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "export",
								"text": ""
							}
						]
					},
					"children": [
						{
							"id": 2311,
							"name": "AmbientAirTemperatureMilliC",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 363,
									"character": 31
								}
							],
							"defaultValue": "\"ambientAirTemperatureMilliC\""
						},
						{
							"id": 2312,
							"name": "AuxInput1",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 364,
									"character": 13
								}
							],
							"defaultValue": "\"auxInput1\""
						},
						{
							"id": 2321,
							"name": "AuxInput10",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 373,
									"character": 14
								}
							],
							"defaultValue": "\"auxInput10\""
						},
						{
							"id": 2313,
							"name": "AuxInput2",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 365,
									"character": 13
								}
							],
							"defaultValue": "\"auxInput2\""
						},
						{
							"id": 2314,
							"name": "AuxInput3",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 366,
									"character": 13
								}
							],
							"defaultValue": "\"auxInput3\""
						},
						{
							"id": 2315,
							"name": "AuxInput4",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 367,
									"character": 13
								}
							],
							"defaultValue": "\"auxInput4\""
						},
						{
							"id": 2316,
							"name": "AuxInput5",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 368,
									"character": 13
								}
							],
							"defaultValue": "\"auxInput5\""
						},
						{
							"id": 2317,
							"name": "AuxInput6",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 369,
									"character": 13
								}
							],
							"defaultValue": "\"auxInput6\""
						},
						{
							"id": 2318,
							"name": "AuxInput7",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 370,
									"character": 13
								}
							],
							"defaultValue": "\"auxInput7\""
						},
						{
							"id": 2319,
							"name": "AuxInput8",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 371,
									"character": 13
								}
							],
							"defaultValue": "\"auxInput8\""
						},
						{
							"id": 2320,
							"name": "AuxInput9",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 372,
									"character": 13
								}
							],
							"defaultValue": "\"auxInput9\""
						},
						{
							"id": 2322,
							"name": "BarometricPressurePa",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 374,
									"character": 24
								}
							],
							"defaultValue": "\"barometricPressurePa\""
						},
						{
							"id": 2323,
							"name": "BatteryMilliVolts",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 375,
									"character": 21
								}
							],
							"defaultValue": "\"batteryMilliVolts\""
						},
						{
							"id": 2324,
							"name": "DefLevelMilliPercent",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 376,
									"character": 24
								}
							],
							"defaultValue": "\"defLevelMilliPercent\""
						},
						{
							"id": 2325,
							"name": "EcuSpeedMph",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 377,
									"character": 15
								}
							],
							"defaultValue": "\"ecuSpeedMph\""
						},
						{
							"id": 2326,
							"name": "EngineCoolantTemperatureMilliC",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 378,
									"character": 34
								}
							],
							"defaultValue": "\"engineCoolantTemperatureMilliC\""
						},
						{
							"id": 2327,
							"name": "EngineImmobilizer",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 379,
									"character": 21
								}
							],
							"defaultValue": "\"engineImmobilizer\""
						},
						{
							"id": 2328,
							"name": "EngineLoadPercent",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 380,
									"character": 21
								}
							],
							"defaultValue": "\"engineLoadPercent\""
						},
						{
							"id": 2329,
							"name": "EngineOilPressureKpa",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 381,
									"character": 24
								}
							],
							"defaultValue": "\"engineOilPressureKPa\""
						},
						{
							"id": 2330,
							"name": "EngineRpm",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 382,
									"character": 13
								}
							],
							"defaultValue": "\"engineRpm\""
						},
						{
							"id": 2331,
							"name": "EngineStates",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 383,
									"character": 16
								}
							],
							"defaultValue": "\"engineStates\""
						},
						{
							"id": 2332,
							"name": "FaultCodes",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 384,
									"character": 14
								}
							],
							"defaultValue": "\"faultCodes\""
						},
						{
							"id": 2333,
							"name": "FuelPercents",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 385,
									"character": 16
								}
							],
							"defaultValue": "\"fuelPercents\""
						},
						{
							"id": 2334,
							"name": "Gps",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 386,
									"character": 7
								}
							],
							"defaultValue": "\"gps\""
						},
						{
							"id": 2335,
							"name": "GpsDistanceMeters",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 387,
									"character": 21
								}
							],
							"defaultValue": "\"gpsDistanceMeters\""
						},
						{
							"id": 2336,
							"name": "GpsOdometerMeters",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 388,
									"character": 21
								}
							],
							"defaultValue": "\"gpsOdometerMeters\""
						},
						{
							"id": 2337,
							"name": "IntakeManifoldTemperatureMilliC",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 389,
									"character": 35
								}
							],
							"defaultValue": "\"intakeManifoldTemperatureMilliC\""
						},
						{
							"id": 2338,
							"name": "NfcCardScans",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 390,
									"character": 16
								}
							],
							"defaultValue": "\"nfcCardScans\""
						},
						{
							"id": 2339,
							"name": "ObdEngineSeconds",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 391,
									"character": 20
								}
							],
							"defaultValue": "\"obdEngineSeconds\""
						},
						{
							"id": 2340,
							"name": "ObdOdometerMeters",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 392,
									"character": 21
								}
							],
							"defaultValue": "\"obdOdometerMeters\""
						},
						{
							"id": 2341,
							"name": "SyntheticEngineSeconds",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 393,
									"character": 26
								}
							],
							"defaultValue": "\"syntheticEngineSeconds\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								2311,
								2312,
								2321,
								2313,
								2314,
								2315,
								2316,
								2317,
								2318,
								2319,
								2320,
								2322,
								2323,
								2324,
								2325,
								2326,
								2327,
								2328,
								2329,
								2330,
								2331,
								2332,
								2333,
								2334,
								2335,
								2336,
								2337,
								2338,
								2339,
								2340,
								2341
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/VehicleStatsApi.ts",
							"line": 362,
							"character": 43
						}
					]
				},
				{
					"id": 2216,
					"name": "GetVehicleStatsTypesEnum",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"comment": {
						"tags": [
							{
								"tag": "export",
								"text": ""
							}
						]
					},
					"children": [
						{
							"id": 2217,
							"name": "AmbientAirTemperatureMilliC",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 254,
									"character": 31
								}
							],
							"defaultValue": "\"ambientAirTemperatureMilliC\""
						},
						{
							"id": 2218,
							"name": "AuxInput1",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 255,
									"character": 13
								}
							],
							"defaultValue": "\"auxInput1\""
						},
						{
							"id": 2227,
							"name": "AuxInput10",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 264,
									"character": 14
								}
							],
							"defaultValue": "\"auxInput10\""
						},
						{
							"id": 2219,
							"name": "AuxInput2",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 256,
									"character": 13
								}
							],
							"defaultValue": "\"auxInput2\""
						},
						{
							"id": 2220,
							"name": "AuxInput3",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 257,
									"character": 13
								}
							],
							"defaultValue": "\"auxInput3\""
						},
						{
							"id": 2221,
							"name": "AuxInput4",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 258,
									"character": 13
								}
							],
							"defaultValue": "\"auxInput4\""
						},
						{
							"id": 2222,
							"name": "AuxInput5",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 259,
									"character": 13
								}
							],
							"defaultValue": "\"auxInput5\""
						},
						{
							"id": 2223,
							"name": "AuxInput6",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 260,
									"character": 13
								}
							],
							"defaultValue": "\"auxInput6\""
						},
						{
							"id": 2224,
							"name": "AuxInput7",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 261,
									"character": 13
								}
							],
							"defaultValue": "\"auxInput7\""
						},
						{
							"id": 2225,
							"name": "AuxInput8",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 262,
									"character": 13
								}
							],
							"defaultValue": "\"auxInput8\""
						},
						{
							"id": 2226,
							"name": "AuxInput9",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 263,
									"character": 13
								}
							],
							"defaultValue": "\"auxInput9\""
						},
						{
							"id": 2228,
							"name": "BarometricPressurePa",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 265,
									"character": 24
								}
							],
							"defaultValue": "\"barometricPressurePa\""
						},
						{
							"id": 2229,
							"name": "BatteryMilliVolts",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 266,
									"character": 21
								}
							],
							"defaultValue": "\"batteryMilliVolts\""
						},
						{
							"id": 2230,
							"name": "DefLevelMilliPercent",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 267,
									"character": 24
								}
							],
							"defaultValue": "\"defLevelMilliPercent\""
						},
						{
							"id": 2231,
							"name": "EcuSpeedMph",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 268,
									"character": 15
								}
							],
							"defaultValue": "\"ecuSpeedMph\""
						},
						{
							"id": 2232,
							"name": "EngineCoolantTemperatureMilliC",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 269,
									"character": 34
								}
							],
							"defaultValue": "\"engineCoolantTemperatureMilliC\""
						},
						{
							"id": 2233,
							"name": "EngineImmobilizer",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 270,
									"character": 21
								}
							],
							"defaultValue": "\"engineImmobilizer\""
						},
						{
							"id": 2234,
							"name": "EngineLoadPercent",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 271,
									"character": 21
								}
							],
							"defaultValue": "\"engineLoadPercent\""
						},
						{
							"id": 2235,
							"name": "EngineOilPressureKpa",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 272,
									"character": 24
								}
							],
							"defaultValue": "\"engineOilPressureKPa\""
						},
						{
							"id": 2236,
							"name": "EngineRpm",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 273,
									"character": 13
								}
							],
							"defaultValue": "\"engineRpm\""
						},
						{
							"id": 2237,
							"name": "EngineStates",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 274,
									"character": 16
								}
							],
							"defaultValue": "\"engineStates\""
						},
						{
							"id": 2238,
							"name": "FaultCodes",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 275,
									"character": 14
								}
							],
							"defaultValue": "\"faultCodes\""
						},
						{
							"id": 2239,
							"name": "FuelPercents",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 276,
									"character": 16
								}
							],
							"defaultValue": "\"fuelPercents\""
						},
						{
							"id": 2240,
							"name": "Gps",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 277,
									"character": 7
								}
							],
							"defaultValue": "\"gps\""
						},
						{
							"id": 2241,
							"name": "GpsDistanceMeters",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 278,
									"character": 21
								}
							],
							"defaultValue": "\"gpsDistanceMeters\""
						},
						{
							"id": 2242,
							"name": "GpsOdometerMeters",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 279,
									"character": 21
								}
							],
							"defaultValue": "\"gpsOdometerMeters\""
						},
						{
							"id": 2243,
							"name": "IntakeManifoldTemperatureMilliC",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 280,
									"character": 35
								}
							],
							"defaultValue": "\"intakeManifoldTemperatureMilliC\""
						},
						{
							"id": 2244,
							"name": "NfcCardScans",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 281,
									"character": 16
								}
							],
							"defaultValue": "\"nfcCardScans\""
						},
						{
							"id": 2245,
							"name": "ObdEngineSeconds",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 282,
									"character": 20
								}
							],
							"defaultValue": "\"obdEngineSeconds\""
						},
						{
							"id": 2246,
							"name": "ObdOdometerMeters",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 283,
									"character": 21
								}
							],
							"defaultValue": "\"obdOdometerMeters\""
						},
						{
							"id": 2247,
							"name": "SyntheticEngineSeconds",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 284,
									"character": 26
								}
							],
							"defaultValue": "\"syntheticEngineSeconds\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								2217,
								2218,
								2227,
								2219,
								2220,
								2221,
								2222,
								2223,
								2224,
								2225,
								2226,
								2228,
								2229,
								2230,
								2231,
								2232,
								2233,
								2234,
								2235,
								2236,
								2237,
								2238,
								2239,
								2240,
								2241,
								2242,
								2243,
								2244,
								2245,
								2246,
								2247
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/VehicleStatsApi.ts",
							"line": 253,
							"character": 36
						}
					]
				},
				{
					"id": 2172,
					"name": "VehicleStatsApi",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {},
					"children": [
						{
							"id": 2173,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2174,
									"name": "new VehicleStatsApi",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2175,
											"name": "configuration",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Configuration"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"id": 2172,
										"name": "VehicleStatsApi"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.constructor"
							}
						},
						{
							"id": 2194,
							"name": "configuration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true
							},
							"type": {
								"type": "reference",
								"name": "Configuration"
							},
							"defaultValue": "...",
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.configuration"
							}
						},
						{
							"id": 2179,
							"name": "getVehicleStats",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 114,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 2180,
									"name": "getVehicleStats",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the last known stats of all vehicles at the given `time`. If no `time` is specified, the current time is used.  Related guide: <a href=\\\"/docs/telematics\\\" target=\\\"_blank\\\">Telematics</a>.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nStats snapshot"
									},
									"parameters": [
										{
											"id": 2181,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2149,
												"name": "GetVehicleStatsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "VehicleStatsResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2185,
							"name": "getVehicleStatsFeed",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 170,
									"character": 29
								}
							],
							"signatures": [
								{
									"id": 2186,
									"name": "getVehicleStatsFeed",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Follow a feed of vehicle stats.   Your first call to this endpoint will provide you with the most recent stats for each vehicle and an `endCursor`.  You can the provide the `endCursor` value to the `after` query parameter to get all updates since the last call you made.  If `hasNextPage` is `false`, no new data is immediately available. You should wait a minimum of 5 seconds making a subsequent request.  Related guide: <a href=\\\"/docs/telematics\\\" target=\\\"_blank\\\">Telematics</a>.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nStats feed"
									},
									"parameters": [
										{
											"id": 2187,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2156,
												"name": "GetVehicleStatsFeedRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "VehicleStatsListResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2182,
							"name": "getVehicleStatsFeedRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 123,
									"character": 32
								}
							],
							"signatures": [
								{
									"id": 2183,
									"name": "getVehicleStatsFeedRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Follow a feed of vehicle stats.   Your first call to this endpoint will provide you with the most recent stats for each vehicle and an `endCursor`.  You can the provide the `endCursor` value to the `after` query parameter to get all updates since the last call you made.  If `hasNextPage` is `false`, no new data is immediately available. You should wait a minimum of 5 seconds making a subsequent request.  Related guide: <a href=\\\"/docs/telematics\\\" target=\\\"_blank\\\">Telematics</a>.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nStats feed"
									},
									"parameters": [
										{
											"id": 2184,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2156,
												"name": "GetVehicleStatsFeedRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "VehicleStatsListResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2191,
							"name": "getVehicleStatsHistory",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 242,
									"character": 32
								}
							],
							"signatures": [
								{
									"id": 2192,
									"name": "getVehicleStatsHistory",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns vehicle stats during the given time range for all vehicles. This can be optionally filtered by tags or specific vehicle IDs.  Related guide: <a href=\\\"/docs/telematics\\\" target=\\\"_blank\\\">Telematics</a>.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nHistorical stats"
									},
									"parameters": [
										{
											"id": 2193,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2163,
												"name": "GetVehicleStatsHistoryRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "VehicleStatsListResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2188,
							"name": "getVehicleStatsHistoryRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 179,
									"character": 35
								}
							],
							"signatures": [
								{
									"id": 2189,
									"name": "getVehicleStatsHistoryRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns vehicle stats during the given time range for all vehicles. This can be optionally filtered by tags or specific vehicle IDs.  Related guide: <a href=\\\"/docs/telematics\\\" target=\\\"_blank\\\">Telematics</a>.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nHistorical stats"
									},
									"parameters": [
										{
											"id": 2190,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2163,
												"name": "GetVehicleStatsHistoryRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "VehicleStatsListResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2176,
							"name": "getVehicleStatsRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 67,
									"character": 28
								}
							],
							"signatures": [
								{
									"id": 2177,
									"name": "getVehicleStatsRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the last known stats of all vehicles at the given `time`. If no `time` is specified, the current time is used.  Related guide: <a href=\\\"/docs/telematics\\\" target=\\\"_blank\\\">Telematics</a>.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nStats snapshot"
									},
									"parameters": [
										{
											"id": 2178,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2149,
												"name": "GetVehicleStatsRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "VehicleStatsResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2213,
							"name": "request",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 47,
									"character": 27
								}
							],
							"signatures": [
								{
									"id": 2214,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2215,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "RequestOpts"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.request"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.request"
							}
						},
						{
							"id": 2195,
							"name": "withMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 31,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 2196,
									"name": "withMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2197,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 2198,
											"name": "middlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Middleware"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withMiddleware"
							}
						},
						{
							"id": 2206,
							"name": "withPostMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 42,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 2207,
									"name": "withPostMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2208,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 2209,
											"name": "postMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 2210,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 2211,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 2212,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "ResponseContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "Response"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPostMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPostMiddleware"
							}
						},
						{
							"id": 2199,
							"name": "withPreMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 37,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 2200,
									"name": "withPreMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2201,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 2202,
											"name": "preMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 2203,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 2204,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 2205,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "RequestContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "FetchParams"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPreMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPreMiddleware"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2173
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2194
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2179,
								2185,
								2182,
								2191,
								2188,
								2176,
								2213,
								2195,
								2206,
								2199
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/VehicleStatsApi.ts",
							"line": 61,
							"character": 28
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BaseAPI"
						}
					]
				},
				{
					"id": 2156,
					"name": "GetVehicleStatsFeedRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2158,
							"name": "after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 40,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2162,
							"name": "decorations",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 44,
									"character": 15
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 2280,
									"name": "GetVehicleStatsFeedDecorationsEnum"
								}
							}
						},
						{
							"id": 2159,
							"name": "parentTagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 41,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 2160,
							"name": "tagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 42,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 2157,
							"name": "types",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 39,
									"character": 9
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 2248,
									"name": "GetVehicleStatsFeedTypesEnum"
								}
							}
						},
						{
							"id": 2161,
							"name": "vehicleIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 43,
									"character": 14
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2158,
								2162,
								2159,
								2160,
								2157,
								2161
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/VehicleStatsApi.ts",
							"line": 38,
							"character": 43
						}
					]
				},
				{
					"id": 2163,
					"name": "GetVehicleStatsHistoryRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2167,
							"name": "after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 51,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2171,
							"name": "decorations",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 55,
									"character": 15
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 2342,
									"name": "GetVehicleStatsHistoryDecorationsEnum"
								}
							}
						},
						{
							"id": 2165,
							"name": "endTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 49,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2168,
							"name": "parentTagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 52,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 2164,
							"name": "startTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 48,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2169,
							"name": "tagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 53,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 2166,
							"name": "types",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 50,
									"character": 9
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 2310,
									"name": "GetVehicleStatsHistoryTypesEnum"
								}
							}
						},
						{
							"id": 2170,
							"name": "vehicleIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 54,
									"character": 14
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2167,
								2171,
								2165,
								2168,
								2164,
								2169,
								2166,
								2170
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/VehicleStatsApi.ts",
							"line": 47,
							"character": 46
						}
					]
				},
				{
					"id": 2149,
					"name": "GetVehicleStatsRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2151,
							"name": "after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 31,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2153,
							"name": "parentTagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 33,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 2154,
							"name": "tagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 34,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 2152,
							"name": "time",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 32,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2150,
							"name": "types",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 30,
									"character": 9
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 2216,
									"name": "GetVehicleStatsTypesEnum"
								}
							}
						},
						{
							"id": 2155,
							"name": "vehicleIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/VehicleStatsApi.ts",
									"line": 35,
									"character": 14
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2151,
								2153,
								2154,
								2152,
								2150,
								2155
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/VehicleStatsApi.ts",
							"line": 29,
							"character": 39
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						2280,
						2248,
						2342,
						2310,
						2216
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2172
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2156,
						2163,
						2149
					]
				}
			],
			"sources": [
				{
					"fileName": "apis/VehicleStatsApi.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2372,
			"name": "VehiclesApi",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2383,
					"name": "VehiclesApi",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {},
					"children": [
						{
							"id": 2384,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2385,
									"name": "new VehiclesApi",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2386,
											"name": "configuration",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Configuration"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"id": 2383,
										"name": "VehiclesApi"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.constructor"
							}
						},
						{
							"id": 2405,
							"name": "configuration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true
							},
							"type": {
								"type": "reference",
								"name": "Configuration"
							},
							"defaultValue": "...",
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.configuration"
							}
						},
						{
							"id": 2390,
							"name": "getVehicle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehiclesApi.ts",
									"line": 80,
									"character": 20
								}
							],
							"signatures": [
								{
									"id": 2391,
									"name": "getVehicle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get information about a specific vehicle.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nRetrieve a vehicle"
									},
									"parameters": [
										{
											"id": 2392,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2373,
												"name": "GetVehicleRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "VehicleResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2387,
							"name": "getVehicleRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehiclesApi.ts",
									"line": 57,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 2388,
									"name": "getVehicleRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get information about a specific vehicle.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nRetrieve a vehicle"
									},
									"parameters": [
										{
											"id": 2389,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2373,
												"name": "GetVehicleRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "VehicleResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2396,
							"name": "listVehicles",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehiclesApi.ts",
									"line": 124,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 2397,
									"name": "listVehicles",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a list of all vehicles.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nList all vehicles"
									},
									"parameters": [
										{
											"id": 2398,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2375,
												"name": "ListVehiclesRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ListVehiclesResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2393,
							"name": "listVehiclesRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehiclesApi.ts",
									"line": 89,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 2394,
									"name": "listVehiclesRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a list of all vehicles.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nList all vehicles"
									},
									"parameters": [
										{
											"id": 2395,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2375,
												"name": "ListVehiclesRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ListVehiclesResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2424,
							"name": "request",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 47,
									"character": 27
								}
							],
							"signatures": [
								{
									"id": 2425,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2426,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "RequestOpts"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.request"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.request"
							}
						},
						{
							"id": 2402,
							"name": "updateVehicle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehiclesApi.ts",
									"line": 163,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 2403,
									"name": "updateVehicle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Updates the given Vehicle object.  **Note:** Vehicle objects are automatically created when Samsara Vehicle Gateways are installed. You cannot create a Vehicle object via API.  You are able to *update* many of the fields of a Vehicle.  **Note**: There are no required fields in the request body, and you only need to provide the fields you wish to update.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nUpdate a vehicle"
									},
									"parameters": [
										{
											"id": 2404,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2380,
												"name": "UpdateVehicleOperationRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "VehicleResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2399,
							"name": "updateVehicleRaw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehiclesApi.ts",
									"line": 133,
									"character": 26
								}
							],
							"signatures": [
								{
									"id": 2400,
									"name": "updateVehicleRaw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Updates the given Vehicle object.  **Note:** Vehicle objects are automatically created when Samsara Vehicle Gateways are installed. You cannot create a Vehicle object via API.  You are able to *update* many of the fields of a Vehicle.  **Note**: There are no required fields in the request body, and you only need to provide the fields you wish to update.    **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href=\\\"https://forms.gle/zkD4NCH7HjKb7mm69\\\" target=\\\"_blank\\\">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href=\\\"https://www.samsara.com/help\\\" target=\\\"_blank\\\">submit a case</a> to our support team.\nUpdate a vehicle"
									},
									"parameters": [
										{
											"id": 2401,
											"name": "requestParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2380,
												"name": "UpdateVehicleOperationRequest"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "VehicleResponse"
													}
												],
												"name": "ApiResponse"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2406,
							"name": "withMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 31,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 2407,
									"name": "withMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2408,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 2409,
											"name": "middlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Middleware"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withMiddleware"
							}
						},
						{
							"id": 2417,
							"name": "withPostMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 42,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 2418,
									"name": "withPostMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2419,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 2420,
											"name": "postMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 2421,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 2422,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 2423,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "ResponseContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "Response"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPostMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPostMiddleware"
							}
						},
						{
							"id": 2410,
							"name": "withPreMiddleware",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "runtime.ts",
									"line": 37,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 2411,
									"name": "withPreMiddleware",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2412,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "BaseAPI"
											}
										}
									],
									"parameters": [
										{
											"id": 2413,
											"name": "preMiddlewares",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 2414,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"signatures": [
															{
																"id": 2415,
																"name": "__type",
																"kind": 4096,
																"kindString": "Call signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 2416,
																		"name": "context",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "reference",
																			"name": "RequestContext"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "void"
																				},
																				{
																					"type": "reference",
																					"name": "FetchParams"
																				}
																			]
																		}
																	],
																	"name": "Promise"
																}
															}
														]
													}
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "runtime.BaseAPI.withPreMiddleware"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "runtime.BaseAPI.withPreMiddleware"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2384
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2405
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2390,
								2387,
								2396,
								2393,
								2424,
								2402,
								2399,
								2406,
								2417,
								2410
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/VehiclesApi.ts",
							"line": 51,
							"character": 24
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BaseAPI"
						}
					]
				},
				{
					"id": 2373,
					"name": "GetVehicleRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2374,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehiclesApi.ts",
									"line": 33,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2374
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/VehiclesApi.ts",
							"line": 32,
							"character": 34
						}
					]
				},
				{
					"id": 2375,
					"name": "ListVehiclesRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2377,
							"name": "after",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/VehiclesApi.ts",
									"line": 38,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2376,
							"name": "limit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/VehiclesApi.ts",
									"line": 37,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2378,
							"name": "parentTagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/VehiclesApi.ts",
									"line": 39,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 2379,
							"name": "tagIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "apis/VehiclesApi.ts",
									"line": 40,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2377,
								2376,
								2378,
								2379
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/VehiclesApi.ts",
							"line": 36,
							"character": 36
						}
					]
				},
				{
					"id": 2380,
					"name": "UpdateVehicleOperationRequest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2381,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehiclesApi.ts",
									"line": 44,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2382,
							"name": "vehicle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "apis/VehiclesApi.ts",
									"line": 45,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "UpdateVehicleRequest"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2381,
								2382
							]
						}
					],
					"sources": [
						{
							"fileName": "apis/VehiclesApi.ts",
							"line": 43,
							"character": 46
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2383
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2373,
						2375,
						2380
					]
				}
			],
			"sources": [
				{
					"fileName": "apis/VehiclesApi.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2427,
			"name": "index",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2433,
					"name": "AddressesApi",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 17
				},
				{
					"id": 2438,
					"name": "AssetsApi",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 92
				},
				{
					"id": 2465,
					"name": "BetaAPIsApi",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 238
				},
				{
					"id": 2471,
					"name": "CameraMediaApi",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 448
				},
				{
					"id": 2475,
					"name": "CarrierProposedAssignmentsApi",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 490
				},
				{
					"id": 2481,
					"name": "ContactsApi",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 547
				},
				{
					"id": 2428,
					"name": "CreateAddressOperationRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 2
				},
				{
					"id": 2439,
					"name": "CreateAttributeOperationRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 147
				},
				{
					"id": 2472,
					"name": "CreateCarrierProposedAssignmentOperationRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 481
				},
				{
					"id": 2476,
					"name": "CreateContactOperationRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 535
				},
				{
					"id": 2493,
					"name": "CreateDriverOperationRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 735
				},
				{
					"id": 2544,
					"name": "CreateDvirOperationRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1358
				},
				{
					"id": 2528,
					"name": "CreateIndustrialAssetRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1169
				},
				{
					"id": 2554,
					"name": "CreateRouteRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1515
				},
				{
					"id": 2577,
					"name": "CreateTagOperationRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1804
				},
				{
					"id": 2440,
					"name": "CreateTrailerRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 149
				},
				{
					"id": 2589,
					"name": "CreateUserOperationRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1968
				},
				{
					"id": 2429,
					"name": "DeleteAddressRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4
				},
				{
					"id": 2466,
					"name": "DeleteAttributeEntityTypeEnum",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 428
				},
				{
					"id": 2441,
					"name": "DeleteAttributeRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 151
				},
				{
					"id": 2473,
					"name": "DeleteCarrierProposedAssignmentRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 483
				},
				{
					"id": 2477,
					"name": "DeleteContactRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 537
				},
				{
					"id": 2442,
					"name": "DeleteDocumentRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 154
				},
				{
					"id": 2482,
					"name": "DeleteDriverDocumentByIdAndDriverIdRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 604
				},
				{
					"id": 2443,
					"name": "DeleteGatewayRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 156
				},
				{
					"id": 2529,
					"name": "DeleteIndustrialAssetRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1171
				},
				{
					"id": 2578,
					"name": "DeleteTagRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1806
				},
				{
					"id": 2444,
					"name": "DeleteTrailerRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 158
				},
				{
					"id": 2590,
					"name": "DeleteUserRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1970
				},
				{
					"id": 2488,
					"name": "DocumentsApi",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 621
				},
				{
					"id": 2491,
					"name": "DriverVehicleAssignmentsApi",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 699
				},
				{
					"id": 2497,
					"name": "DriversApi",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 750
				},
				{
					"id": 2507,
					"name": "EquipmentApi",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 848
				},
				{
					"id": 2555,
					"name": "FetchRouteRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1517
				},
				{
					"id": 2556,
					"name": "FetchRoutesRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1519
				},
				{
					"id": 2483,
					"name": "GenerateDocumentPdfRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 607
				},
				{
					"id": 2430,
					"name": "GetAddressRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 6
				},
				{
					"id": 2467,
					"name": "GetAttributeEntityTypeEnum",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 431
				},
				{
					"id": 2445,
					"name": "GetAttributeRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 160
				},
				{
					"id": 2468,
					"name": "GetAttributesByEntityTypeEntityTypeEnum",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 434
				},
				{
					"id": 2446,
					"name": "GetAttributesByEntityTypeRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 163
				},
				{
					"id": 2470,
					"name": "GetCameraMediaRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 441
				},
				{
					"id": 2478,
					"name": "GetContactRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 539
				},
				{
					"id": 2530,
					"name": "GetDataInputDataFeedRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1173
				},
				{
					"id": 2531,
					"name": "GetDataInputDataHistoryRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1179
				},
				{
					"id": 2532,
					"name": "GetDataInputDataSnapshotRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1187
				},
				{
					"id": 2533,
					"name": "GetDataInputsRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1193
				},
				{
					"id": 2484,
					"name": "GetDocumentPdfRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 609
				},
				{
					"id": 2447,
					"name": "GetDocumentRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 167
				},
				{
					"id": 2448,
					"name": "GetDocumentTypesRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 169
				},
				{
					"id": 2449,
					"name": "GetDocumentsRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 171
				},
				{
					"id": 2469,
					"name": "GetDriverEfficiencyDriverActivationStatusEnum",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 437
				},
				{
					"id": 2450,
					"name": "GetDriverEfficiencyRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 177
				},
				{
					"id": 2494,
					"name": "GetDriverRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 737
				},
				{
					"id": 2573,
					"name": "GetDriverTachographActivityRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1738
				},
				{
					"id": 2574,
					"name": "GetDriverTachographFilesRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1745
				},
				{
					"id": 2492,
					"name": "GetDriversVehicleAssignmentsDriverActivationStatusEnum",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 731
				},
				{
					"id": 2490,
					"name": "GetDriversVehicleAssignmentsRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 691
				},
				{
					"id": 2545,
					"name": "GetDvirDefectsRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1360
				},
				{
					"id": 2546,
					"name": "GetDvirHistoryRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1366
				},
				{
					"id": 2501,
					"name": "GetEquipmentLocationsFeedRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 811
				},
				{
					"id": 2502,
					"name": "GetEquipmentLocationsHistoryRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 816
				},
				{
					"id": 2500,
					"name": "GetEquipmentLocationsRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 806
				},
				{
					"id": 2499,
					"name": "GetEquipmentRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 804
				},
				{
					"id": 2504,
					"name": "GetEquipmentStatsFeedRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 829
				},
				{
					"id": 2509,
					"name": "GetEquipmentStatsFeedTypesEnum",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 931
				},
				{
					"id": 2505,
					"name": "GetEquipmentStatsHistoryRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 835
				},
				{
					"id": 2510,
					"name": "GetEquipmentStatsHistoryTypesEnum",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 940
				},
				{
					"id": 2503,
					"name": "GetEquipmentStatsRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 823
				},
				{
					"id": 2508,
					"name": "GetEquipmentStatsTypesEnum",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 922
				},
				{
					"id": 2451,
					"name": "GetGatewaysRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 185
				},
				{
					"id": 2511,
					"name": "GetHosClocksRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 950
				},
				{
					"id": 2517,
					"name": "GetHosDailyLogsDriverActivationStatusEnum",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1035
				},
				{
					"id": 2518,
					"name": "GetHosDailyLogsExpandEnum",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1038
				},
				{
					"id": 2512,
					"name": "GetHosDailyLogsRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 956
				},
				{
					"id": 2513,
					"name": "GetHosLogsRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 965
				},
				{
					"id": 2524,
					"name": "GetIftaJurisdictionReportsFuelTypeEnum",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1116
				},
				{
					"id": 2522,
					"name": "GetIftaJurisdictionReportsMonthEnum",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1098
				},
				{
					"id": 2523,
					"name": "GetIftaJurisdictionReportsQuarterEnum",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1111
				},
				{
					"id": 2519,
					"name": "GetIftaJurisdictionReportsRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1041
				},
				{
					"id": 2527,
					"name": "GetIftaVehicleReportsFuelTypeEnum",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1151
				},
				{
					"id": 2525,
					"name": "GetIftaVehicleReportsMonthEnum",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1133
				},
				{
					"id": 2526,
					"name": "GetIftaVehicleReportsQuarterEnum",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1146
				},
				{
					"id": 2520,
					"name": "GetIftaVehicleReportsRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1050
				},
				{
					"id": 2534,
					"name": "GetIndustrialAssetsRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1199
				},
				{
					"id": 2561,
					"name": "GetRoutesFeedExpandEnum",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1595
				},
				{
					"id": 2557,
					"name": "GetRoutesFeedRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1524
				},
				{
					"id": 2562,
					"name": "GetSafetyEventsRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1598
				},
				{
					"id": 2579,
					"name": "GetTagRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1808
				},
				{
					"id": 2452,
					"name": "GetTrailerRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 188
				},
				{
					"id": 2453,
					"name": "GetTrailerStatsFeedRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 190
				},
				{
					"id": 2454,
					"name": "GetTrailerStatsHistoryRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 197
				},
				{
					"id": 2455,
					"name": "GetTrailerStatsSnapshotRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 206
				},
				{
					"id": 2591,
					"name": "GetUserRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1972
				},
				{
					"id": 2599,
					"name": "GetVehicleLocationsFeedRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 2092
				},
				{
					"id": 2600,
					"name": "GetVehicleLocationsHistoryRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 2097
				},
				{
					"id": 2598,
					"name": "GetVehicleLocationsRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 2086
				},
				{
					"id": 2611,
					"name": "GetVehicleRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 2373
				},
				{
					"id": 2608,
					"name": "GetVehicleStatsFeedDecorationsEnum",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 2280
				},
				{
					"id": 2603,
					"name": "GetVehicleStatsFeedRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 2156
				},
				{
					"id": 2607,
					"name": "GetVehicleStatsFeedTypesEnum",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 2248
				},
				{
					"id": 2610,
					"name": "GetVehicleStatsHistoryDecorationsEnum",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 2342
				},
				{
					"id": 2604,
					"name": "GetVehicleStatsHistoryRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 2163
				},
				{
					"id": 2609,
					"name": "GetVehicleStatsHistoryTypesEnum",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 2310
				},
				{
					"id": 2602,
					"name": "GetVehicleStatsRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 2149
				},
				{
					"id": 2606,
					"name": "GetVehicleStatsTypesEnum",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 2216
				},
				{
					"id": 2575,
					"name": "GetVehicleTachographFilesRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1752
				},
				{
					"id": 2596,
					"name": "GetVehiclesDriverAssignmentsRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 2046
				},
				{
					"id": 2535,
					"name": "GetVisionRunsByCameraRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1205
				},
				{
					"id": 2516,
					"name": "HoursOfServiceApi",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 979
				},
				{
					"id": 2521,
					"name": "IFTAApi",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1060
				},
				{
					"id": 2543,
					"name": "IndustrialApi",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1233
				},
				{
					"id": 2431,
					"name": "ListAddressesRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 8
				},
				{
					"id": 2474,
					"name": "ListCarrierProposedAssignmentsRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 485
				},
				{
					"id": 2479,
					"name": "ListContactsRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 541
				},
				{
					"id": 2498,
					"name": "ListDriversDriverActivationStatusEnum",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 800
				},
				{
					"id": 2495,
					"name": "ListDriversRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 739
				},
				{
					"id": 2506,
					"name": "ListEquipmentRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 843
				},
				{
					"id": 2580,
					"name": "ListTagsRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1810
				},
				{
					"id": 2456,
					"name": "ListTrailersRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 213
				},
				{
					"id": 2592,
					"name": "ListUserRolesRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1974
				},
				{
					"id": 2593,
					"name": "ListUsersRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1977
				},
				{
					"id": 2612,
					"name": "ListVehiclesRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 2375
				},
				{
					"id": 2549,
					"name": "MaintenanceApi",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1379
				},
				{
					"id": 2552,
					"name": "MessagesApi",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1445
				},
				{
					"id": 2553,
					"name": "OrganizationInfoApi",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1484
				},
				{
					"id": 2536,
					"name": "PatchAssetDataOutputsRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1209
				},
				{
					"id": 2457,
					"name": "PatchComplianceSettingsRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 218
				},
				{
					"id": 2458,
					"name": "PatchDriverAppSettingsRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 220
				},
				{
					"id": 2459,
					"name": "PatchEquipmentRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 222
				},
				{
					"id": 2537,
					"name": "PatchIndustrialAssetRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1212
				},
				{
					"id": 2558,
					"name": "PatchRouteRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1527
				},
				{
					"id": 2581,
					"name": "PatchTagOperationRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1813
				},
				{
					"id": 2460,
					"name": "PostDocumentRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 225
				},
				{
					"id": 2461,
					"name": "PostGatewayRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 227
				},
				{
					"id": 2582,
					"name": "ReplaceTagOperationRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1816
				},
				{
					"id": 2560,
					"name": "RoutesApi",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1533
				},
				{
					"id": 2566,
					"name": "SafetyApi",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1616
				},
				{
					"id": 2572,
					"name": "SensorsApi",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1677
				},
				{
					"id": 2514,
					"name": "SetCurrentDutyStatusRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 972
				},
				{
					"id": 2576,
					"name": "TachographEUOnlyApi",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1759
				},
				{
					"id": 2583,
					"name": "TagsApi",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1819
				},
				{
					"id": 2586,
					"name": "TrailerAssignmentsApi",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1892
				},
				{
					"id": 2588,
					"name": "TripsApi",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1935
				},
				{
					"id": 2432,
					"name": "UpdateAddressOperationRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 14
				},
				{
					"id": 2462,
					"name": "UpdateAttributeOperationRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 229
				},
				{
					"id": 2480,
					"name": "UpdateContactOperationRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 544
				},
				{
					"id": 2496,
					"name": "UpdateDriverOperationRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 747
				},
				{
					"id": 2548,
					"name": "UpdateDvirDefectRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1376
				},
				{
					"id": 2547,
					"name": "UpdateDvirOperationRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1373
				},
				{
					"id": 2463,
					"name": "UpdateEngineImmobilizerStateRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 232
				},
				{
					"id": 2464,
					"name": "UpdateTrailerRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 235
				},
				{
					"id": 2594,
					"name": "UpdateUserOperationRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1980
				},
				{
					"id": 2613,
					"name": "UpdateVehicleOperationRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 2380
				},
				{
					"id": 2595,
					"name": "UsersApi",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1983
				},
				{
					"id": 2485,
					"name": "V1createDriverDocumentRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 611
				},
				{
					"id": 2550,
					"name": "V1createMessagesRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1440
				},
				{
					"id": 2559,
					"name": "V1deleteDispatchRouteByIdRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1530
				},
				{
					"id": 2434,
					"name": "V1getAllAssetCurrentLocationsRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 74
				},
				{
					"id": 2584,
					"name": "V1getAllTrailerAssignmentsRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1882
				},
				{
					"id": 2435,
					"name": "V1getAssetLocationRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 78
				},
				{
					"id": 2436,
					"name": "V1getAssetReeferRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 82
				},
				{
					"id": 2437,
					"name": "V1getAssetsReefersRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 86
				},
				{
					"id": 2486,
					"name": "V1getDriverDocumentByIdAndDriverIdRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 614
				},
				{
					"id": 2489,
					"name": "V1getDriverDocumentsByOrgIdQueryByEnum",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 687
				},
				{
					"id": 2487,
					"name": "V1getDriverDocumentsByOrgIdRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 617
				},
				{
					"id": 2563,
					"name": "V1getDriverSafetyScoreRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1605
				},
				{
					"id": 2515,
					"name": "V1getFleetHosAuthenticationLogsRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 975
				},
				{
					"id": 2585,
					"name": "V1getFleetTrailerAssignmentsRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1888
				},
				{
					"id": 2587,
					"name": "V1getFleetTripsRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1931
				},
				{
					"id": 2538,
					"name": "V1getMachinesHistoryRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1215
				},
				{
					"id": 2551,
					"name": "V1getMessagesRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1442
				},
				{
					"id": 2567,
					"name": "V1getSensorsCargoRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1667
				},
				{
					"id": 2568,
					"name": "V1getSensorsDoorRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1669
				},
				{
					"id": 2569,
					"name": "V1getSensorsHistoryRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1671
				},
				{
					"id": 2570,
					"name": "V1getSensorsHumidityRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1673
				},
				{
					"id": 2571,
					"name": "V1getSensorsTemperatureRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1675
				},
				{
					"id": 2564,
					"name": "V1getVehicleHarshEventRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1609
				},
				{
					"id": 2565,
					"name": "V1getVehicleSafetyScoreRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1612
				},
				{
					"id": 2539,
					"name": "V1getVisionLatestRunCameraRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1217
				},
				{
					"id": 2540,
					"name": "V1getVisionProgramsByCameraRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1223
				},
				{
					"id": 2542,
					"name": "V1getVisionRunsByCameraAndProgramRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1228
				},
				{
					"id": 2541,
					"name": "V1getVisionRunsRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1225
				},
				{
					"id": 2597,
					"name": "VehicleDriverAssignmentsApi",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 2053
				},
				{
					"id": 2601,
					"name": "VehicleLocationsApi",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 2104
				},
				{
					"id": 2605,
					"name": "VehicleStatsApi",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 2172
				},
				{
					"id": 2614,
					"name": "VehiclesApi",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 2383
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						2433,
						2438,
						2465,
						2471,
						2475,
						2481,
						2428,
						2439,
						2472,
						2476,
						2493,
						2544,
						2528,
						2554,
						2577,
						2440,
						2589,
						2429,
						2466,
						2441,
						2473,
						2477,
						2442,
						2482,
						2443,
						2529,
						2578,
						2444,
						2590,
						2488,
						2491,
						2497,
						2507,
						2555,
						2556,
						2483,
						2430,
						2467,
						2445,
						2468,
						2446,
						2470,
						2478,
						2530,
						2531,
						2532,
						2533,
						2484,
						2447,
						2448,
						2449,
						2469,
						2450,
						2494,
						2573,
						2574,
						2492,
						2490,
						2545,
						2546,
						2501,
						2502,
						2500,
						2499,
						2504,
						2509,
						2505,
						2510,
						2503,
						2508,
						2451,
						2511,
						2517,
						2518,
						2512,
						2513,
						2524,
						2522,
						2523,
						2519,
						2527,
						2525,
						2526,
						2520,
						2534,
						2561,
						2557,
						2562,
						2579,
						2452,
						2453,
						2454,
						2455,
						2591,
						2599,
						2600,
						2598,
						2611,
						2608,
						2603,
						2607,
						2610,
						2604,
						2609,
						2602,
						2606,
						2575,
						2596,
						2535,
						2516,
						2521,
						2543,
						2431,
						2474,
						2479,
						2498,
						2495,
						2506,
						2580,
						2456,
						2592,
						2593,
						2612,
						2549,
						2552,
						2553,
						2536,
						2457,
						2458,
						2459,
						2537,
						2558,
						2581,
						2460,
						2461,
						2582,
						2560,
						2566,
						2572,
						2514,
						2576,
						2583,
						2586,
						2588,
						2432,
						2462,
						2480,
						2496,
						2548,
						2547,
						2463,
						2464,
						2594,
						2613,
						2595,
						2485,
						2550,
						2559,
						2434,
						2584,
						2435,
						2436,
						2437,
						2486,
						2489,
						2487,
						2563,
						2515,
						2585,
						2587,
						2538,
						2551,
						2567,
						2568,
						2569,
						2570,
						2571,
						2564,
						2565,
						2539,
						2540,
						2542,
						2541,
						2597,
						2601,
						2605,
						2614
					]
				}
			],
			"sources": [
				{
					"fileName": "apis/index.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"kind": 1,
			"children": [
				1,
				73,
				146,
				440,
				480,
				534,
				603,
				690,
				734,
				803,
				949,
				1040,
				1168,
				1357,
				1439,
				1483,
				1514,
				1597,
				1666,
				1737,
				1803,
				1881,
				1930,
				1967,
				2045,
				2085,
				2148,
				2372,
				2427
			]
		}
	]
}