/* tslint:disable */
/* eslint-disable */
/**
 * Samsara API
 * <style type=\"text/css\"> n {     padding: 1em;     width: 100%;     display: block;     margin: 28px 0; } n.info {     background-color: rgba(0, 51, 160, 0.1); } n.warning {     background-color: #fdf6e3; } i:before {     margin-right: 6px; } nh {     font-size: 1.5rem;     font-weight: 700;     line-height: 1.1;     display: block; } nb {     margin-top: 10px;     padding-left: 22px;     display: block; } </style>  # Overview  <n class=\"info\"> <nh> <i class=\"fa fa-info-circle\"></i> Something new! </nh> <nb> Welcome Samsara\'s new and improved API. Check out our FAQ [here](https://developers.samsara.com/docs/introducing-our-next-generation-api) to see what\'s changed and learn how to get started.<br> <br> Want to access the legacy API docs? You can find them [here](https://www.samsara.com/api-legacy).<br> <br> *Note: Because this is a new set of APIs, we have not transitioned all endpoints over to this standard. Endpoints that still use the legacy standards are indicated in the reference documentation. If you can\'t find an API that you\'re looking for, we encourage you to look for it in our [legacy API docs](https://www.samsara.com/api-legacy) as we continue to transition all endpoints over. Check back here for updates!*<br> <br> Submit your feedback [here](https://forms.gle/r4bs6HQshQAvBuwv6)! </nb> </n>  Samsara provides API endpoints so that you can build powerful applications and custom solutions with sensor data. Samsara has endpoints available to track and analyze sensors, vehicles, and entire fleets.  The Samsara API is a [RESTful API](https://en.wikipedia.org/wiki/Representational_state_transfer). It uses standard [HTTP](https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol) authentication, verbs, and response codes, and it returns [JSON](http://www.json.org/) response bodies. If you\'re familiar with what you can build with a REST API, then this will be your go-to API reference.  Visit [developers.samsara.com](https://developers.samsara.com) to find getting started guides and an API overview.  If you have any questions, please visit https://samsara.com/help.  ## Endpoints  All our APIs can be accessed through HTTP requests to URLs like:  ``` https://api.samsara.com/<endpoint> ```  For EU customers, this URL will be:  ``` https://api.eu.samsara.com/<endpoint> ```  <n class=\"warning\"> <nh> <i class=\"fa fa-exclamation-circle\"></i> Note </nh> <nb> Legacy endpoints will have the URL: `https://api.samsara.com/v1/<endpoint>` or `https://api.eu.samsara.com/v1/<endpoint>` </nb> </n>  ## Authentication  To authenticate your API request you will need to include your secret token. You can manage your API tokens in the [Dashboard](https://cloud.samsara.com). They are visible under `Settings->Organization->API Tokens`.  Your API tokens carry many privileges, so be sure to keep them secure. Do not share your secret API tokens in publicly accessible areas such as GitHub, client-side code, and so on.  Authentication to the API is performed via Bearer Token in the HTTP Authorization header. Provide your API token as the `access_token` value in an `Authorization: Bearer` header. You do not need to provide a password:  ```curl Authorization: Bearer {access_token} ```  All API requests must be made over [HTTPS](https://en.wikipedia.org/wiki/HTTPS). Calls made over plain HTTP or without authentication will fail.  ### OAuth2 If building an application for our marketplace, our API is accessible via. OAuth2 as well.  | Type  | Value | | ------------- |:-------------:| | Security scheme      | OAuth2                                   | | OAuth2 Flow          | accessCode                               | | Authorization URL    | https://api.samsara.com/oauth2/authorize | | Token URL            | https://api.samsara.com/oauth2/token     |    ## Common Patterns  You can find more info about request methods, response codes, error codes, versioning, pagination, timestamps, and mini-objects [here](https://developers.samsara.com/docs/common-structures). 
 *
 * The version of the OpenAPI document: 2020-06-15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AttributeTiny,
    AttributeTinyFromJSON,
    AttributeTinyFromJSONTyped,
    AttributeTinyToJSON,
} from './';

/**
 * All the editable portions of the vehicle object.
 * @export
 * @interface UpdateVehicleRequest
 */
export interface UpdateVehicleRequest {
    /**
     * 
     * @type {Array<AttributeTiny>}
     * @memberof UpdateVehicleRequest
     */
    attributes?: Array<AttributeTiny>;
    /**
     * The type of <a href="https://kb.samsara.com/hc/en-us/articles/360043040512-Auxiliary-Inputs" target="_blank">auxiliary input</a> configured for this Vehicle. Once configured, these inputs will generate dynamic, time-series data that will be available to view in the Samsara Dashboard. **By default**: empty. This can be set or updated through the Samsara Dashboard or the API at any time. Inputs 3-10 are only available on gateways with an attached aux expander.
     * @type {string}
     * @memberof UpdateVehicleRequest
     */
    auxInputType1?: UpdateVehicleRequestAuxInputType1Enum;
    /**
     * The type of <a href="https://kb.samsara.com/hc/en-us/articles/360043040512-Auxiliary-Inputs" target="_blank">auxiliary input</a> configured for this Vehicle. Once configured, these inputs will generate dynamic, time-series data that will be available to view in the Samsara Dashboard. **By default**: empty. This can be set or updated through the Samsara Dashboard or the API at any time. Inputs 3-10 are only available on gateways with an attached aux expander.
     * @type {string}
     * @memberof UpdateVehicleRequest
     */
    auxInputType10?: UpdateVehicleRequestAuxInputType10Enum;
    /**
     * The type of <a href="https://kb.samsara.com/hc/en-us/articles/360043040512-Auxiliary-Inputs" target="_blank">auxiliary input</a> configured for this Vehicle. Once configured, these inputs will generate dynamic, time-series data that will be available to view in the Samsara Dashboard. **By default**: empty. This can be set or updated through the Samsara Dashboard or the API at any time. Inputs 3-10 are only available on gateways with an attached aux expander.
     * @type {string}
     * @memberof UpdateVehicleRequest
     */
    auxInputType2?: UpdateVehicleRequestAuxInputType2Enum;
    /**
     * The type of <a href="https://kb.samsara.com/hc/en-us/articles/360043040512-Auxiliary-Inputs" target="_blank">auxiliary input</a> configured for this Vehicle. Once configured, these inputs will generate dynamic, time-series data that will be available to view in the Samsara Dashboard. **By default**: empty. This can be set or updated through the Samsara Dashboard or the API at any time. Inputs 3-10 are only available on gateways with an attached aux expander.
     * @type {string}
     * @memberof UpdateVehicleRequest
     */
    auxInputType3?: UpdateVehicleRequestAuxInputType3Enum;
    /**
     * The type of <a href="https://kb.samsara.com/hc/en-us/articles/360043040512-Auxiliary-Inputs" target="_blank">auxiliary input</a> configured for this Vehicle. Once configured, these inputs will generate dynamic, time-series data that will be available to view in the Samsara Dashboard. **By default**: empty. This can be set or updated through the Samsara Dashboard or the API at any time. Inputs 3-10 are only available on gateways with an attached aux expander.
     * @type {string}
     * @memberof UpdateVehicleRequest
     */
    auxInputType4?: UpdateVehicleRequestAuxInputType4Enum;
    /**
     * The type of <a href="https://kb.samsara.com/hc/en-us/articles/360043040512-Auxiliary-Inputs" target="_blank">auxiliary input</a> configured for this Vehicle. Once configured, these inputs will generate dynamic, time-series data that will be available to view in the Samsara Dashboard. **By default**: empty. This can be set or updated through the Samsara Dashboard or the API at any time. Inputs 3-10 are only available on gateways with an attached aux expander.
     * @type {string}
     * @memberof UpdateVehicleRequest
     */
    auxInputType5?: UpdateVehicleRequestAuxInputType5Enum;
    /**
     * The type of <a href="https://kb.samsara.com/hc/en-us/articles/360043040512-Auxiliary-Inputs" target="_blank">auxiliary input</a> configured for this Vehicle. Once configured, these inputs will generate dynamic, time-series data that will be available to view in the Samsara Dashboard. **By default**: empty. This can be set or updated through the Samsara Dashboard or the API at any time. Inputs 3-10 are only available on gateways with an attached aux expander.
     * @type {string}
     * @memberof UpdateVehicleRequest
     */
    auxInputType6?: UpdateVehicleRequestAuxInputType6Enum;
    /**
     * The type of <a href="https://kb.samsara.com/hc/en-us/articles/360043040512-Auxiliary-Inputs" target="_blank">auxiliary input</a> configured for this Vehicle. Once configured, these inputs will generate dynamic, time-series data that will be available to view in the Samsara Dashboard. **By default**: empty. This can be set or updated through the Samsara Dashboard or the API at any time. Inputs 3-10 are only available on gateways with an attached aux expander.
     * @type {string}
     * @memberof UpdateVehicleRequest
     */
    auxInputType7?: UpdateVehicleRequestAuxInputType7Enum;
    /**
     * The type of <a href="https://kb.samsara.com/hc/en-us/articles/360043040512-Auxiliary-Inputs" target="_blank">auxiliary input</a> configured for this Vehicle. Once configured, these inputs will generate dynamic, time-series data that will be available to view in the Samsara Dashboard. **By default**: empty. This can be set or updated through the Samsara Dashboard or the API at any time. Inputs 3-10 are only available on gateways with an attached aux expander.
     * @type {string}
     * @memberof UpdateVehicleRequest
     */
    auxInputType8?: UpdateVehicleRequestAuxInputType8Enum;
    /**
     * The type of <a href="https://kb.samsara.com/hc/en-us/articles/360043040512-Auxiliary-Inputs" target="_blank">auxiliary input</a> configured for this Vehicle. Once configured, these inputs will generate dynamic, time-series data that will be available to view in the Samsara Dashboard. **By default**: empty. This can be set or updated through the Samsara Dashboard or the API at any time. Inputs 3-10 are only available on gateways with an attached aux expander.
     * @type {string}
     * @memberof UpdateVehicleRequest
     */
    auxInputType9?: UpdateVehicleRequestAuxInputType9Enum;
    /**
     * A manual override for the vehicle's engine hours. You may only override a vehicle's engine hours if it cannot be read from on-board diagnostics. When you provide a manual engine hours override, Samsara will begin updating a vehicle's engine hours based on when the Samsara Vehicle Gateway is recieving power or not.
     * @type {number}
     * @memberof UpdateVehicleRequest
     */
    engineHours?: number;
    /**
     * The <a href="/docs/external-ids" target="_blank">external IDs</a> for the given object.
     * @type {{ [key: string]: string; }}
     * @memberof UpdateVehicleRequest
     */
    externalIds?: { [key: string]: string; };
    /**
     * The serial number of the gateway.
     * @type {string}
     * @memberof UpdateVehicleRequest
     */
    gatewaySerial?: string;
    /**
     * The harsh acceleration setting type. This setting influences the acceleration sensitivity from which a <a href="https://kb.samsara.com/hc/en-us/articles/360043051792-Safety-Event-Overview" target="_blank">harsh event</a> is triggered. **By default**, this setting is inferred by the Samsara Vehicle Gateway from the engine computer, but it may be set or updated through the Samsara Dashboard or the API at any time. If set to `off`, then no acceleration based harsh events are triggered for the vehicle.
     * @type {string}
     * @memberof UpdateVehicleRequest
     */
    harshAccelerationSettingType?: UpdateVehicleRequestHarshAccelerationSettingTypeEnum;
    /**
     * The license plate of the Vehicle. **By default**: empty. Can be set or updated through the Samsara Dashboard or the API at any time.
     * @type {string}
     * @memberof UpdateVehicleRequest
     */
    licensePlate?: string;
    /**
     * The human-readable name of the Vehicle. This is set by a fleet administrator and will appear in both Samsara’s cloud dashboard as well as the Samsara Driver mobile app. **By default**, this name is the serial number of the Samsara Vehicle Gateway. It can be set or updated through the Samsara Dashboard or through the API at any time.
     * @type {string}
     * @memberof UpdateVehicleRequest
     */
    name?: string;
    /**
     * These are generic notes about the Vehicle. Empty by default. Can be set or updated through the Samsara Dashboard or the API at any time.
     * @type {string}
     * @memberof UpdateVehicleRequest
     */
    notes?: string;
    /**
     * A manual override for the vehicle's odometer. You may only override a vehicle's odometer if it cannot be read from on-board diagnostics. When you provide a manual odometer override, Samsara will begin updating a vehicle's odometer using GPS distance traveled since this override was set. See <a href="https://kb.samsara.com/hc/en-us/articles/115005273667" target="_blank">here</a> for more details.
     * @type {number}
     * @memberof UpdateVehicleRequest
     */
    odometerMeters?: number;
    /**
     * ID for the static assigned driver of the vehicle. Setting the value to 0 will unassign the current driver.
     * @type {string}
     * @memberof UpdateVehicleRequest
     */
    staticAssignedDriverId?: string;
    /**
     * An array of IDs of tags to associate with this vehicle.
     * @type {Array<string>}
     * @memberof UpdateVehicleRequest
     */
    tagIds?: Array<string>;
    /**
     * The VIN of the Vehicle. Most of the time, this will be automatically read from the engine computer by the Samsara Vehicle Gateway. It will be empty if it cannot be read. It can be set or updated through the Samsara Dashboard or the API at any time.
     * @type {string}
     * @memberof UpdateVehicleRequest
     */
    vin?: string;
}

/**
* @export
* @enum {string}
*/
export enum UpdateVehicleRequestAuxInputType1Enum {
    None = 'none',
    EmergencyLights = 'emergencyLights',
    EmergencyAlarm = 'emergencyAlarm',
    StopPaddle = 'stopPaddle',
    PowerTakeOff = 'powerTakeOff',
    Plow = 'plow',
    Sweeper = 'sweeper',
    Salter = 'salter',
    Reefer = 'reefer',
    Door = 'door',
    Boom = 'boom',
    AuxiliaryEngine = 'auxiliaryEngine',
    Generator = 'generator',
    EightWayLights = 'eightWayLights'
}/**
* @export
* @enum {string}
*/
export enum UpdateVehicleRequestAuxInputType10Enum {
    None = 'none',
    EmergencyLights = 'emergencyLights',
    EmergencyAlarm = 'emergencyAlarm',
    StopPaddle = 'stopPaddle',
    PowerTakeOff = 'powerTakeOff',
    Plow = 'plow',
    Sweeper = 'sweeper',
    Salter = 'salter',
    Reefer = 'reefer',
    Door = 'door',
    Boom = 'boom',
    AuxiliaryEngine = 'auxiliaryEngine',
    Generator = 'generator',
    EightWayLights = 'eightWayLights'
}/**
* @export
* @enum {string}
*/
export enum UpdateVehicleRequestAuxInputType2Enum {
    None = 'none',
    EmergencyLights = 'emergencyLights',
    EmergencyAlarm = 'emergencyAlarm',
    StopPaddle = 'stopPaddle',
    PowerTakeOff = 'powerTakeOff',
    Plow = 'plow',
    Sweeper = 'sweeper',
    Salter = 'salter',
    Reefer = 'reefer',
    Door = 'door',
    Boom = 'boom',
    AuxiliaryEngine = 'auxiliaryEngine',
    Generator = 'generator',
    EightWayLights = 'eightWayLights'
}/**
* @export
* @enum {string}
*/
export enum UpdateVehicleRequestAuxInputType3Enum {
    None = 'none',
    EmergencyLights = 'emergencyLights',
    EmergencyAlarm = 'emergencyAlarm',
    StopPaddle = 'stopPaddle',
    PowerTakeOff = 'powerTakeOff',
    Plow = 'plow',
    Sweeper = 'sweeper',
    Salter = 'salter',
    Reefer = 'reefer',
    Door = 'door',
    Boom = 'boom',
    AuxiliaryEngine = 'auxiliaryEngine',
    Generator = 'generator',
    EightWayLights = 'eightWayLights'
}/**
* @export
* @enum {string}
*/
export enum UpdateVehicleRequestAuxInputType4Enum {
    None = 'none',
    EmergencyLights = 'emergencyLights',
    EmergencyAlarm = 'emergencyAlarm',
    StopPaddle = 'stopPaddle',
    PowerTakeOff = 'powerTakeOff',
    Plow = 'plow',
    Sweeper = 'sweeper',
    Salter = 'salter',
    Reefer = 'reefer',
    Door = 'door',
    Boom = 'boom',
    AuxiliaryEngine = 'auxiliaryEngine',
    Generator = 'generator',
    EightWayLights = 'eightWayLights'
}/**
* @export
* @enum {string}
*/
export enum UpdateVehicleRequestAuxInputType5Enum {
    None = 'none',
    EmergencyLights = 'emergencyLights',
    EmergencyAlarm = 'emergencyAlarm',
    StopPaddle = 'stopPaddle',
    PowerTakeOff = 'powerTakeOff',
    Plow = 'plow',
    Sweeper = 'sweeper',
    Salter = 'salter',
    Reefer = 'reefer',
    Door = 'door',
    Boom = 'boom',
    AuxiliaryEngine = 'auxiliaryEngine',
    Generator = 'generator',
    EightWayLights = 'eightWayLights'
}/**
* @export
* @enum {string}
*/
export enum UpdateVehicleRequestAuxInputType6Enum {
    None = 'none',
    EmergencyLights = 'emergencyLights',
    EmergencyAlarm = 'emergencyAlarm',
    StopPaddle = 'stopPaddle',
    PowerTakeOff = 'powerTakeOff',
    Plow = 'plow',
    Sweeper = 'sweeper',
    Salter = 'salter',
    Reefer = 'reefer',
    Door = 'door',
    Boom = 'boom',
    AuxiliaryEngine = 'auxiliaryEngine',
    Generator = 'generator',
    EightWayLights = 'eightWayLights'
}/**
* @export
* @enum {string}
*/
export enum UpdateVehicleRequestAuxInputType7Enum {
    None = 'none',
    EmergencyLights = 'emergencyLights',
    EmergencyAlarm = 'emergencyAlarm',
    StopPaddle = 'stopPaddle',
    PowerTakeOff = 'powerTakeOff',
    Plow = 'plow',
    Sweeper = 'sweeper',
    Salter = 'salter',
    Reefer = 'reefer',
    Door = 'door',
    Boom = 'boom',
    AuxiliaryEngine = 'auxiliaryEngine',
    Generator = 'generator',
    EightWayLights = 'eightWayLights'
}/**
* @export
* @enum {string}
*/
export enum UpdateVehicleRequestAuxInputType8Enum {
    None = 'none',
    EmergencyLights = 'emergencyLights',
    EmergencyAlarm = 'emergencyAlarm',
    StopPaddle = 'stopPaddle',
    PowerTakeOff = 'powerTakeOff',
    Plow = 'plow',
    Sweeper = 'sweeper',
    Salter = 'salter',
    Reefer = 'reefer',
    Door = 'door',
    Boom = 'boom',
    AuxiliaryEngine = 'auxiliaryEngine',
    Generator = 'generator',
    EightWayLights = 'eightWayLights'
}/**
* @export
* @enum {string}
*/
export enum UpdateVehicleRequestAuxInputType9Enum {
    None = 'none',
    EmergencyLights = 'emergencyLights',
    EmergencyAlarm = 'emergencyAlarm',
    StopPaddle = 'stopPaddle',
    PowerTakeOff = 'powerTakeOff',
    Plow = 'plow',
    Sweeper = 'sweeper',
    Salter = 'salter',
    Reefer = 'reefer',
    Door = 'door',
    Boom = 'boom',
    AuxiliaryEngine = 'auxiliaryEngine',
    Generator = 'generator',
    EightWayLights = 'eightWayLights'
}/**
* @export
* @enum {string}
*/
export enum UpdateVehicleRequestHarshAccelerationSettingTypeEnum {
    PassengerCar = 'passengerCar',
    LightTruck = 'lightTruck',
    HeavyDuty = 'heavyDuty',
    Off = 'off',
    Automatic = 'automatic'
}

export function UpdateVehicleRequestFromJSON(json: any): UpdateVehicleRequest {
    return UpdateVehicleRequestFromJSONTyped(json, false);
}

export function UpdateVehicleRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateVehicleRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'attributes': !exists(json, 'attributes') ? undefined : ((json['attributes'] as Array<any>).map(AttributeTinyFromJSON)),
        'auxInputType1': !exists(json, 'auxInputType1') ? undefined : json['auxInputType1'],
        'auxInputType10': !exists(json, 'auxInputType10') ? undefined : json['auxInputType10'],
        'auxInputType2': !exists(json, 'auxInputType2') ? undefined : json['auxInputType2'],
        'auxInputType3': !exists(json, 'auxInputType3') ? undefined : json['auxInputType3'],
        'auxInputType4': !exists(json, 'auxInputType4') ? undefined : json['auxInputType4'],
        'auxInputType5': !exists(json, 'auxInputType5') ? undefined : json['auxInputType5'],
        'auxInputType6': !exists(json, 'auxInputType6') ? undefined : json['auxInputType6'],
        'auxInputType7': !exists(json, 'auxInputType7') ? undefined : json['auxInputType7'],
        'auxInputType8': !exists(json, 'auxInputType8') ? undefined : json['auxInputType8'],
        'auxInputType9': !exists(json, 'auxInputType9') ? undefined : json['auxInputType9'],
        'engineHours': !exists(json, 'engineHours') ? undefined : json['engineHours'],
        'externalIds': !exists(json, 'externalIds') ? undefined : json['externalIds'],
        'gatewaySerial': !exists(json, 'gatewaySerial') ? undefined : json['gatewaySerial'],
        'harshAccelerationSettingType': !exists(json, 'harshAccelerationSettingType') ? undefined : json['harshAccelerationSettingType'],
        'licensePlate': !exists(json, 'licensePlate') ? undefined : json['licensePlate'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'notes': !exists(json, 'notes') ? undefined : json['notes'],
        'odometerMeters': !exists(json, 'odometerMeters') ? undefined : json['odometerMeters'],
        'staticAssignedDriverId': !exists(json, 'staticAssignedDriverId') ? undefined : json['staticAssignedDriverId'],
        'tagIds': !exists(json, 'tagIds') ? undefined : json['tagIds'],
        'vin': !exists(json, 'vin') ? undefined : json['vin'],
    };
}

export function UpdateVehicleRequestToJSON(value?: UpdateVehicleRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'attributes': value.attributes === undefined ? undefined : ((value.attributes as Array<any>).map(AttributeTinyToJSON)),
        'auxInputType1': value.auxInputType1,
        'auxInputType10': value.auxInputType10,
        'auxInputType2': value.auxInputType2,
        'auxInputType3': value.auxInputType3,
        'auxInputType4': value.auxInputType4,
        'auxInputType5': value.auxInputType5,
        'auxInputType6': value.auxInputType6,
        'auxInputType7': value.auxInputType7,
        'auxInputType8': value.auxInputType8,
        'auxInputType9': value.auxInputType9,
        'engineHours': value.engineHours,
        'externalIds': value.externalIds,
        'gatewaySerial': value.gatewaySerial,
        'harshAccelerationSettingType': value.harshAccelerationSettingType,
        'licensePlate': value.licensePlate,
        'name': value.name,
        'notes': value.notes,
        'odometerMeters': value.odometerMeters,
        'staticAssignedDriverId': value.staticAssignedDriverId,
        'tagIds': value.tagIds,
        'vin': value.vin,
    };
}


